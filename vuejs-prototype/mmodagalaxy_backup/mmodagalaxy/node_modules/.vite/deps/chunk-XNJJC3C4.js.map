{
  "version": 3,
  "sources": ["../../@bokeh/bokehjs/build/js/lib/core/settings.js", "../../@bokeh/bokehjs/build/js/lib/core/visuals/visual.js", "../../@bokeh/bokehjs/build/js/lib/core/util/defer.js", "../../@bokeh/bokehjs/build/js/lib/core/signaling.js", "../../@bokeh/bokehjs/build/js/lib/core/kinds.js", "../../@bokeh/bokehjs/build/js/lib/core/util/refs.js", "../../@bokeh/bokehjs/build/js/lib/core/enums.js", "../../@bokeh/bokehjs/build/js/lib/core/util/eq.js", "../../@bokeh/bokehjs/build/js/lib/core/util/bitset.js", "../../@bokeh/bokehjs/build/js/lib/core/types.js", "../../@bokeh/bokehjs/build/js/lib/core/util/platform.js", "../../@bokeh/bokehjs/build/js/lib/core/vectorization.js", "../../@bokeh/bokehjs/build/js/lib/core/util/cloneable.js", "../../@bokeh/bokehjs/build/js/lib/core/util/iterator.js", "../../@bokeh/bokehjs/build/js/lib/core/util/buffer.js", "../../@bokeh/bokehjs/build/js/lib/core/serialization/buffer.js", "../../@bokeh/bokehjs/build/js/lib/core/serialization/serializer.js", "../../@bokeh/bokehjs/build/js/lib/core/util/ndarray.js", "../../@bokeh/bokehjs/build/js/lib/core/diagnostics.js", "../../@bokeh/bokehjs/build/js/lib/core/uniforms.js", "../../@bokeh/bokehjs/build/js/lib/core/properties.js", "../../@bokeh/bokehjs/build/js/lib/core/property_mixins.js", "../../@bokeh/bokehjs/build/js/lib/core/visuals/line.js", "../../@bokeh/bokehjs/build/js/lib/models/glyphs/webgl/base_line.js"],
  "sourcesContent": ["export class Settings {\n    static __name__ = \"Settings\";\n    _dev = false;\n    _wireframe = false;\n    _force_webgl = false;\n    _force_fields = false;\n    set dev(dev) {\n        this._dev = dev;\n    }\n    get dev() {\n        return this._dev;\n    }\n    set wireframe(wireframe) {\n        this._wireframe = wireframe;\n    }\n    get wireframe() {\n        return this._wireframe;\n    }\n    set force_webgl(force_webgl) {\n        this._force_webgl = force_webgl;\n    }\n    get force_webgl() {\n        return this._force_webgl;\n    }\n    set force_fields(force_fields) {\n        this._force_fields = force_fields;\n    }\n    get force_fields() {\n        return this._force_fields;\n    }\n}\nexport const settings = new Settings();\n//# sourceMappingURL=settings.js.map", "const global_css_prefix = \"--bk-\";\nexport class VisualProperties {\n    obj;\n    prefix;\n    static __name__ = \"VisualProperties\";\n    _props;\n    *[Symbol.iterator]() {\n        yield* this._props;\n    }\n    css_prefix;\n    constructor(obj, prefix = \"\") {\n        this.obj = obj;\n        this.prefix = prefix;\n        this.css_prefix = `${global_css_prefix}${prefix.replaceAll(\"_\", \"-\")}`;\n        const self = this;\n        this._props = [];\n        for (const attr of this.attrs) {\n            const prop = obj.model.properties[prefix + attr];\n            prop.change.connect(() => this.update());\n            self[attr] = prop;\n            this._props.push(prop);\n        }\n    }\n    update() { }\n    _get_css_value(name) {\n        const style = getComputedStyle(this.obj.el);\n        return style.getPropertyValue(`${this.css_prefix}${name}`);\n    }\n}\nexport class VisualUniforms {\n    obj;\n    prefix;\n    static __name__ = \"VisualUniforms\";\n    *[Symbol.iterator]() {\n        for (const attr of this.attrs) {\n            yield this.obj.model.properties[this.prefix + attr];\n        }\n    }\n    constructor(obj, prefix = \"\") {\n        this.obj = obj;\n        this.prefix = prefix;\n        for (const attr of this.attrs) {\n            Object.defineProperty(this, attr, {\n                get() {\n                    return obj[prefix + attr];\n                },\n            });\n        }\n    }\n    update() { }\n}\n//# sourceMappingURL=visual.js.map", "const channel = new MessageChannel();\nconst tasks = new Map();\nchannel.port1.onmessage = (event) => {\n    const handle = event.data;\n    const fn = tasks.get(handle);\n    if (fn != null) {\n        try {\n            fn();\n        }\n        finally {\n            tasks.delete(handle);\n        }\n    }\n};\nlet counter = 1;\nexport function defer() {\n    return new Promise((resolve) => {\n        const handle = counter++;\n        tasks.set(handle, resolve);\n        channel.port2.postMessage(handle);\n    });\n}\nexport function delay(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\nexport async function poll(fn, interval = 50, timeout = 500) {\n    while (!fn() && timeout >= 0) {\n        await delay(interval);\n        timeout -= interval;\n    }\n}\nexport function paint() {\n    return new Promise((resolve) => {\n        requestAnimationFrame(() => resolve());\n    });\n}\nexport function idle() {\n    return new Promise((resolve) => {\n        requestIdleCallback(() => resolve());\n    });\n}\n//# sourceMappingURL=defer.js.map", "// Based on https://github.com/phosphorjs/phosphor/blob/master/packages/signaling/src/index.ts\nimport { defer } from \"./util/defer\";\nimport { find, remove_by } from \"./util/array\";\nexport class Signal {\n    sender;\n    name;\n    static __name__ = \"Signal\";\n    constructor(sender, name) {\n        this.sender = sender;\n        this.name = name;\n    }\n    connect(slot, context = null) {\n        if (!receivers_for_sender.has(this.sender)) {\n            receivers_for_sender.set(this.sender, []);\n        }\n        const receivers = receivers_for_sender.get(this.sender);\n        if (find_connection(receivers, this, slot, context) != null) {\n            return false;\n        }\n        const receiver = context ?? slot;\n        if (!senders_for_receiver.has(receiver)) {\n            senders_for_receiver.set(receiver, []);\n        }\n        const senders = senders_for_receiver.get(receiver);\n        const connection = { signal: this, slot, context };\n        receivers.push(connection);\n        senders.push(connection);\n        return true;\n    }\n    disconnect(slot, context = null) {\n        const receivers = receivers_for_sender.get(this.sender);\n        if (receivers == null || receivers.length === 0) {\n            return false;\n        }\n        const connection = find_connection(receivers, this, slot, context);\n        if (connection == null) {\n            return false;\n        }\n        const receiver = context ?? slot;\n        const senders = senders_for_receiver.get(receiver);\n        connection.signal = null;\n        schedule_cleanup(receivers);\n        schedule_cleanup(senders);\n        return true;\n    }\n    emit(args) {\n        const receivers = receivers_for_sender.get(this.sender) ?? [];\n        for (const { signal, slot, context } of receivers) {\n            if (signal === this) {\n                slot.call(context, args, this.sender);\n            }\n        }\n    }\n}\nexport class Signal0 extends Signal {\n    static __name__ = \"Signal0\";\n    emit() {\n        super.emit(undefined);\n    }\n}\n(function (Signal) {\n    function disconnect_between(sender, receiver) {\n        const receivers = receivers_for_sender.get(sender);\n        if (receivers == null || receivers.length === 0) {\n            return;\n        }\n        const senders = senders_for_receiver.get(receiver);\n        if (senders == null || senders.length === 0) {\n            return;\n        }\n        for (const connection of senders) {\n            if (connection.signal == null) {\n                return;\n            }\n            if (connection.signal.sender === sender) {\n                connection.signal = null;\n            }\n        }\n        schedule_cleanup(receivers);\n        schedule_cleanup(senders);\n    }\n    Signal.disconnect_between = disconnect_between;\n    function disconnect_sender(sender) {\n        const receivers = receivers_for_sender.get(sender);\n        if (receivers == null || receivers.length === 0) {\n            return;\n        }\n        for (const connection of receivers) {\n            if (connection.signal == null) {\n                return;\n            }\n            const receiver = connection.context ?? connection.slot;\n            connection.signal = null;\n            schedule_cleanup(senders_for_receiver.get(receiver));\n        }\n        schedule_cleanup(receivers);\n    }\n    Signal.disconnect_sender = disconnect_sender;\n    function disconnect_receiver(receiver, slot, except_senders) {\n        const senders = senders_for_receiver.get(receiver);\n        if (senders == null || senders.length === 0) {\n            return;\n        }\n        for (const connection of senders) {\n            if (connection.signal == null) {\n                return;\n            }\n            if (slot != null && connection.slot != slot) {\n                continue;\n            }\n            const sender = connection.signal.sender;\n            if (except_senders != null && except_senders.has(sender)) {\n                continue;\n            }\n            connection.signal = null;\n            schedule_cleanup(receivers_for_sender.get(sender));\n        }\n        schedule_cleanup(senders);\n    }\n    Signal.disconnect_receiver = disconnect_receiver;\n    function disconnect_all(obj) {\n        const receivers = receivers_for_sender.get(obj);\n        if (receivers != null && receivers.length !== 0) {\n            for (const connection of receivers) {\n                connection.signal = null;\n            }\n            schedule_cleanup(receivers);\n        }\n        const senders = senders_for_receiver.get(obj);\n        if (senders != null && senders.length !== 0) {\n            for (const connection of senders) {\n                connection.signal = null;\n            }\n            schedule_cleanup(senders);\n        }\n    }\n    Signal.disconnect_all = disconnect_all;\n})(Signal || (Signal = {}));\nexport function Signalable() {\n    return class {\n        connect(signal, slot) {\n            return signal.connect(slot, this);\n        }\n        disconnect(signal, slot) {\n            return signal.disconnect(slot, this);\n        }\n    };\n}\n/** @internal */\nexport const receivers_for_sender = new WeakMap();\nconst senders_for_receiver = new WeakMap();\nfunction find_connection(conns, signal, slot, context) {\n    return find(conns, conn => conn.signal === signal && conn.slot === slot && conn.context === context);\n}\nconst dirty_set = new Set();\nfunction schedule_cleanup(connections) {\n    if (dirty_set.size == 0) {\n        void (async () => {\n            await defer();\n            cleanup_dirty_set();\n        })();\n    }\n    dirty_set.add(connections);\n}\nfunction cleanup_dirty_set() {\n    for (const connections of dirty_set) {\n        remove_by(connections, (connection) => connection.signal == null);\n    }\n    dirty_set.clear();\n}\n//# sourceMappingURL=signaling.js.map", "import * as tp from \"./util/types\";\nimport { is_Color } from \"./util/color\";\nimport { keys, values, typed_values, typed_entries, is_empty, PlainObjectProxy } from \"./util/object\";\nimport { has_refs } from \"./util/refs\";\nconst ESMap = globalThis.Map;\nconst ESSet = globalThis.Set;\nconst DOMNode = globalThis.Node;\nexport class Kind {\n    static __name__ = \"Kind\";\n    __type__;\n}\nexport var Kinds;\n(function (Kinds) {\n    class Primitive extends Kind {\n        static __name__ = \"Primitive\";\n        may_have_refs() {\n            return false;\n        }\n    }\n    Kinds.Primitive = Primitive;\n    class Any extends Primitive {\n        static __name__ = \"Any\";\n        valid(value) {\n            return value !== undefined;\n        }\n        toString() {\n            return \"Any\";\n        }\n        may_have_refs() {\n            return true;\n        }\n    }\n    Kinds.Any = Any;\n    class Unknown extends Primitive {\n        static __name__ = \"Unknown\";\n        valid(value) {\n            return value !== undefined;\n        }\n        toString() {\n            return \"Unknown\";\n        }\n        may_have_refs() {\n            return true;\n        }\n    }\n    Kinds.Unknown = Unknown;\n    class Bool extends Primitive {\n        static __name__ = \"Bool\";\n        valid(value) {\n            return tp.isBoolean(value);\n        }\n        toString() {\n            return \"Bool\";\n        }\n    }\n    Kinds.Bool = Bool;\n    class Ref extends Kind {\n        obj_type;\n        static __name__ = \"Ref\";\n        constructor(obj_type) {\n            super();\n            this.obj_type = obj_type;\n        }\n        valid(value) {\n            return value instanceof this.obj_type;\n        }\n        toString() {\n            const tp = this.obj_type;\n            // NOTE: `__name__` is injected by a compiler transform\n            const name = tp.__name__ ?? tp.toString();\n            return `Ref(${name})`;\n        }\n        may_have_refs() {\n            const { obj_type } = this;\n            return has_refs in obj_type ? obj_type[has_refs] : true;\n        }\n    }\n    Kinds.Ref = Ref;\n    class AnyRef extends Kind {\n        static __name__ = \"AnyRef\";\n        valid(value) {\n            return tp.isObject(value);\n        }\n        toString() {\n            return \"AnyRef\";\n        }\n        may_have_refs() {\n            return true;\n        }\n    }\n    Kinds.AnyRef = AnyRef;\n    class Float extends Primitive {\n        static __name__ = \"Float\";\n        valid(value) {\n            return tp.isNumber(value);\n        }\n        toString() {\n            return \"Float\";\n        }\n    }\n    Kinds.Float = Float;\n    class Int extends Float {\n        static __name__ = \"Int\";\n        valid(value) {\n            return super.valid(value) && tp.isInteger(value);\n        }\n        toString() {\n            return \"Int\";\n        }\n    }\n    Kinds.Int = Int;\n    class Percent extends Float {\n        static __name__ = \"Percent\";\n        valid(value) {\n            return super.valid(value) && 0 <= value && value <= 1;\n        }\n        toString() {\n            return \"Percent\";\n        }\n    }\n    Kinds.Percent = Percent;\n    class Or extends Kind {\n        types;\n        static __name__ = \"Or\";\n        constructor(types) {\n            super();\n            this.types = types;\n            this.types = types;\n        }\n        valid(value) {\n            return this.types.some((type) => type.valid(value));\n        }\n        toString() {\n            return `Or(${this.types.map((type) => type.toString()).join(\", \")})`;\n        }\n        may_have_refs() {\n            return this.types.some((type) => type.may_have_refs());\n        }\n    }\n    Kinds.Or = Or;\n    class And extends Kind {\n        static __name__ = \"And\";\n        types;\n        constructor(type0, type1) {\n            super();\n            this.types = [type0, type1];\n        }\n        valid(value) {\n            return this.types.some((type) => type.valid(value)); // TODO not sure if this is correct, probably not\n        }\n        toString() {\n            return `And(${this.types.map((type) => type.toString()).join(\", \")})`;\n        }\n        may_have_refs() {\n            return this.types.some((type) => type.may_have_refs());\n        }\n    }\n    Kinds.And = And;\n    class Tuple extends Kind {\n        types;\n        static __name__ = \"Tuple\";\n        constructor(types) {\n            super();\n            this.types = types;\n            this.types = types;\n        }\n        valid(value) {\n            if (!tp.isArray(value)) {\n                return false;\n            }\n            for (let i = 0; i < this.types.length; i++) {\n                const type = this.types[i];\n                const item = value[i];\n                if (!type.valid(item)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        toString() {\n            return `Tuple(${this.types.map((type) => type.toString()).join(\", \")})`;\n        }\n        may_have_refs() {\n            return this.types.some((type) => type.may_have_refs());\n        }\n    }\n    Kinds.Tuple = Tuple;\n    class Struct extends Kind {\n        struct_type;\n        static __name__ = \"Struct\";\n        constructor(struct_type) {\n            super();\n            this.struct_type = struct_type;\n        }\n        valid(value) {\n            if (!tp.isPlainObject(value)) {\n                return false;\n            }\n            const struct_type_proxy = new PlainObjectProxy(this.struct_type);\n            for (const key of keys(value)) {\n                if (!struct_type_proxy.has(key)) {\n                    return false;\n                }\n            }\n            for (const [key, item_type] of struct_type_proxy) {\n                const item = value[key];\n                if (!item_type.valid(item)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        toString() {\n            const items = typed_entries(this.struct_type).map(([key, kind]) => `${key.toString()}: ${kind}`).join(\", \");\n            return `Struct({${items}})`;\n        }\n        may_have_refs() {\n            return typed_values(this.struct_type).some((kind) => kind.may_have_refs());\n        }\n    }\n    Kinds.Struct = Struct;\n    class PartialStruct extends Kind {\n        struct_type;\n        static __name__ = \"PartialStruct\";\n        constructor(struct_type) {\n            super();\n            this.struct_type = struct_type;\n        }\n        valid(value) {\n            if (!tp.isPlainObject(value)) {\n                return false;\n            }\n            const value_proxy = new PlainObjectProxy(value);\n            const struct_type_proxy = new PlainObjectProxy(this.struct_type);\n            for (const key of value_proxy.keys()) {\n                if (!struct_type_proxy.has(key)) {\n                    return false;\n                }\n            }\n            for (const [key, item_type] of struct_type_proxy) {\n                const item = value_proxy.get(key);\n                if (item === undefined) {\n                    continue;\n                }\n                if (!item_type.valid(item)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        toString() {\n            const items = typed_entries(this.struct_type).map(([key, kind]) => `${key.toString()}?: ${kind}`).join(\", \");\n            return `Struct({${items}})`;\n        }\n        may_have_refs() {\n            return typed_values(this.struct_type).some((kind) => kind.may_have_refs());\n        }\n    }\n    Kinds.PartialStruct = PartialStruct;\n    class Iterable extends Kind {\n        item_type;\n        static __name__ = \"Iterable\";\n        constructor(item_type) {\n            super();\n            this.item_type = item_type;\n        }\n        valid(value) {\n            return tp.isIterable(value);\n        }\n        toString() {\n            return `Iterable(${this.item_type.toString()})`;\n        }\n        may_have_refs() {\n            return this.item_type.may_have_refs();\n        }\n    }\n    Kinds.Iterable = Iterable;\n    class Arrayable extends Kind {\n        item_type;\n        static __name__ = \"Arrayable\";\n        constructor(item_type) {\n            super();\n            this.item_type = item_type;\n        }\n        valid(value) {\n            return tp.isArray(value) || tp.isTypedArray(value); // TODO: too specific\n        }\n        toString() {\n            return `Arrayable(${this.item_type.toString()})`;\n        }\n        may_have_refs() {\n            return this.item_type.may_have_refs();\n        }\n    }\n    Kinds.Arrayable = Arrayable;\n    class List extends Kind {\n        item_type;\n        static __name__ = \"List\";\n        constructor(item_type) {\n            super();\n            this.item_type = item_type;\n        }\n        valid(value) {\n            return tp.isArray(value) && value.every((item) => this.item_type.valid(item));\n        }\n        toString() {\n            return `List(${this.item_type.toString()})`;\n        }\n        may_have_refs() {\n            return this.item_type.may_have_refs();\n        }\n    }\n    Kinds.List = List;\n    class NonEmptyList extends List {\n        static __name__ = \"NonEmptyList\";\n        valid(value) {\n            return super.valid(value) && value.length != 0;\n        }\n        toString() {\n            return `NonEmptyList(${this.item_type.toString()})`;\n        }\n    }\n    Kinds.NonEmptyList = NonEmptyList;\n    class Null extends Primitive {\n        static __name__ = \"Null\";\n        valid(value) {\n            return value === null;\n        }\n        toString() {\n            return \"Null\";\n        }\n    }\n    Kinds.Null = Null;\n    class Nullable extends Kind {\n        base_type;\n        static __name__ = \"Nullable\";\n        constructor(base_type) {\n            super();\n            this.base_type = base_type;\n        }\n        valid(value) {\n            return value === null || this.base_type.valid(value);\n        }\n        toString() {\n            return `Nullable(${this.base_type.toString()})`;\n        }\n        may_have_refs() {\n            return this.base_type.may_have_refs();\n        }\n    }\n    Kinds.Nullable = Nullable;\n    class Opt extends Kind {\n        base_type;\n        static __name__ = \"Opt\";\n        constructor(base_type) {\n            super();\n            this.base_type = base_type;\n        }\n        valid(value) {\n            return value === undefined || this.base_type.valid(value);\n        }\n        toString() {\n            return `Opt(${this.base_type.toString()})`;\n        }\n        may_have_refs() {\n            return this.base_type.may_have_refs();\n        }\n    }\n    Kinds.Opt = Opt;\n    class Bytes extends Kind {\n        static __name__ = \"Bytes\";\n        valid(value) {\n            return value instanceof ArrayBuffer;\n        }\n        toString() {\n            return \"Bytes\";\n        }\n        may_have_refs() {\n            return false;\n        }\n    }\n    Kinds.Bytes = Bytes;\n    class Str extends Primitive {\n        static __name__ = \"Str\";\n        valid(value) {\n            return tp.isString(value);\n        }\n        toString() {\n            return \"Str\";\n        }\n    }\n    Kinds.Str = Str;\n    class Regex extends Str {\n        regex;\n        static __name__ = \"Regex\";\n        constructor(regex) {\n            super();\n            this.regex = regex;\n        }\n        valid(value) {\n            return super.valid(value) && this.regex.test(value);\n        }\n        toString() {\n            return `Regex(${this.regex.toString()})`;\n        }\n    }\n    Kinds.Regex = Regex;\n    class Enum extends Primitive {\n        static __name__ = \"Enum\";\n        values;\n        constructor(values) {\n            super();\n            this.values = new ESSet(values);\n        }\n        valid(value) {\n            return this.values.has(value);\n        }\n        *[Symbol.iterator]() {\n            yield* this.values;\n        }\n        toString() {\n            return `Enum(${[...this.values].map((v) => v.toString()).join(\", \")})`;\n        }\n    }\n    Kinds.Enum = Enum;\n    class Dict extends Kind {\n        item_type;\n        static __name__ = \"Dict\";\n        constructor(item_type) {\n            super();\n            this.item_type = item_type;\n        }\n        valid(value) {\n            if (!(value instanceof ESMap || tp.isPlainObject(value))) {\n                return false;\n            }\n            for (const item of values(value)) {\n                if (!this.item_type.valid(item)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        toString() {\n            return `Dict(${this.item_type.toString()})`;\n        }\n        may_have_refs() {\n            return this.item_type.may_have_refs();\n        }\n    }\n    Kinds.Dict = Dict;\n    class Mapping extends Kind {\n        key_type;\n        item_type;\n        static __name__ = \"Mapping\";\n        constructor(key_type, item_type) {\n            super();\n            this.key_type = key_type;\n            this.item_type = item_type;\n        }\n        coerce(value) {\n            // HACK accommodate for deserialization of {type: \"map\"}\n            if (tp.isPlainObject(value) && is_empty(value)) {\n                return new ESMap();\n            }\n            else {\n                return value;\n            }\n        }\n        valid(value) {\n            if (!(value instanceof ESMap)) {\n                return false;\n            }\n            for (const [key, item] of value.entries()) {\n                if (!(this.key_type.valid(key) && this.item_type.valid(item))) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        toString() {\n            return `Mapping(${this.key_type.toString()}, ${this.item_type.toString()})`;\n        }\n        may_have_refs() {\n            return this.key_type.may_have_refs() || this.item_type.may_have_refs();\n        }\n    }\n    Kinds.Mapping = Mapping;\n    class Set extends Kind {\n        item_type;\n        static __name__ = \"Set\";\n        constructor(item_type) {\n            super();\n            this.item_type = item_type;\n        }\n        valid(value) {\n            if (!(value instanceof ESSet)) {\n                return false;\n            }\n            for (const item of value) {\n                if (!this.item_type.valid(item)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        toString() {\n            return `Set(${this.item_type.toString()})`;\n        }\n        may_have_refs() {\n            return this.item_type.may_have_refs();\n        }\n    }\n    Kinds.Set = Set;\n    class Color extends Kind {\n        static __name__ = \"Color\";\n        valid(value) {\n            return is_Color(value);\n        }\n        toString() {\n            return \"Color\";\n        }\n        may_have_refs() {\n            return false;\n        }\n    }\n    Kinds.Color = Color;\n    class CSSLength extends Str {\n        static __name__ = \"CSSLength\";\n        /*\n        override valid(value: unknown): value is string {\n          return super.valid(value) // TODO: && this._parse(value)\n        }\n        */\n        toString() {\n            return \"CSSLength\";\n        }\n    }\n    Kinds.CSSLength = CSSLength;\n    class Func extends Kind {\n        static __name__ = \"Func\";\n        valid(value) {\n            return tp.isFunction(value);\n        }\n        toString() {\n            return \"Func(...)\";\n        }\n        may_have_refs() {\n            return false;\n        }\n    }\n    Kinds.Func = Func;\n    class NonNegative extends Kind {\n        base_type;\n        static __name__ = \"NonNegative\";\n        constructor(base_type) {\n            super();\n            this.base_type = base_type;\n        }\n        valid(value) {\n            return this.base_type.valid(value) && value >= 0;\n        }\n        toString() {\n            return `NonNegative(${this.base_type.toString()})`;\n        }\n        may_have_refs() {\n            return this.base_type.may_have_refs();\n        }\n    }\n    Kinds.NonNegative = NonNegative;\n    class Positive extends Kind {\n        base_type;\n        static __name__ = \"Positive\";\n        constructor(base_type) {\n            super();\n            this.base_type = base_type;\n        }\n        valid(value) {\n            return this.base_type.valid(value) && value > 0;\n        }\n        toString() {\n            return `Positive(${this.base_type.toString()})`;\n        }\n        may_have_refs() {\n            return this.base_type.may_have_refs();\n        }\n    }\n    Kinds.Positive = Positive;\n    class Node extends Kind {\n        static __name__ = \"Node\";\n        valid(value) {\n            return value instanceof DOMNode;\n        }\n        toString() {\n            return \"Node\";\n        }\n        may_have_refs() {\n            return false;\n        }\n    }\n    Kinds.Node = Node;\n})(Kinds || (Kinds = {}));\nexport const Any = new Kinds.Any();\nexport const Unknown = new Kinds.Unknown();\nexport const Bool = new Kinds.Bool();\nexport const Float = new Kinds.Float();\nexport const Int = new Kinds.Int();\nexport const Bytes = new Kinds.Bytes();\nexport const Str = new Kinds.Str();\nexport const Regex = (regex) => new Kinds.Regex(regex);\nexport const Null = new Kinds.Null();\nexport const Nullable = (base_type) => new Kinds.Nullable(base_type);\nexport const Opt = (base_type) => new Kinds.Opt(base_type);\nexport const Or = (...types) => new Kinds.Or(types);\nexport const And = (type0, type1) => new Kinds.And(type0, type1);\nexport const Tuple = (...types) => new Kinds.Tuple(types);\nexport const Struct = (struct_type) => new Kinds.Struct(struct_type);\nexport const PartialStruct = (struct_type) => new Kinds.PartialStruct(struct_type);\nexport const Iterable = (item_type) => new Kinds.Iterable(item_type);\nexport const Arrayable = (item_type) => new Kinds.Arrayable(item_type);\nexport const List = (item_type) => new Kinds.List(item_type);\nexport const NonEmptyList = (item_type) => new Kinds.NonEmptyList(item_type);\nexport const Dict = (item_type) => new Kinds.Dict(item_type);\nexport const Mapping = (key_type, item_type) => new Kinds.Mapping(key_type, item_type);\nexport const Set = (item_type) => new Kinds.Set(item_type);\nexport const Enum = (...values) => new Kinds.Enum(values);\nexport const Ref = (obj_type) => new Kinds.Ref(obj_type);\nexport const AnyRef = () => new Kinds.AnyRef();\nexport const Func = () => new Kinds.Func();\nexport const Node = new Kinds.Node();\nexport const NonNegative = (base_type) => new Kinds.NonNegative(base_type);\nexport const Positive = (base_type) => new Kinds.Positive(base_type);\nexport const Percent = new Kinds.Percent();\nexport const Alpha = Percent;\nexport const Color = new Kinds.Color();\nexport const Auto = Enum(\"auto\");\nexport const CSSLength = new Kinds.CSSLength();\nexport const FontSize = Str;\nexport const Font = Str;\nexport const Angle = Float;\n// backwards compatibility aliases (these collide with built-in types)\n/** @deprecated */\nexport const Boolean = Bool;\n/** @deprecated */\nexport const String = Str;\n/** @deprecated */\nexport const Number = Float;\n/** @deprecated */\nexport const Array = List;\n/** @deprecated */\nexport const Map = Mapping;\n/** @deprecated */\nexport const Function = Func;\n//# sourceMappingURL=kinds.js.map", "import { isPlainObject, isObject } from \"./types\";\nexport function is_ref(obj) {\n    return isPlainObject(obj) && \"id\" in obj && !(\"type\" in obj);\n}\nexport const has_refs = Symbol(\"has_refs\");\nfunction _is_HasRefs(v) {\n    return has_refs in v;\n}\nexport function is_HasRefs(v) {\n    return isObject(v) && _is_HasRefs(v);\n}\nexport function may_have_refs(obj) {\n    if (_is_HasRefs(obj)) {\n        return obj[has_refs];\n    }\n    const type = obj.constructor;\n    if (is_HasRefs(type)) {\n        return type[has_refs];\n    }\n    return true;\n}\n//# sourceMappingURL=refs.js.map", "import { Enum } from \"./kinds\";\nexport const Align = Enum(\"start\", \"center\", \"end\");\nexport const HAlign = Enum(\"left\", \"center\", \"right\");\nexport const VAlign = Enum(\"top\", \"center\", \"bottom\");\nexport const Anchor = Enum(\"top_left\", \"top_center\", \"top_right\", \"center_left\", \"center_center\", \"center_right\", \"bottom_left\", \"bottom_center\", \"bottom_right\", \"top\", \"left\", \"center\", \"right\", \"bottom\");\nexport const AngleUnits = Enum(\"deg\", \"rad\", \"grad\", \"turn\");\nexport const AlternationPolicy = Enum(\"none\", \"even\", \"odd\", \"every\");\nexport const BoxOrigin = Enum(\"corner\", \"center\");\nexport const ButtonType = Enum(\"default\", \"primary\", \"success\", \"warning\", \"danger\", \"light\");\nexport const CalendarPosition = Enum(\"auto\", \"above\", \"below\");\nexport const Clock = Enum(\"12h\", \"24h\");\nexport const CoordinateUnits = Enum(\"canvas\", \"screen\", \"data\");\nexport const ContextWhich = Enum(\"start\", \"center\", \"end\", \"all\");\nexport const Dimension = Enum(\"width\", \"height\");\nexport const Dimensions = Enum(\"width\", \"height\", \"both\");\nexport const Direction = Enum(\"clock\", \"anticlock\");\nexport const Distribution = Enum(\"uniform\", \"normal\");\nexport const Face = Enum(\"front\", \"back\");\nexport const FlowMode = Enum(\"block\", \"inline\");\nexport const FontStyle = Enum(\"normal\", \"italic\", \"bold\", \"bold italic\");\nexport const HatchPatternType = Enum(\"blank\", \"dot\", \"ring\", \"horizontal_line\", \"vertical_line\", \"cross\", \"horizontal_dash\", \"vertical_dash\", \"spiral\", \"right_diagonal_line\", \"left_diagonal_line\", \"diagonal_cross\", \"right_diagonal_dash\", \"left_diagonal_dash\", \"horizontal_wave\", \"vertical_wave\", \"criss_cross\", \" \", \".\", \"o\", \"-\", \"|\", \"+\", '\"', \":\", \"@\", \"/\", \"\\\\\", \"x\", \",\", \"`\", \"v\", \">\", \"*\");\nexport const BuiltinFormatter = Enum(\"raw\", \"basic\", \"numeral\", \"printf\", \"datetime\");\nexport const HTTPMethod = Enum(\"POST\", \"GET\");\nexport const HexTileOrientation = Enum(\"pointytop\", \"flattop\");\nexport const HoverMode = Enum(\"mouse\", \"hline\", \"vline\");\nexport const ImageOrigin = Enum(\"bottom_left\", \"top_left\", \"bottom_right\", \"top_right\");\nexport const LatLon = Enum(\"lat\", \"lon\");\nexport const LegendClickPolicy = Enum(\"none\", \"hide\", \"mute\");\nexport const LegendLocation = Anchor;\nexport const LineCap = Enum(\"butt\", \"round\", \"square\");\nexport const LineDash = Enum(\"solid\", \"dashed\", \"dotted\", \"dotdash\", \"dashdot\");\nexport const LineJoin = Enum(\"miter\", \"round\", \"bevel\");\nexport const LinePolicy = Enum(\"prev\", \"next\", \"nearest\", \"interp\", \"none\");\nexport const Location = Enum(\"above\", \"below\", \"left\", \"right\");\nexport const Logo = Enum(\"normal\", \"grey\");\nexport const MapType = Enum(\"satellite\", \"roadmap\", \"terrain\", \"hybrid\");\nexport const MarkerType = Enum(\"asterisk\", \"circle\", \"circle_cross\", \"circle_dot\", \"circle_x\", \"circle_y\", \"cross\", \"dash\", \"diamond\", \"diamond_cross\", \"diamond_dot\", \"dot\", \"hex\", \"hex_dot\", \"inverted_triangle\", \"plus\", \"square\", \"square_cross\", \"square_dot\", \"square_pin\", \"square_x\", \"star\", \"star_dot\", \"triangle\", \"triangle_dot\", \"triangle_pin\", \"x\", \"y\");\nexport const MutedPolicy = Enum(\"show\", \"ignore\");\nexport const Orientation = Enum(\"vertical\", \"horizontal\");\nexport const OutlineShapeName = Enum(\"none\", \"box\", \"rectangle\", \"square\", \"circle\", \"ellipse\", \"trapezoid\", \"parallelogram\", \"diamond\", \"triangle\");\nexport const OutputBackend = Enum(\"canvas\", \"svg\", \"webgl\");\nexport const PaddingUnits = Enum(\"percent\", \"absolute\");\nexport const PanDirection = Enum(\"left\", \"right\", \"up\", \"down\", \"west\", \"east\", \"north\", \"south\");\nexport const Place = Enum(\"above\", \"below\", \"left\", \"right\", \"center\");\nexport const PointPolicy = Enum(\"snap_to_data\", \"follow_mouse\", \"none\");\nexport const RadiusDimension = Enum(\"x\", \"y\", \"max\", \"min\");\nexport const RenderLevel = Enum(\"image\", \"underlay\", \"glyph\", \"guide\", \"annotation\", \"overlay\");\nexport const ResetPolicy = Enum(\"standard\", \"event_only\");\nexport const ResolutionType = Enum(\"microseconds\", \"milliseconds\", \"seconds\", \"minsec\", \"minutes\", \"hourmin\", \"hours\", \"days\", \"months\", \"years\");\nexport const RoundingFunction = Enum(\"round\", \"nearest\", \"floor\", \"rounddown\", \"ceil\", \"roundup\");\nexport const ScrollbarPolicy = Enum(\"auto\", \"visible\", \"hidden\");\nexport const RegionSelectionMode = Enum(\"replace\", \"append\", \"intersect\", \"subtract\", \"xor\");\nexport const SelectionMode = Enum(...RegionSelectionMode, \"toggle\");\nexport const Side = Enum(\"above\", \"below\", \"left\", \"right\");\nexport const SizingMode = Enum(\"stretch_width\", \"stretch_height\", \"stretch_both\", \"scale_width\", \"scale_height\", \"scale_both\", \"fixed\", \"inherit\");\nexport const Sort = Enum(\"ascending\", \"descending\");\nexport const SpatialUnits = Enum(\"screen\", \"data\");\nexport const StartEnd = Enum(\"start\", \"end\");\nexport const StepMode = Enum(\"after\", \"before\", \"center\");\nexport const TapBehavior = Enum(\"select\", \"inspect\");\nexport const TapGesture = Enum(\"tap\", \"doubletap\");\nexport const TextAlign = Enum(\"left\", \"right\", \"center\");\nexport const TextBaseline = Enum(\"top\", \"middle\", \"bottom\", \"alphabetic\", \"hanging\", \"ideographic\");\nexport const TextureRepetition = Enum(\"repeat\", \"repeat_x\", \"repeat_y\", \"no_repeat\");\nexport const LabelOrientation = Enum(\"vertical\", \"horizontal\", \"parallel\", \"normal\");\nexport const TooltipAttachment = Enum(\"horizontal\", \"vertical\", \"left\", \"right\", \"above\", \"below\");\nexport const UpdateMode = Enum(\"replace\", \"append\");\nexport const VerticalAlign = Enum(\"top\", \"middle\", \"bottom\");\n// Keep this in sync with bokehjs/src/less/icons.less\nexport const ToolIcon = Enum(\"append_mode\", \"arrow_down_to_bar\", \"arrow_up_from_bar\", \"auto_box_zoom\", \"bold\", \"box_edit\", \"box_select\", \"box_zoom\", \"caret_down\", \"caret_left\", \"caret_right\", \"caret_up\", \"check\", \"chevron_down\", \"chevron_left\", \"chevron_right\", \"chevron_up\", \"clear_selection\", \"copy\", \"crosshair\", \"delete\", \"freehand_draw\", \"fullscreen\", \"help\", \"hover\", \"intersect_mode\", \"invert_selection\", \"italic\", \"lasso_select\", \"line_edit\", \"maximize\", \"minimize\", \"pan\", \"pin\", \"point_draw\", \"pointer\", \"poly_draw\", \"poly_edit\", \"polygon_select\", \"range\", \"redo\", \"replace_mode\", \"reset\", \"save\", \"see_off\", \"see_on\", \"settings\", \"square\", \"square_check\", \"subtract_mode\", \"tap_select\", \"text_align_center\", \"text_align_left\", \"text_align_right\", \"undo\", \"unknown\", \"unpin\", \"wheel_pan\", \"wheel_zoom\", \"x_box_select\", \"x_box_zoom\", \"x_grip\", \"x_pan\", \"xor_mode\", \"y_box_select\", \"y_box_zoom\", \"y_grip\", \"y_pan\", \"zoom_in\", \"zoom_out\");\n//# sourceMappingURL=enums.js.map", "// Based on Underscore.js 1.8.3 (http://underscorejs.org)\nimport { isObject } from \"./types\";\nconst { hasOwnProperty } = Object.prototype;\nexport const equals = Symbol(\"equals\");\nfunction is_Equatable(obj) {\n    return isObject(obj) && equals in obj;\n}\nexport const wildcard = Symbol(\"wildcard\");\nconst toString = Object.prototype.toString;\nexport class EqNotImplemented extends Error {\n    static __name__ = \"EqNotImplemented\";\n}\nexport class Comparator {\n    static __name__ = \"Comparator\";\n    a_stack = [];\n    b_stack = [];\n    structural;\n    constructor(options) {\n        this.structural = options?.structural ?? false;\n    }\n    eq(a, b) {\n        if (a === b || Object.is(a, b)) {\n            return true;\n        }\n        if (a === wildcard || b === wildcard) {\n            return true;\n        }\n        if (a == null || b == null) {\n            return a === b;\n        }\n        const class_name = toString.call(a);\n        if (class_name != toString.call(b)) {\n            return false;\n        }\n        switch (class_name) {\n            case \"[object Number]\":\n                return this.numbers(a, b);\n            case \"[object Symbol]\":\n                return a === b;\n            case \"[object RegExp]\":\n            case \"[object String]\":\n                return `${a}` == `${b}`;\n            case \"[object Date]\":\n            case \"[object Boolean]\":\n                return +a === +b;\n        }\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n        // Initializing stack of traversed objects.\n        // It's done here since we only need them for objects and arrays comparison.\n        const { a_stack, b_stack } = this;\n        let length = a_stack.length;\n        while (length-- > 0) {\n            // Linear search. Performance is inversely proportional to the number of\n            // unique nested structures.\n            if (a_stack[length] === a) {\n                return b_stack[length] === b;\n            }\n        }\n        a_stack.push(a);\n        b_stack.push(b);\n        const result = (() => {\n            if (is_Equatable(a) && is_Equatable(b)) {\n                return a[equals](b, this);\n            }\n            switch (class_name) {\n                case \"[object Array]\":\n                case \"[object Uint8Array]\":\n                case \"[object Int8Array]\":\n                case \"[object Uint16Array]\":\n                case \"[object Int16Array]\":\n                case \"[object Uint32Array]\":\n                case \"[object Int32Array]\":\n                case \"[object Float32Array]\":\n                case \"[object Float64Array]\": {\n                    return this.arrays(a, b);\n                }\n                case \"[object Map]\":\n                    return this.maps(a, b);\n                case \"[object Set]\":\n                    return this.sets(a, b);\n                case \"[object Object]\": {\n                    if (a.constructor == b.constructor && (a.constructor == null || a.constructor === Object)) {\n                        return this.objects(a, b);\n                    }\n                }\n                case \"[object Function]\": {\n                    if (a.constructor == b.constructor && a.constructor === Function) {\n                        return this.eq(`${a}`, `${b}`);\n                    }\n                }\n            }\n            if (typeof Node !== \"undefined\" && a instanceof Node) {\n                return this.nodes(a, b);\n            }\n            throw new EqNotImplemented(`can't compare objects of type ${class_name}`);\n        })();\n        a_stack.pop();\n        b_stack.pop();\n        return result;\n    }\n    numbers(a, b) {\n        return a === b || Object.is(a, b);\n    }\n    arrays(a, b) {\n        const { length } = a;\n        if (length != b.length) {\n            return false;\n        }\n        for (let i = 0; i < length; i++) {\n            if (!this.eq(a[i], b[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    iterables(a, b) {\n        const ai = a[Symbol.iterator]();\n        const bi = b[Symbol.iterator]();\n        while (true) {\n            const an = ai.next();\n            const bn = bi.next();\n            const an_done = an.done ?? false;\n            const bn_done = bn.done ?? false;\n            if (an_done && bn_done) {\n                return true;\n            }\n            if (an_done || bn_done) {\n                return false;\n            }\n            if (!this.eq(an.value, bn.value)) {\n                return false;\n            }\n        }\n    }\n    maps(a, b) {\n        if (a.size != b.size) {\n            return false;\n        }\n        if (this.structural) {\n            return this.iterables(a.entries(), b.entries());\n        }\n        else {\n            for (const [key, val] of a) {\n                if (!b.has(key) || !this.eq(val, b.get(key))) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n    sets(a, b) {\n        if (a.size != b.size) {\n            return false;\n        }\n        if (this.structural) {\n            return this.iterables(a.entries(), b.entries());\n        }\n        else {\n            for (const key of a) {\n                if (!b.has(key)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n    objects(a, b) {\n        const keys = Object.keys(a);\n        if (keys.length != Object.keys(b).length) {\n            return false;\n        }\n        for (const key of keys) {\n            if (!hasOwnProperty.call(b, key) || !this.eq(a[key], b[key])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    nodes(a, b) {\n        if (a.nodeType != b.nodeType) {\n            return false;\n        }\n        if (a.textContent != b.textContent) {\n            return false;\n        }\n        if (!this.iterables(a.childNodes, b.childNodes)) {\n            return false;\n        }\n        return true;\n    }\n}\nconst { abs } = Math;\nexport class SimilarComparator extends Comparator {\n    tolerance;\n    static __name__ = \"SimilarComparator\";\n    constructor(tolerance = 1e-4) {\n        super();\n        this.tolerance = tolerance;\n    }\n    numbers(a, b) {\n        return super.numbers(a, b) || abs(a - b) < this.tolerance;\n    }\n}\nexport function is_equal(a, b) {\n    const comparator = new Comparator();\n    return comparator.eq(a, b);\n}\nexport function is_structurally_equal(a, b) {\n    const comparator = new Comparator({ structural: true });\n    return comparator.eq(a, b);\n}\nexport function is_similar(a, b, tolerance) {\n    const comparator = new SimilarComparator(tolerance);\n    return comparator.eq(a, b);\n}\n//# sourceMappingURL=eq.js.map", "import { equals } from \"./eq\";\nimport { assert } from \"./assert\";\nimport { has_refs } from \"./refs\";\nexport class BitSet {\n    size;\n    static __name__ = \"BitSet\";\n    [Symbol.toStringTag] = \"BitSet\";\n    static [has_refs] = false;\n    static _word_length = 32;\n    _array;\n    _nwords;\n    constructor(size, init = 0) {\n        this.size = size;\n        this._nwords = Math.ceil(size / BitSet._word_length);\n        if (init == 0 || init == 1) {\n            this._array = new Uint32Array(this._nwords);\n            if (init == 1) {\n                this._array.fill(0xffffffff);\n            }\n        }\n        else {\n            assert(init.length == this._nwords, \"Initializer size mismatch\");\n            this._array = init;\n        }\n    }\n    clone() {\n        return new BitSet(this.size, new Uint32Array(this._array));\n    }\n    [equals](that, cmp) {\n        if (!cmp.eq(this.size, that.size)) {\n            return false;\n        }\n        const { _nwords } = this;\n        const trailing = this.size % BitSet._word_length;\n        const n = trailing == 0 ? _nwords : _nwords - 1;\n        for (let i = 0; i < n; i++) {\n            if (this._array[i] != that._array[i]) {\n                return false;\n            }\n        }\n        if (trailing == 0) {\n            return true;\n        }\n        else {\n            const msb = 1 << (trailing - 1);\n            const mask = (msb - 1) ^ msb;\n            return (this._array[n] & mask) == (that._array[n] & mask);\n        }\n    }\n    static all_set(size) {\n        return new BitSet(size, 1);\n    }\n    static all_unset(size) {\n        return new BitSet(size, 0);\n    }\n    static from_indices(size, indices) {\n        const bits = new BitSet(size);\n        for (const i of indices) {\n            bits.set(i);\n        }\n        return bits;\n    }\n    static from_booleans(size, booleans) {\n        const bits = new BitSet(size);\n        let i = 0;\n        for (const boolean of booleans) {\n            if (i == size) {\n                break;\n            }\n            if (boolean) {\n                bits.set(i);\n            }\n            i += 1;\n        }\n        return bits;\n    }\n    _check_bounds(k) {\n        assert(0 <= k && k < this.size, `Out of bounds: 0 <= ${k} < ${this.size}`);\n    }\n    get(k) {\n        this._check_bounds(k);\n        const i = k >>> 5; // Math.floor(k/32)\n        const j = k & 0x1f; // k % 32\n        return ((this._array[i] >> j) & 0b1) == 0b1;\n    }\n    set(k, v = true) {\n        this._check_bounds(k);\n        this._count = null;\n        const i = k >>> 5; // Math.floor(k/32)\n        const j = k & 0x1f; // k % 32\n        if (v) {\n            this._array[i] |= 0b1 << j;\n        }\n        else {\n            this._array[i] &= ~(0b1 << j);\n        }\n    }\n    unset(k) {\n        this.set(k, false);\n    }\n    *[Symbol.iterator]() {\n        yield* this.ones();\n    }\n    _count = null;\n    get count() {\n        let count = this._count;\n        if (count == null) {\n            this._count = count = this._get_count();\n        }\n        return count;\n    }\n    _get_count() {\n        const { _array, _nwords, size } = this;\n        let c = 0;\n        for (let k = 0, i = 0; i < _nwords; i++) {\n            const word = _array[i];\n            if (word == 0) {\n                k += BitSet._word_length;\n            }\n            else {\n                for (let j = 0; j < BitSet._word_length && k < size; j++, k++) {\n                    if (((word >>> j) & 0b1) == 0b1) {\n                        c += 1;\n                    }\n                }\n            }\n        }\n        return c;\n    }\n    *ones() {\n        const { _array, _nwords, size } = this;\n        for (let k = 0, i = 0; i < _nwords; i++) {\n            const word = _array[i];\n            if (word == 0) {\n                k += BitSet._word_length;\n                continue;\n            }\n            for (let j = 0; j < BitSet._word_length && k < size; j++, k++) {\n                if (((word >>> j) & 0b1) == 0b1) {\n                    yield k;\n                }\n            }\n        }\n    }\n    *zeros() {\n        const { _array, _nwords, size } = this;\n        for (let k = 0, i = 0; i < _nwords; i++) {\n            const word = _array[i];\n            if (word == 0xffffffff) {\n                k += BitSet._word_length;\n                continue;\n            }\n            for (let j = 0; j < BitSet._word_length && k < size; j++, k++) {\n                if (((word >>> j) & 0b1) == 0b0) {\n                    yield k;\n                }\n            }\n        }\n    }\n    _check_size(other) {\n        assert(this.size == other.size, `Size mismatch (${this.size} != ${other.size})`);\n    }\n    invert() {\n        for (let i = 0; i < this._nwords; i++) {\n            this._array[i] = ~this._array[i] >>> 0;\n        }\n    }\n    add(other) {\n        this._check_size(other);\n        for (let i = 0; i < this._nwords; i++) {\n            this._array[i] |= other._array[i];\n        }\n    }\n    intersect(other) {\n        this._check_size(other);\n        for (let i = 0; i < this._nwords; i++) {\n            this._array[i] &= other._array[i];\n        }\n    }\n    subtract(other) {\n        this._check_size(other);\n        for (let i = 0; i < this._nwords; i++) {\n            const a = this._array[i];\n            const b = other._array[i];\n            this._array[i] = (a ^ b) & a;\n        }\n    }\n    symmetric_subtract(other) {\n        this._check_size(other);\n        for (let i = 0; i < this._nwords; i++) {\n            this._array[i] ^= other._array[i];\n        }\n    }\n    inversion() {\n        const result = this.clone();\n        result.invert();\n        return result;\n    }\n    union(other) {\n        const result = this.clone();\n        result.add(other);\n        return result;\n    }\n    intersection(other) {\n        const result = this.clone();\n        result.intersect(other);\n        return result;\n    }\n    difference(other) {\n        const result = this.clone();\n        result.subtract(other);\n        return result;\n    }\n    symmetric_difference(other) {\n        const result = this.clone();\n        result.symmetric_subtract(other);\n        return result;\n    }\n    select(array) {\n        assert(this.size <= array.length, \"Size mismatch\");\n        const n = this.count;\n        const result = new array.constructor(n);\n        let i = 0;\n        for (const j of this) {\n            result[i++] = array[j];\n        }\n        return result;\n    }\n}\n//# sourceMappingURL=bitset.js.map", "export const GeneratorFunction = Object.getPrototypeOf(function* () { }).constructor;\nexport const AsyncGeneratorFunction = Object.getPrototypeOf(async function* () { }).constructor;\nexport const ColorArray = Uint32Array;\nexport const RGBAArray = Uint8ClampedArray;\nexport function infer_type(a0, a1) {\n    if (a0 instanceof Float64Array || a0 instanceof Array) {\n        return Float64Array;\n    }\n    if (a1 instanceof Float64Array || a1 instanceof Array) {\n        return Float64Array;\n    }\n    return Float32Array;\n}\nexport const ScreenArray = Float32Array;\nexport function to_screen(array) {\n    if (!(array instanceof Float32Array)) {\n        return Float32Array.from(array);\n    }\n    else {\n        return array;\n    }\n}\nexport { BitSet as Indices } from \"./util/bitset\";\n//# sourceMappingURL=types.js.map", "export const is_mobile = (() => {\n    return \"ontouchstart\" in globalThis || (typeof navigator !== \"undefined\" && navigator.maxTouchPoints > 0);\n})();\nexport const is_little_endian = (() => {\n    const buf = new ArrayBuffer(4);\n    const buf8 = new Uint8Array(buf);\n    const buf32 = new Uint32Array(buf);\n    buf32[1] = 0x0a0b0c0d;\n    let little_endian = true;\n    if (buf8[4] == 0x0a && buf8[5] == 0x0b && buf8[6] == 0x0c && buf8[7] == 0x0d) {\n        little_endian = false;\n    }\n    return little_endian;\n})();\nexport const BYTE_ORDER = is_little_endian ? \"little\" : \"big\";\nexport function to_big_endian(values) {\n    if (is_little_endian) {\n        const result = new Uint32Array(values.length);\n        const view = new DataView(result.buffer);\n        let j = 0;\n        for (const color of values) {\n            view.setUint32(j, color);\n            j += 4;\n        }\n        return result;\n    }\n    else {\n        return values;\n    }\n}\n//# sourceMappingURL=platform.js.map", "import { isPlainObject } from \"./util/types\";\nimport { size } from \"./util/object\";\nfunction is_of_type(obj, field) {\n    if (!isPlainObject(obj)) {\n        return false;\n    }\n    if (!(field in obj)) {\n        return false;\n    }\n    let n = size(obj) - 1;\n    if (\"transform\" in obj) {\n        n -= 1;\n    }\n    if (\"units\" in obj) {\n        n -= 1;\n    }\n    return n == 0;\n}\nexport function isValue(obj) {\n    return is_of_type(obj, \"value\");\n}\nexport function isField(obj) {\n    return is_of_type(obj, \"field\");\n}\nexport function isExpr(obj) {\n    return is_of_type(obj, \"expr\");\n}\nexport function isVectorized(obj) {\n    return isValue(obj) || isField(obj) || isExpr(obj);\n}\n//# sourceMappingURL=vectorization.js.map", "import { entries } from \"./object\";\nimport { isPrimitive, isPlainObject, isObject, isArray } from \"./types\";\nexport const clone = Symbol(\"clone\");\nexport function is_Cloneable(obj) {\n    return isObject(obj) && clone in obj;\n}\nexport class CloningError extends Error {\n    static __name__ = \"CloningError\";\n}\nexport class Cloner {\n    static __name__ = \"Cloner\";\n    constructor() { }\n    clone(obj) {\n        if (is_Cloneable(obj)) {\n            return obj[clone](this);\n        }\n        else if (isPrimitive(obj)) {\n            return obj;\n        }\n        else if (isArray(obj)) {\n            const n = obj.length;\n            const result = new Array(n);\n            for (let i = 0; i < n; i++) {\n                const value = obj[i];\n                result[i] = this.clone(value);\n            }\n            return result;\n        }\n        else if (isPlainObject(obj)) {\n            const result = {};\n            for (const [key, value] of entries(obj)) {\n                result[key] = this.clone(value);\n            }\n            return result;\n        }\n        else if (obj instanceof Map) {\n            return new Map([...obj].map(([k, v]) => [this.clone(k), this.clone(v)]));\n        }\n        else if (obj instanceof Set) {\n            return new Set([...obj].map((v) => this.clone(v)));\n        }\n        else {\n            throw new CloningError(`${Object.prototype.toString.call(obj)} is not cloneable`);\n        }\n    }\n}\n//# sourceMappingURL=cloneable.js.map", "import { range as arange } from \"./array\";\nimport { assert } from \"./assert\";\nexport { min, max } from \"./arrayable\";\nexport function* range(start, stop, step = 1) {\n    assert(step > 0);\n    const { abs, ceil, max } = Math;\n    if (stop == null) {\n        stop = start;\n        start = 0;\n    }\n    const delta = start <= stop ? step : -step;\n    const length = max(ceil(abs(stop - start) / step), 0);\n    for (let i = 0; i < length; i++, start += delta) {\n        yield start;\n    }\n}\nexport function* reverse(array) {\n    const n = array.length;\n    for (let i = 0; i < n; i++) {\n        yield array[n - i - 1];\n    }\n}\nexport function* enumerate(seq) {\n    let i = 0;\n    for (const item of seq) {\n        yield [item, i++];\n    }\n}\nexport function* take(seq, n) {\n    assert(n >= 0);\n    let i = 0;\n    for (const item of seq) {\n        if (i++ < n) {\n            yield item;\n        }\n        else {\n            break;\n        }\n    }\n}\nexport function* skip(seq, n) {\n    assert(n >= 0);\n    for (const value of seq) {\n        if (n == 0) {\n            yield value;\n        }\n        else {\n            n -= 1;\n        }\n    }\n}\nexport function* tail(seq) {\n    yield* skip(seq, 1);\n}\nexport function* join(seq, separator) {\n    let first = true;\n    for (const entry of seq) {\n        if (first) {\n            first = false;\n        }\n        else if (separator != null) {\n            yield separator();\n        }\n        yield* entry;\n    }\n}\nexport function* zip(iterable0, iterable1) {\n    const it0 = iterable0[Symbol.iterator]();\n    const it1 = iterable1[Symbol.iterator]();\n    do {\n        const r0 = it0.next();\n        const r1 = it1.next();\n        if (r0.done === true || r1.done === true) {\n            break;\n        }\n        else {\n            yield [r0.value, r1.value];\n        }\n    } while (true);\n}\nexport function* interleave(seq, separator) {\n    let first = true;\n    for (const entry of seq) {\n        if (first) {\n            first = false;\n        }\n        else {\n            yield separator();\n        }\n        yield entry;\n    }\n}\nexport function* map(iterable, fn) {\n    let i = 0;\n    for (const item of iterable) {\n        yield fn(item, i++);\n    }\n}\nexport function* flat_map(iterable, fn) {\n    let i = 0;\n    for (const item of iterable) {\n        yield* fn(item, i++);\n    }\n}\nexport function* filter(iterable, fn) {\n    let i = 0;\n    for (const item of iterable) {\n        if (fn(item, i++)) {\n            yield item;\n        }\n    }\n}\nexport function every(iterable, predicate) {\n    for (const item of iterable) {\n        if (!predicate(item)) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function some(iterable, predicate) {\n    for (const item of iterable) {\n        if (predicate(item)) {\n            return true;\n        }\n    }\n    return false;\n}\n// https://docs.python.org/3.8/library/itertools.html#itertools.combinations\nexport function* combinations(seq, r) {\n    const n = seq.length;\n    if (r > n) {\n        return;\n    }\n    const indices = arange(r);\n    yield indices.map((i) => seq[i]);\n    while (true) {\n        let k;\n        for (const i of reverse(arange(r))) {\n            if (indices[i] != i + n - r) {\n                k = i;\n                break;\n            }\n        }\n        if (k == null) {\n            return;\n        }\n        indices[k] += 1;\n        for (const j of arange(k + 1, r)) {\n            indices[j] = indices[j - 1] + 1;\n        }\n        yield indices.map((i) => seq[i]);\n    }\n}\nexport function* subsets(seq) {\n    for (const k of arange(seq.length + 1)) {\n        yield* combinations(seq, k);\n    }\n}\n//# sourceMappingURL=iterator.js.map", "export function buffer_to_base64(buffer) {\n    const bytes = new Uint8Array(buffer);\n    const chars = Array.from(bytes).map((b) => String.fromCharCode(b));\n    return btoa(chars.join(\"\"));\n}\nexport function base64_to_buffer(base64) {\n    const binary_string = atob(base64);\n    const len = binary_string.length;\n    const bytes = new Uint8Array(len);\n    for (let i = 0, end = len; i < end; i++) {\n        bytes[i] = binary_string.charCodeAt(i);\n    }\n    return bytes.buffer;\n}\n// NOTE: swap{16,32,64} assume byteOffset == 0\nfunction swap16(buffer) {\n    const x = new Uint8Array(buffer);\n    for (let i = 0, end = x.length; i < end; i += 2) {\n        const t = x[i];\n        x[i] = x[i + 1];\n        x[i + 1] = t;\n    }\n}\nfunction swap32(buffer) {\n    const x = new Uint8Array(buffer);\n    for (let i = 0, end = x.length; i < end; i += 4) {\n        let t = x[i];\n        x[i] = x[i + 3];\n        x[i + 3] = t;\n        t = x[i + 1];\n        x[i + 1] = x[i + 2];\n        x[i + 2] = t;\n    }\n}\nfunction swap64(buffer) {\n    const x = new Uint8Array(buffer);\n    for (let i = 0, end = x.length; i < end; i += 8) {\n        let t = x[i];\n        x[i] = x[i + 7];\n        x[i + 7] = t;\n        t = x[i + 1];\n        x[i + 1] = x[i + 6];\n        x[i + 6] = t;\n        t = x[i + 2];\n        x[i + 2] = x[i + 5];\n        x[i + 5] = t;\n        t = x[i + 3];\n        x[i + 3] = x[i + 4];\n        x[i + 4] = t;\n    }\n}\nexport function swap(buffer, dtype) {\n    switch (dtype) {\n        case \"uint16\":\n        case \"int16\":\n            swap16(buffer);\n            break;\n        case \"uint32\":\n        case \"int32\":\n        case \"float32\":\n            swap32(buffer);\n            break;\n        case \"float64\":\n            swap64(buffer);\n            break;\n        case \"object\":\n        case \"uint8\":\n        case \"int8\":\n        case \"bool\":\n            break;\n    }\n}\n//# sourceMappingURL=buffer.js.map", "import { buffer_to_base64 } from \"../util/buffer\";\nimport { equals } from \"../util/eq\";\nexport class Buffer {\n    buffer;\n    static __name__ = \"Buffer\";\n    constructor(buffer) {\n        this.buffer = buffer;\n    }\n    to_base64() {\n        return buffer_to_base64(this.buffer);\n    }\n    [equals](that, cmp) {\n        return cmp.eq(this.buffer, that.buffer);\n    }\n}\nexport class Base64Buffer extends Buffer {\n    static __name__ = \"Base64Buffer\";\n    toJSON() {\n        return this.to_base64();\n    }\n}\n//# sourceMappingURL=buffer.js.map", "import { assert } from \"../util/assert\";\nimport { entries } from \"../util/object\";\nimport { isPlainObject, isObject, isArray, isTypedArray, isBoolean, isNumber, isString, isSymbol } from \"../util/types\";\nimport { map } from \"../util/iterator\";\nimport { BYTE_ORDER } from \"../util/platform\";\nimport { Buffer, Base64Buffer } from \"./buffer\";\n// TypedArray?\nexport const serialize = Symbol(\"serialize\");\nfunction is_Serializable(obj) {\n    return isObject(obj) && serialize in obj;\n}\nexport class SerializationError extends Error {\n    static __name__ = \"SerializationError\";\n}\nclass Serialized {\n    value;\n    static __name__ = \"Serialized\";\n    constructor(value) {\n        this.value = value;\n    }\n    to_json() {\n        return JSON.stringify(this.value);\n    }\n}\nexport class Serializer {\n    static __name__ = \"Serializer\";\n    _references;\n    binary;\n    include_defaults;\n    _circular = new WeakSet();\n    constructor(options) {\n        this.binary = options?.binary ?? false;\n        this.include_defaults = options?.include_defaults ?? false;\n        const references = options?.references;\n        this._references = references != null ? new Map(references) : new Map();\n    }\n    get_ref(obj) {\n        return this._references.get(obj);\n    }\n    add_ref(obj, ref) {\n        assert(!this._references.has(obj));\n        this._references.set(obj, ref);\n    }\n    to_serializable(obj) {\n        return new Serialized(this.encode(obj));\n    }\n    encode(obj) {\n        const ref = this.get_ref(obj);\n        if (ref != null) {\n            return ref;\n        }\n        if (!isObject(obj)) {\n            return this._encode(obj);\n        }\n        else {\n            if (this._circular.has(obj)) {\n                this.error(\"circular reference\");\n            }\n            this._circular.add(obj);\n            try {\n                return this._encode(obj);\n            }\n            finally {\n                this._circular.delete(obj);\n            }\n        }\n    }\n    _encode(obj) {\n        if (is_Serializable(obj)) {\n            return obj[serialize](this);\n        }\n        else if (isArray(obj)) {\n            const n = obj.length;\n            const result = new Array(n);\n            for (let i = 0; i < n; i++) {\n                const value = obj[i];\n                result[i] = this.encode(value);\n            }\n            return result;\n        }\n        else if (isTypedArray(obj)) {\n            return this._encode_typed_array(obj);\n        }\n        else if (obj instanceof ArrayBuffer) {\n            const data = this.binary ? new Buffer(obj) : new Base64Buffer(obj);\n            return { type: \"bytes\", data };\n        }\n        else if (isPlainObject(obj)) {\n            const items = entries(obj);\n            if (items.length == 0) {\n                return { type: \"map\" };\n            }\n            else {\n                return { type: \"map\", entries: [...map(items, ([key, val]) => [this.encode(key), this.encode(val)])] };\n            }\n        }\n        else if (obj === null || isBoolean(obj) || isString(obj)) {\n            return obj;\n        }\n        else if (isNumber(obj)) {\n            if (isNaN(obj)) {\n                return { type: \"number\", value: \"nan\" };\n            }\n            else if (!isFinite(obj)) {\n                return { type: \"number\", value: `${obj < 0 ? \"-\" : \"+\"}inf` };\n            }\n            else {\n                return obj;\n            }\n        }\n        else if (obj instanceof Date) {\n            const iso = obj.toISOString();\n            return { type: \"date\", iso };\n        }\n        else if (obj instanceof Set) {\n            if (obj.size == 0) {\n                return { type: \"set\" };\n            }\n            else {\n                return { type: \"set\", entries: [...map(obj.values(), (val) => this.encode(val))] };\n            }\n        }\n        else if (obj instanceof Map) {\n            if (obj.size == 0) {\n                return { type: \"map\" };\n            }\n            else {\n                return { type: \"map\", entries: [...map(obj.entries(), ([key, val]) => [this.encode(key), this.encode(val)])] };\n            }\n        }\n        else if (isSymbol(obj) && obj.description != null) {\n            return { type: \"symbol\", name: obj.description };\n        }\n        else {\n            throw new SerializationError(`${Object.prototype.toString.call(obj)} is not serializable`);\n        }\n    }\n    encode_struct(struct) {\n        const result = {};\n        for (const [key, val] of entries(struct)) {\n            if (val !== undefined) {\n                result[key] = this.encode(val);\n            }\n        }\n        return result;\n    }\n    error(message) {\n        throw new SerializationError(message);\n    }\n    _encode_typed_array(obj) {\n        const array = this.encode(obj.buffer);\n        const dtype = (() => {\n            switch (obj.constructor) {\n                case Uint8Array: return \"uint8\";\n                case Int8Array: return \"int8\";\n                case Uint16Array: return \"uint16\";\n                case Int16Array: return \"int16\";\n                case Uint32Array: return \"uint32\";\n                case Int32Array: return \"int32\";\n                // case BigUint64Array: return \"uint64\"\n                // case BigInt64Array: return \"int64\"\n                case Float32Array: return \"float32\";\n                case Float64Array: return \"float64\";\n                default:\n                    this.error(`can't serialize typed array of type '${obj[Symbol.toStringTag]}'`);\n            }\n        })();\n        return {\n            type: \"typed_array\",\n            array,\n            order: BYTE_ORDER,\n            dtype,\n        };\n    }\n}\n//# sourceMappingURL=serializer.js.map", "import { isObject, isNumber } from \"./types\";\nimport { BYTE_ORDER } from \"./platform\";\nimport { equals } from \"./eq\";\nimport { clone } from \"./cloneable\";\nimport { serialize } from \"../serialization\";\nconst __ndarray__ = Symbol(\"__ndarray__\");\nfunction encode_NDArray(array, serializer) {\n    const encoded = serializer.encode(array.dtype == \"object\" ? Array.from(array) : array.buffer);\n    return {\n        type: \"ndarray\",\n        array: encoded,\n        order: BYTE_ORDER,\n        dtype: array.dtype,\n        shape: array.shape,\n    };\n}\nexport class BoolNDArray extends Uint8Array {\n    static __name__ = \"BoolNDArray\";\n    [__ndarray__] = true;\n    dtype = \"bool\";\n    shape;\n    dimension;\n    constructor(init, shape) {\n        super(init); // XXX: typescript bug?\n        this.shape = shape ?? (is_NDArray(init) ? init.shape : [this.length]);\n        this.dimension = this.shape.length;\n    }\n    [equals](that, cmp) {\n        return cmp.eq(this.shape, that.shape) && cmp.arrays(this, that);\n    }\n    [clone](cloner) {\n        return new BoolNDArray(this, cloner.clone(this.shape));\n    }\n    [serialize](serializer) {\n        return encode_NDArray(this, serializer);\n    }\n    get(i) {\n        return this[i] == 1;\n    }\n}\nexport class Uint8NDArray extends Uint8Array {\n    static __name__ = \"Uint8NDArray\";\n    [__ndarray__] = true;\n    dtype = \"uint8\";\n    shape;\n    dimension;\n    constructor(init, shape) {\n        super(init); // XXX: typescript bug?\n        this.shape = shape ?? (is_NDArray(init) ? init.shape : [this.length]);\n        this.dimension = this.shape.length;\n    }\n    [equals](that, cmp) {\n        return cmp.eq(this.shape, that.shape) && cmp.arrays(this, that);\n    }\n    [clone](cloner) {\n        return new Uint8NDArray(this, cloner.clone(this.shape));\n    }\n    [serialize](serializer) {\n        return encode_NDArray(this, serializer);\n    }\n    get(i) {\n        return this[i];\n    }\n}\nexport class Int8NDArray extends Int8Array {\n    static __name__ = \"Int8NDArray\";\n    [__ndarray__] = true;\n    dtype = \"int8\";\n    shape;\n    dimension;\n    constructor(init, shape) {\n        super(init); // XXX: typescript bug?\n        this.shape = shape ?? (is_NDArray(init) ? init.shape : [this.length]);\n        this.dimension = this.shape.length;\n    }\n    [equals](that, cmp) {\n        return cmp.eq(this.shape, that.shape) && cmp.arrays(this, that);\n    }\n    [clone](cloner) {\n        return new Int8NDArray(this, cloner.clone(this.shape));\n    }\n    [serialize](serializer) {\n        return encode_NDArray(this, serializer);\n    }\n    get(i) {\n        return this[i];\n    }\n}\nexport class Uint16NDArray extends Uint16Array {\n    static __name__ = \"Uint16NDArray\";\n    [__ndarray__] = true;\n    dtype = \"uint16\";\n    shape;\n    dimension;\n    constructor(init, shape) {\n        super(init); // XXX: typescript bug?\n        this.shape = shape ?? (is_NDArray(init) ? init.shape : [this.length]);\n        this.dimension = this.shape.length;\n    }\n    [equals](that, cmp) {\n        return cmp.eq(this.shape, that.shape) && cmp.arrays(this, that);\n    }\n    [clone](cloner) {\n        return new Uint16NDArray(this, cloner.clone(this.shape));\n    }\n    [serialize](serializer) {\n        return encode_NDArray(this, serializer);\n    }\n    get(i) {\n        return this[i];\n    }\n}\nexport class Int16NDArray extends Int16Array {\n    static __name__ = \"Int16NDArray\";\n    [__ndarray__] = true;\n    dtype = \"int16\";\n    shape;\n    dimension;\n    constructor(init, shape) {\n        super(init); // XXX: typescript bug?\n        this.shape = shape ?? (is_NDArray(init) ? init.shape : [this.length]);\n        this.dimension = this.shape.length;\n    }\n    [equals](that, cmp) {\n        return cmp.eq(this.shape, that.shape) && cmp.arrays(this, that);\n    }\n    [clone](cloner) {\n        return new Int16NDArray(this, cloner.clone(this.shape));\n    }\n    [serialize](serializer) {\n        return encode_NDArray(this, serializer);\n    }\n    get(i) {\n        return this[i];\n    }\n}\nexport class Uint32NDArray extends Uint32Array {\n    static __name__ = \"Uint32NDArray\";\n    [__ndarray__] = true;\n    dtype = \"uint32\";\n    shape;\n    dimension;\n    constructor(init, shape) {\n        super(init); // XXX: typescript bug?\n        this.shape = shape ?? (is_NDArray(init) ? init.shape : [this.length]);\n        this.dimension = this.shape.length;\n    }\n    [equals](that, cmp) {\n        return cmp.eq(this.shape, that.shape) && cmp.arrays(this, that);\n    }\n    [clone](cloner) {\n        return new Uint32NDArray(this, cloner.clone(this.shape));\n    }\n    [serialize](serializer) {\n        return encode_NDArray(this, serializer);\n    }\n    get(i) {\n        return this[i];\n    }\n}\nexport class Int32NDArray extends Int32Array {\n    static __name__ = \"Int32NDArray\";\n    [__ndarray__] = true;\n    dtype = \"int32\";\n    shape;\n    dimension;\n    constructor(init, shape) {\n        super(init); // XXX: typescript bug?\n        this.shape = shape ?? (is_NDArray(init) ? init.shape : [this.length]);\n        this.dimension = this.shape.length;\n    }\n    [equals](that, cmp) {\n        return cmp.eq(this.shape, that.shape) && cmp.arrays(this, that);\n    }\n    [clone](cloner) {\n        return new Int32NDArray(this, cloner.clone(this.shape));\n    }\n    [serialize](serializer) {\n        return encode_NDArray(this, serializer);\n    }\n    get(i) {\n        return this[i];\n    }\n}\nexport class Float32NDArray extends Float32Array {\n    static __name__ = \"Float32NDArray\";\n    [__ndarray__] = true;\n    dtype = \"float32\";\n    shape;\n    dimension;\n    constructor(init, shape) {\n        super(init); // XXX: typescript bug?\n        this.shape = shape ?? (is_NDArray(init) ? init.shape : [this.length]);\n        this.dimension = this.shape.length;\n    }\n    [equals](that, cmp) {\n        return cmp.eq(this.shape, that.shape) && cmp.arrays(this, that);\n    }\n    [clone](cloner) {\n        return new Float32NDArray(this, cloner.clone(this.shape));\n    }\n    [serialize](serializer) {\n        return encode_NDArray(this, serializer);\n    }\n    get(i) {\n        return this[i];\n    }\n}\nexport class Float64NDArray extends Float64Array {\n    static __name__ = \"Float64NDArray\";\n    [__ndarray__] = true;\n    dtype = \"float64\";\n    shape;\n    dimension;\n    constructor(init, shape) {\n        super(init); // XXX: typescript bug?\n        this.shape = shape ?? (is_NDArray(init) ? init.shape : [this.length]);\n        this.dimension = this.shape.length;\n    }\n    [equals](that, cmp) {\n        return cmp.eq(this.shape, that.shape) && cmp.arrays(this, that);\n    }\n    [clone](cloner) {\n        return new Float64NDArray(this, cloner.clone(this.shape));\n    }\n    [serialize](serializer) {\n        return encode_NDArray(this, serializer);\n    }\n    get(i) {\n        return this[i];\n    }\n}\nexport class ObjectNDArray extends Array {\n    static __name__ = \"ObjectNDArray\";\n    [__ndarray__] = true;\n    dtype = \"object\";\n    _shape;\n    get shape() {\n        return this._shape ?? [this.length];\n    }\n    get dimension() {\n        return this.shape.length;\n    }\n    constructor(init_, shape) {\n        const init = init_ instanceof ArrayBuffer ? new Float64Array(init_) : init_;\n        const size = isNumber(init) ? init : init.length;\n        super(size);\n        if (!isNumber(init)) {\n            for (let i = 0; i < init.length; i++) {\n                this[i] = init[i];\n            }\n        }\n        this._shape = shape ?? (is_NDArray(init) ? init.shape : undefined);\n    }\n    [equals](that, cmp) {\n        return cmp.eq(this.shape, that.shape) && cmp.arrays(this, that);\n    }\n    [clone](cloner) {\n        return new ObjectNDArray(this, cloner.clone(this.shape));\n    }\n    [serialize](serializer) {\n        return encode_NDArray(this, serializer);\n    }\n    get(i) {\n        return this[i];\n    }\n}\nexport function is_NDArray(v) {\n    return isObject(v) && __ndarray__ in v;\n}\nexport function ndarray(init, { dtype, shape } = {}) {\n    if (dtype == null) {\n        dtype = (() => {\n            switch (true) {\n                case init instanceof Uint8Array: return \"uint8\";\n                case init instanceof Int8Array: return \"int8\";\n                case init instanceof Uint16Array: return \"uint16\";\n                case init instanceof Int16Array: return \"int16\";\n                case init instanceof Uint32Array: return \"uint32\";\n                case init instanceof Int32Array: return \"int32\";\n                case init instanceof Float32Array: return \"float32\";\n                case init instanceof ArrayBuffer:\n                case init instanceof Float64Array: return \"float64\";\n                default: return \"object\";\n            }\n        })();\n    }\n    switch (dtype) {\n        case \"bool\": return new BoolNDArray(init, shape);\n        case \"uint8\": return new Uint8NDArray(init, shape);\n        case \"int8\": return new Int8NDArray(init, shape);\n        case \"uint16\": return new Uint16NDArray(init, shape);\n        case \"int16\": return new Int16NDArray(init, shape);\n        case \"uint32\": return new Uint32NDArray(init, shape);\n        case \"int32\": return new Int32NDArray(init, shape);\n        case \"float32\": return new Float32NDArray(init, shape);\n        case \"float64\": return new Float64NDArray(init, shape);\n        case \"object\": return new ObjectNDArray(init, shape);\n    }\n}\n//# sourceMappingURL=ndarray.js.map", "export class Diagnostics {\n    static __name__ = \"Diagnostics\";\n    listeners = new Set();\n    connect(listener) {\n        this.listeners.add(listener);\n    }\n    disconnect(listener) {\n        this.listeners.delete(listener);\n    }\n    report(obj) {\n        for (const listener of this.listeners) {\n            listener(obj);\n        }\n    }\n}\nexport const diagnostics = new Diagnostics();\n//# sourceMappingURL=diagnostics.js.map", "import { equals } from \"./util/eq\";\nimport * as arrayable from \"./util/arrayable\";\nexport class Uniform {\n    static __name__ = \"Uniform\";\n    is_Scalar() {\n        return this.is_scalar;\n    }\n    is_Vector() {\n        return !this.is_scalar;\n    }\n}\nexport class UniformScalar extends Uniform {\n    value;\n    length;\n    static __name__ = \"UniformScalar\";\n    is_scalar = true;\n    constructor(value, length) {\n        super();\n        this.value = value;\n        this.length = length;\n    }\n    get(_i) {\n        return this.value;\n    }\n    *[Symbol.iterator]() {\n        const { length, value } = this;\n        for (let i = 0; i < length; i++) {\n            yield value;\n        }\n    }\n    select(indices) {\n        return new UniformScalar(this.value, indices.count);\n    }\n    [equals](that, cmp) {\n        return cmp.eq(this.length, that.length) && cmp.eq(this.value, that.value);\n    }\n    map(fn) {\n        return new UniformScalar(fn(this.value), this.length);\n    }\n}\nexport class UniformVector extends Uniform {\n    array;\n    static __name__ = \"UniformVector\";\n    is_scalar = false;\n    length;\n    constructor(array) {\n        super();\n        this.array = array;\n        this.length = this.array.length;\n    }\n    get(i) {\n        return this.array[i];\n    }\n    *[Symbol.iterator]() {\n        yield* this.array;\n    }\n    select(indices) {\n        const array = indices.select(this.array);\n        return new this.constructor(array);\n    }\n    [equals](that, cmp) {\n        return cmp.eq(this.length, that.length) && cmp.eq(this.array, that.array);\n    }\n    map(fn) {\n        return new UniformVector(arrayable.map(this.array, fn));\n    }\n}\nexport class ColorUniformVector extends UniformVector {\n    array;\n    static __name__ = \"ColorUniformVector\";\n    _view;\n    constructor(array) {\n        super(array);\n        this.array = array;\n        this._view = new DataView(array.buffer);\n    }\n    get(i) {\n        return this._view.getUint32(4 * i);\n    }\n    *[Symbol.iterator]() {\n        const n = this.length;\n        for (let i = 0; i < n; i++) {\n            yield this.get(i);\n        }\n    }\n}\nexport function min(u) {\n    return u.is_Scalar() ? u.value : arrayable.min(u.array);\n}\nexport function max(u) {\n    return u.is_Scalar() ? u.value : arrayable.max(u.array);\n}\n//# sourceMappingURL=uniforms.js.map", "import { Signal0 } from \"./signaling\";\nimport { logger } from \"./logging\";\nimport * as enums from \"./enums\";\nimport { RGBAArray, ColorArray } from \"./types\";\nimport { includes, repeat } from \"./util/array\";\nimport { mul } from \"./util/arrayable\";\nimport { to_radians_coeff } from \"./util/math\";\nimport { color2rgba, encode_rgba } from \"./util/color\";\nimport { to_big_endian } from \"./util/platform\";\nimport { isNumber, isTypedArray, isPlainObject } from \"./util/types\";\nimport { isValue, isField, isExpr } from \"./vectorization\";\nimport { settings } from \"./settings\";\nimport { is_NDArray } from \"./util/ndarray\";\nimport { diagnostics } from \"./diagnostics\";\nimport { unreachable } from \"./util/assert\";\nimport { serialize } from \"./serialization\";\nimport { Uniform, UniformScalar, UniformVector, ColorUniformVector } from \"./uniforms\";\nexport { Uniform, UniformScalar, UniformVector };\nfunction valueToString(value) {\n    try {\n        return JSON.stringify(value);\n    }\n    catch {\n        return value.toString();\n    }\n}\nexport function isSpec(obj) {\n    return isPlainObject(obj) &&\n        ((obj.value === undefined ? 0 : 1) +\n            (obj.field === undefined ? 0 : 1) +\n            (obj.expr === undefined ? 0 : 1) == 1); // garbage JS XOR\n}\nlet global_theme = null;\nexport function use_theme(theme = null) {\n    global_theme = theme;\n}\nexport const unset = Symbol(\"unset\");\nexport class UnsetValueError extends Error {\n    static __name__ = \"UnsetValueError\";\n}\nexport class Property {\n    obj;\n    attr;\n    kind;\n    default_value;\n    static __name__ = \"Property\";\n    __value__;\n    get syncable() {\n        return !this.internal;\n    }\n    _value = unset;\n    get is_unset() {\n        return this._value === unset;\n    }\n    _initialized = false;\n    get initialized() {\n        return this._initialized;\n    }\n    initialize(initial_value = unset) {\n        if (this._initialized) {\n            throw new Error(\"already initialized\");\n        }\n        let attr_value = unset;\n        if (initial_value !== unset) {\n            attr_value = initial_value;\n            this._dirty = true;\n        }\n        else {\n            const value = this._default_override();\n            if (value !== unset) {\n                attr_value = value;\n            }\n            else {\n                let themed = false;\n                if (global_theme != null) {\n                    const value = global_theme.get(this.obj, this.attr);\n                    if (value !== undefined) {\n                        attr_value = value;\n                        themed = true;\n                    }\n                }\n                if (!themed) {\n                    attr_value = this.default_value(this.obj);\n                }\n            }\n        }\n        if (attr_value !== unset) {\n            if (this.kind.coerce != null) {\n                attr_value = this.kind.coerce(attr_value);\n            }\n            this._update(attr_value);\n        }\n        else {\n            this._value = unset;\n        }\n        this._initialized = true;\n    }\n    get_value() {\n        if (this._value !== unset) {\n            return this._value;\n        }\n        else {\n            throw new UnsetValueError(`${this.obj}.${this.attr} is unset`);\n        }\n    }\n    set_value(val) {\n        if (!this._initialized) {\n            this.initialize(val);\n        }\n        else {\n            this._update(val);\n            this._dirty = true;\n        }\n        diagnostics.report(this);\n    }\n    // abstract _intrinsic_default(): T\n    _default_override() {\n        return unset;\n    }\n    _dirty = false;\n    get dirty() {\n        return this._dirty;\n    }\n    may_have_refs;\n    change;\n    /*readonly*/ internal;\n    readonly;\n    constructor(obj, attr, kind, default_value, options = {}) {\n        this.obj = obj;\n        this.attr = attr;\n        this.kind = kind;\n        this.default_value = default_value;\n        this.change = new Signal0(this.obj, \"change\");\n        this.internal = options.internal ?? false;\n        this.readonly = options.readonly ?? false;\n        this.convert = options.convert;\n        this.on_update = options.on_update;\n        this.may_have_refs = kind.may_have_refs();\n    }\n    //protected abstract _update(attr_value: T): void\n    _update(attr_value) {\n        this.validate(attr_value);\n        if (this.convert != null) {\n            const converted = this.convert(attr_value, this.obj);\n            if (converted !== undefined) {\n                attr_value = converted;\n            }\n        }\n        this._value = attr_value;\n        this.on_update?.(attr_value, this.obj);\n    }\n    toString() {\n        /*${this.name}*/\n        return `Prop(${this.obj}.${this.attr}, value: ${valueToString(this._value)})`;\n    }\n    // ----- customizable policies\n    normalize(values) {\n        return values;\n    }\n    validate(value) {\n        if (!this.valid(value)) {\n            throw new Error(`${this.obj}.${this.attr} given invalid value: ${valueToString(value)}`);\n        }\n    }\n    valid(value) {\n        return this.kind.valid(value);\n    }\n}\nexport class PropertyAlias {\n    attr;\n    static __name__ = \"PropertyAlias\";\n    constructor(attr) {\n        this.attr = attr;\n    }\n}\nexport function Alias(attr) {\n    return new PropertyAlias(attr);\n}\n//\n// Primitive Properties\n//\nexport class PrimitiveProperty extends Property {\n    static __name__ = \"PrimitiveProperty\";\n}\nexport class Font extends PrimitiveProperty {\n    static __name__ = \"Font\";\n    _default_override() {\n        return settings.dev ? \"Bokeh\" : unset;\n    }\n}\n//\n// DataSpec properties\n//\nexport class ScalarSpec extends Property {\n    static __name__ = \"ScalarSpec\";\n    __scalar__;\n    _value = unset;\n    get_value() {\n        if (this._value !== unset) {\n            return this._value;\n        }\n        else {\n            throw new Error(`${this.obj}.${this.attr} is unset`);\n        }\n    }\n    _update(attr_value) {\n        if (isSpec(attr_value)) {\n            this._value = attr_value;\n        }\n        else {\n            this._value = { value: attr_value }; // Value<T>\n        }\n        if (isPlainObject(this._value)) {\n            const { _value } = this;\n            this._value[serialize] = (serializer) => {\n                const { value, field, expr, transform, units } = _value;\n                return serializer.encode_struct((() => {\n                    if (value !== undefined) {\n                        return { type: \"value\", value, transform, units };\n                    }\n                    else if (field !== undefined) {\n                        return { type: \"field\", field, transform, units };\n                    }\n                    else {\n                        return { type: \"expr\", expr, transform, units };\n                    }\n                })());\n            };\n        }\n        if (isValue(this._value)) {\n            this.validate(this._value.value);\n        }\n    }\n    materialize(value) {\n        return value;\n    }\n    scalar(value, n) {\n        return new UniformScalar(value, n);\n    }\n    uniform(source) {\n        const obj = this.get_value();\n        const n = source.get_length() ?? 1;\n        if (isExpr(obj)) {\n            const { expr, transform } = obj;\n            let result = expr.compute(source);\n            if (transform != null) {\n                result = transform.compute(result);\n            }\n            result = this.materialize(result);\n            return this.scalar(result, n);\n        }\n        else {\n            const { value, transform } = obj;\n            let result = value;\n            if (transform != null) {\n                result = transform.compute(result);\n            }\n            result = this.materialize(result);\n            return this.scalar(result, n);\n        }\n    }\n}\n/** @deprecated */\nexport class AnyScalar extends ScalarSpec {\n    static __name__ = \"AnyScalar\";\n}\nexport class DictScalar extends ScalarSpec {\n    static __name__ = \"DictScalar\";\n}\nexport class ColorScalar extends ScalarSpec {\n    static __name__ = \"ColorScalar\";\n}\nexport class NumberScalar extends ScalarSpec {\n    static __name__ = \"NumberScalar\";\n}\nexport class StringScalar extends ScalarSpec {\n    static __name__ = \"StringScalar\";\n}\nexport class NullStringScalar extends ScalarSpec {\n    static __name__ = \"NullStringScalar\";\n}\nexport class ArrayScalar extends ScalarSpec {\n    static __name__ = \"ArrayScalar\";\n}\nexport class LineJoinScalar extends ScalarSpec {\n    static __name__ = \"LineJoinScalar\";\n}\nexport class LineCapScalar extends ScalarSpec {\n    static __name__ = \"LineCapScalar\";\n}\nexport class LineDashScalar extends ScalarSpec {\n    static __name__ = \"LineDashScalar\";\n}\nexport class FontScalar extends ScalarSpec {\n    static __name__ = \"FontScalar\";\n    _default_override() {\n        return settings.dev ? \"Bokeh\" : unset;\n    }\n}\nexport class FontSizeScalar extends ScalarSpec {\n    static __name__ = \"FontSizeScalar\";\n}\nexport class FontStyleScalar extends ScalarSpec {\n    static __name__ = \"FontStyleScalar\";\n}\nexport class TextAlignScalar extends ScalarSpec {\n    static __name__ = \"TextAlignScalar\";\n}\nexport class TextBaselineScalar extends ScalarSpec {\n    static __name__ = \"TextBaselineScalar\";\n}\nexport class VectorSpec extends Property {\n    static __name__ = \"VectorSpec\";\n    __vector__;\n    _value = unset;\n    get_value() {\n        if (this._value !== unset) {\n            return this._value;\n        }\n        else {\n            throw new Error(`${this.obj}.${this.attr} is unset`);\n        }\n    }\n    _update(attr_value) {\n        if (isSpec(attr_value)) {\n            this._value = attr_value;\n        }\n        else {\n            this._value = { value: attr_value };\n        } // Value<T>\n        if (isPlainObject(this._value)) {\n            const { _value } = this;\n            this._value[serialize] = (serializer) => {\n                const { value, field, expr, transform, units } = _value;\n                return serializer.encode_struct((() => {\n                    if (value !== undefined) {\n                        return { type: \"value\", value, transform, units };\n                    }\n                    else if (field !== undefined) {\n                        return { type: \"field\", field, transform, units };\n                    }\n                    else {\n                        return { type: \"expr\", expr, transform, units };\n                    }\n                })());\n            };\n        }\n        if (isValue(this._value)) {\n            this.validate(this._value.value);\n        }\n    }\n    materialize(value) {\n        return value;\n    }\n    v_materialize(values) {\n        return values;\n    }\n    scalar(value, n) {\n        return new UniformScalar(value, n);\n    }\n    vector(values) {\n        return new UniformVector(values);\n    }\n    uniform(source) {\n        const obj = this.get_value();\n        const n = source.get_length() ?? 1;\n        if (isField(obj)) {\n            const { field, transform } = obj;\n            let array = source.get_column(field);\n            if (array != null) {\n                if (transform != null) {\n                    array = transform.v_compute(array);\n                }\n                array = this.v_materialize(array);\n                return this.vector(array);\n            }\n            else {\n                const message = `attempted to retrieve property array for nonexistent field '${field}'`;\n                if (settings.force_fields) {\n                    throw new Error(message);\n                }\n                else {\n                    logger.warn(message);\n                }\n                return this.scalar(null, n);\n            }\n        }\n        else if (isExpr(obj)) {\n            const { expr, transform } = obj;\n            let array = expr.v_compute(source);\n            if (transform != null) {\n                array = transform.v_compute(array);\n            }\n            array = this.v_materialize(array);\n            return this.vector(array);\n        }\n        else if (isValue(obj)) {\n            const { value, transform } = obj;\n            let result = value;\n            if (transform != null) {\n                result = transform.compute(result);\n            }\n            result = this.materialize(result);\n            return this.scalar(result, n);\n        }\n        else {\n            unreachable();\n        }\n    }\n    array(source) {\n        let array;\n        const length = source.get_length() ?? 1;\n        const obj = this.get_value();\n        if (isField(obj)) {\n            const { field } = obj;\n            const column = source.get_column(field);\n            if (column != null) {\n                array = this.normalize(column);\n            }\n            else {\n                const message = `attempted to retrieve property array for nonexistent field '${field}'`;\n                if (settings.force_fields) {\n                    throw new Error(message);\n                }\n                else {\n                    logger.warn(message);\n                }\n                const missing = new Float64Array(length);\n                missing.fill(NaN);\n                array = missing;\n            }\n        }\n        else if (isExpr(obj)) {\n            const { expr } = obj;\n            array = this.normalize(expr.v_compute(source));\n        }\n        else {\n            const value = this.normalize([obj.value])[0];\n            if (isNumber(value)) {\n                const values = new Float64Array(length);\n                values.fill(value);\n                array = values;\n            }\n            else {\n                array = repeat(value, length);\n            }\n        }\n        const { transform } = obj;\n        if (transform != null) {\n            array = transform.v_compute(array);\n        }\n        return array;\n    }\n}\nexport class DataSpec extends VectorSpec {\n    static __name__ = \"DataSpec\";\n}\nexport class UnitsSpec extends VectorSpec {\n    static __name__ = \"UnitsSpec\";\n    _value = unset;\n    _update(attr_value) {\n        super._update(attr_value);\n        if (this._value !== unset) {\n            const { units } = this._value;\n            if (units != null && !includes(this.valid_units, units)) {\n                throw new Error(`units must be one of ${this.valid_units.join(\", \")}; got: ${units}`);\n            }\n        }\n    }\n    get units() {\n        return this._value !== unset ? this._value.units ?? this.default_units : this.default_units;\n    }\n    set units(units) {\n        if (this._value !== unset) {\n            if (units != this.default_units) {\n                this._value.units = units;\n            }\n            else {\n                delete this._value.units;\n            }\n        }\n        else {\n            throw new Error(`${this.obj}.${this.attr} is unset`);\n        }\n    }\n}\nexport class NumberUnitsSpec extends UnitsSpec {\n    static __name__ = \"NumberUnitsSpec\";\n    array(source) {\n        return new Float64Array(super.array(source));\n    }\n}\nexport class BaseCoordinateSpec extends DataSpec {\n    static __name__ = \"BaseCoordinateSpec\";\n}\nexport class CoordinateSpec extends BaseCoordinateSpec {\n    static __name__ = \"CoordinateSpec\";\n}\nexport class CoordinateSeqSpec extends BaseCoordinateSpec {\n    static __name__ = \"CoordinateSeqSpec\";\n}\nexport class CoordinateSeqSeqSeqSpec extends BaseCoordinateSpec {\n    static __name__ = \"CoordinateSeqSeqSeqSpec\";\n}\nexport class XCoordinateSpec extends CoordinateSpec {\n    static __name__ = \"XCoordinateSpec\";\n    dimension = \"x\";\n}\nexport class YCoordinateSpec extends CoordinateSpec {\n    static __name__ = \"YCoordinateSpec\";\n    dimension = \"y\";\n}\nexport class XCoordinateSeqSpec extends CoordinateSeqSpec {\n    static __name__ = \"XCoordinateSeqSpec\";\n    dimension = \"x\";\n}\nexport class YCoordinateSeqSpec extends CoordinateSeqSpec {\n    static __name__ = \"YCoordinateSeqSpec\";\n    dimension = \"y\";\n}\nexport class XCoordinateSeqSeqSeqSpec extends CoordinateSeqSeqSeqSpec {\n    static __name__ = \"XCoordinateSeqSeqSeqSpec\";\n    dimension = \"x\";\n}\nexport class YCoordinateSeqSeqSeqSpec extends CoordinateSeqSeqSeqSpec {\n    static __name__ = \"YCoordinateSeqSeqSeqSpec\";\n    dimension = \"y\";\n}\nexport class AngleSpec extends NumberUnitsSpec {\n    static __name__ = \"AngleSpec\";\n    get default_units() {\n        return \"rad\";\n    }\n    get valid_units() {\n        return [...enums.AngleUnits];\n    }\n    materialize(value) {\n        const coeff = -to_radians_coeff(this.units);\n        return value * coeff;\n    }\n    v_materialize(values) {\n        const coeff = -to_radians_coeff(this.units);\n        const result = new Float32Array(values.length);\n        mul(values, coeff, result); // TODO: in-place?\n        return result;\n    }\n    array(_source) {\n        throw new Error(\"not supported\");\n    }\n}\nexport class DistanceSpec extends NumberUnitsSpec {\n    static __name__ = \"DistanceSpec\";\n    get default_units() {\n        return \"data\";\n    }\n    get valid_units() {\n        return [...enums.SpatialUnits];\n    }\n}\nexport class NullDistanceSpec extends DistanceSpec {\n    static __name__ = \"NullDistanceSpec\";\n    materialize(value) {\n        return value ?? NaN;\n    }\n}\nexport class BooleanSpec extends DataSpec {\n    static __name__ = \"BooleanSpec\";\n    v_materialize(values) {\n        return new Uint8Array(values);\n    }\n    array(source) {\n        return new Uint8Array(super.array(source));\n    }\n}\nexport class IntSpec extends DataSpec {\n    static __name__ = \"IntSpec\";\n    v_materialize(values) {\n        return isTypedArray(values) ? values : new Int32Array(values);\n    }\n    array(source) {\n        return new Int32Array(super.array(source));\n    }\n}\nexport class NumberSpec extends DataSpec {\n    static __name__ = \"NumberSpec\";\n    v_materialize(values) {\n        return isTypedArray(values) ? values : new Float64Array(values);\n    }\n    array(source) {\n        return new Float64Array(super.array(source));\n    }\n}\nexport class ScreenSizeSpec extends NumberSpec {\n    static __name__ = \"ScreenSizeSpec\";\n    valid(value) {\n        return isNumber(value) && value >= 0;\n    }\n}\nexport class ColorSpec extends DataSpec {\n    static __name__ = \"ColorSpec\";\n    materialize(color) {\n        return encode_rgba(color2rgba(color));\n    }\n    v_materialize(colors) {\n        if (is_NDArray(colors)) {\n            if (colors.dtype == \"uint32\" && colors.dimension == 1) {\n                return to_big_endian(colors);\n            }\n            else if (colors.dtype == \"uint8\" && colors.dimension == 1) {\n                const [n] = colors.shape;\n                const array = new RGBAArray(4 * n);\n                let j = 0;\n                for (const gray of colors) {\n                    array[j++] = gray;\n                    array[j++] = gray;\n                    array[j++] = gray;\n                    array[j++] = 255;\n                }\n                return new ColorArray(array.buffer);\n            }\n            else if (colors.dtype == \"uint8\" && colors.dimension == 2) {\n                const [n, d] = colors.shape;\n                if (d == 4) {\n                    return new ColorArray(colors.buffer);\n                }\n                else if (d == 3) {\n                    const array = new RGBAArray(4 * n);\n                    for (let i = 0, j = 0; i < d * n;) {\n                        array[j++] = colors[i++];\n                        array[j++] = colors[i++];\n                        array[j++] = colors[i++];\n                        array[j++] = 255;\n                    }\n                    return new ColorArray(array.buffer);\n                }\n            }\n            else if ((colors.dtype == \"float32\" || colors.dtype == \"float64\") && colors.dimension == 2) {\n                const [n, d] = colors.shape;\n                if (d == 3 || d == 4) {\n                    const array = new RGBAArray(4 * n);\n                    for (let i = 0, j = 0; i < d * n;) {\n                        array[j++] = colors[i++] * 255;\n                        array[j++] = colors[i++] * 255;\n                        array[j++] = colors[i++] * 255;\n                        array[j++] = (d == 3 ? 1 : colors[i++]) * 255;\n                    }\n                    return new ColorArray(array.buffer);\n                }\n            }\n            else if (colors.dtype == \"object\" && colors.dimension == 1) {\n                return this._from_css_array(colors);\n            }\n        }\n        else {\n            return this._from_css_array(colors);\n        }\n        throw new Error(\"invalid color array\");\n    }\n    _from_css_array(colors) {\n        const n = colors.length;\n        const array = new RGBAArray(4 * n);\n        let j = 0;\n        for (const color of colors) {\n            const [r, g, b, a] = color2rgba(color);\n            array[j++] = r;\n            array[j++] = g;\n            array[j++] = b;\n            array[j++] = a;\n        }\n        return new ColorArray(array.buffer);\n    }\n    vector(values) {\n        return new ColorUniformVector(values);\n    }\n}\nexport class NDArraySpec extends DataSpec {\n    static __name__ = \"NDArraySpec\";\n}\n/** @deprecated */\nexport class AnySpec extends DataSpec {\n    static __name__ = \"AnySpec\";\n}\nexport class StringSpec extends DataSpec {\n    static __name__ = \"StringSpec\";\n}\nexport class NullStringSpec extends DataSpec {\n    static __name__ = \"NullStringSpec\";\n}\nexport class ArraySpec extends DataSpec {\n    static __name__ = \"ArraySpec\";\n}\nexport class MarkerSpec extends DataSpec {\n    static __name__ = \"MarkerSpec\";\n}\nexport class LineJoinSpec extends DataSpec {\n    static __name__ = \"LineJoinSpec\";\n}\nexport class LineCapSpec extends DataSpec {\n    static __name__ = \"LineCapSpec\";\n}\nexport class LineDashSpec extends DataSpec {\n    static __name__ = \"LineDashSpec\";\n}\nexport class FontSpec extends DataSpec {\n    static __name__ = \"FontSpec\";\n    _default_override() {\n        return settings.dev ? \"Bokeh\" : unset;\n    }\n}\nexport class FontSizeSpec extends DataSpec {\n    static __name__ = \"FontSizeSpec\";\n}\nexport class FontStyleSpec extends DataSpec {\n    static __name__ = \"FontStyleSpec\";\n}\nexport class TextAlignSpec extends DataSpec {\n    static __name__ = \"TextAlignSpec\";\n}\nexport class TextBaselineSpec extends DataSpec {\n    static __name__ = \"TextBaselineSpec\";\n}\n//# sourceMappingURL=properties.js.map", "import * as p from \"./properties\";\nimport { LineJoin, LineCap, LineDash, FontStyle, HatchPatternType, TextAlign, TextBaseline } from \"./enums\";\nimport * as k from \"./kinds\";\nimport { keys } from \"./util/object\";\nimport { isString } from \"./util/types\";\nexport const Line = {\n    line_color: [k.Nullable(k.Color), \"black\"],\n    line_alpha: [k.Alpha, 1.0],\n    line_width: [k.Float, 1],\n    line_join: [LineJoin, \"bevel\"],\n    line_cap: [LineCap, \"butt\"],\n    line_dash: [k.Or(LineDash, k.Array(k.Float)), []],\n    line_dash_offset: [k.Float, 0],\n};\nexport const Fill = {\n    fill_color: [k.Nullable(k.Color), \"gray\"],\n    fill_alpha: [k.Alpha, 1.0],\n};\nexport const Image = {\n    global_alpha: [k.Alpha, 1.0],\n};\nexport const Hatch = {\n    hatch_color: [k.Nullable(k.Color), \"black\"],\n    hatch_alpha: [k.Alpha, 1.0],\n    hatch_scale: [k.Float, 12.0],\n    hatch_pattern: [k.Nullable(k.Or(HatchPatternType, k.Str)), null],\n    hatch_weight: [k.Float, 1.0],\n    hatch_extra: [k.Dict(k.AnyRef()), {}], // XXX: recursive imports\n};\nexport const Text = {\n    text_color: [k.Nullable(k.Color), \"#444444\"],\n    text_outline_color: [k.Nullable(k.Color), null],\n    text_alpha: [k.Alpha, 1.0],\n    text_font: [p.Font, \"helvetica\"],\n    text_font_size: [k.FontSize, \"16px\"],\n    text_font_style: [FontStyle, \"normal\"],\n    text_align: [TextAlign, \"left\"],\n    text_baseline: [TextBaseline, \"bottom\"],\n    text_line_height: [k.Float, 1.2],\n};\nexport const LineScalar = {\n    line_color: [p.ColorScalar, \"black\"],\n    line_alpha: [p.NumberScalar, 1.0],\n    line_width: [p.NumberScalar, 1],\n    line_join: [p.LineJoinScalar, \"bevel\"],\n    line_cap: [p.LineCapScalar, \"butt\"],\n    line_dash: [p.LineDashScalar, []],\n    line_dash_offset: [p.NumberScalar, 0],\n};\nexport const FillScalar = {\n    fill_color: [p.ColorScalar, \"gray\"],\n    fill_alpha: [p.NumberScalar, 1.0],\n};\nexport const ImageScalar = {\n    global_alpha: [p.NumberScalar, 1.0],\n};\nexport const HatchScalar = {\n    hatch_color: [p.ColorScalar, \"black\"],\n    hatch_alpha: [p.NumberScalar, 1.0],\n    hatch_scale: [p.NumberScalar, 12.0],\n    hatch_pattern: [p.NullStringScalar, null],\n    hatch_weight: [p.NumberScalar, 1.0],\n    hatch_extra: [p.DictScalar, {}],\n};\nexport const TextScalar = {\n    text_color: [p.ColorScalar, \"#444444\"],\n    text_outline_color: [p.ColorScalar, null],\n    text_alpha: [p.NumberScalar, 1.0],\n    text_font: [p.FontScalar, \"helvetica\"],\n    text_font_size: [p.FontSizeScalar, \"16px\"],\n    text_font_style: [p.FontStyleScalar, \"normal\"],\n    text_align: [p.TextAlignScalar, \"left\"],\n    text_baseline: [p.TextBaselineScalar, \"bottom\"],\n    text_line_height: [p.NumberScalar, 1.2],\n};\nexport const LineVector = {\n    line_color: [p.ColorSpec, \"black\"],\n    line_alpha: [p.NumberSpec, 1.0],\n    line_width: [p.NumberSpec, 1],\n    line_join: [p.LineJoinSpec, \"bevel\"],\n    line_cap: [p.LineCapSpec, \"butt\"],\n    line_dash: [p.LineDashSpec, []],\n    line_dash_offset: [p.NumberSpec, 0],\n};\nexport const FillVector = {\n    fill_color: [p.ColorSpec, \"gray\"],\n    fill_alpha: [p.NumberSpec, 1.0],\n};\nexport const ImageVector = {\n    global_alpha: [p.NumberSpec, 1.0],\n};\nexport const HatchVector = {\n    hatch_color: [p.ColorSpec, \"black\"],\n    hatch_alpha: [p.NumberSpec, 1.0],\n    hatch_scale: [p.NumberSpec, 12.0],\n    hatch_pattern: [p.NullStringSpec, null],\n    hatch_weight: [p.NumberSpec, 1.0],\n    hatch_extra: [p.DictScalar, {}],\n};\nexport const TextVector = {\n    text_color: [p.ColorSpec, \"#444444\"],\n    text_outline_color: [p.ColorSpec, null],\n    text_alpha: [p.NumberSpec, 1.0],\n    text_font: [p.FontSpec, \"helvetica\"],\n    text_font_size: [p.FontSizeSpec, \"16px\"],\n    text_font_style: [p.FontStyleSpec, \"normal\"],\n    text_align: [p.TextAlignSpec, \"left\"],\n    text_baseline: [p.TextBaselineSpec, \"bottom\"],\n    text_line_height: [p.NumberSpec, 1.2],\n};\nexport function attrs_of(model, prefix, mixin, new_prefix = false) {\n    const attrs = {};\n    for (const attr of keys(mixin)) {\n        const prefixed_attr = `${prefix}${attr}`;\n        const value = model[prefixed_attr];\n        const new_attr = (() => {\n            if (isString(new_prefix)) {\n                return `${new_prefix}${attr}`;\n            }\n            else if (new_prefix) {\n                return prefixed_attr;\n            }\n            else {\n                return attr;\n            }\n        })();\n        attrs[new_attr] = value;\n    }\n    return attrs;\n}\n//# sourceMappingURL=property_mixins.js.map", "import { VisualProperties, VisualUniforms } from \"./visual\";\nimport * as mixins from \"../property_mixins\";\nimport { LineJoin, LineCap, LineDash } from \"../enums\";\nimport { color2css } from \"../util/color\";\nimport { isArray, isInteger } from \"../util/types\";\nexport function resolve_line_dash(line_dash) {\n    if (isArray(line_dash)) {\n        return line_dash;\n    }\n    else {\n        switch (line_dash) {\n            case \"solid\": return [];\n            case \"dashed\": return [6];\n            case \"dotted\": return [2, 4];\n            case \"dotdash\": return [2, 4, 6, 4];\n            case \"dashdot\": return [6, 4, 2, 4];\n            default:\n                return line_dash.split(\" \").map(Number).filter(isInteger);\n        }\n    }\n}\nexport class Line extends VisualProperties {\n    static __name__ = \"Line\";\n    get doit() {\n        const color = this.get_line_color();\n        const alpha = this.get_line_alpha();\n        const width = this.get_line_width();\n        return !(color == null || alpha == 0 || width == 0);\n    }\n    apply(ctx) {\n        const { doit } = this;\n        if (doit) {\n            this.set_value(ctx);\n            ctx.stroke();\n        }\n        return doit;\n    }\n    values() {\n        return {\n            color: this.get_line_color(),\n            alpha: this.get_line_alpha(),\n            width: this.get_line_width(),\n            join: this.get_line_join(),\n            cap: this.get_line_cap(),\n            dash: this.get_line_dash(),\n            offset: this.get_line_dash_offset(),\n        };\n    }\n    set_value(ctx) {\n        const color = this.get_line_color();\n        const alpha = this.get_line_alpha();\n        ctx.strokeStyle = color2css(color, alpha);\n        ctx.lineWidth = this.get_line_width();\n        ctx.lineJoin = this.get_line_join();\n        ctx.lineCap = this.get_line_cap();\n        ctx.setLineDash(resolve_line_dash(this.get_line_dash()));\n        ctx.lineDashOffset = this.get_line_dash_offset();\n    }\n    get_line_color() {\n        const css_color = this._get_css_value(\"line-color\");\n        if (css_color != \"\") {\n            return css_color;\n        }\n        return this.line_color.get_value();\n    }\n    get_line_alpha() {\n        const css_alpha = this._get_css_value(\"line-alpha\");\n        if (css_alpha != \"\") {\n            const alpha = Number(css_alpha);\n            if (isFinite(alpha)) {\n                return alpha;\n            }\n        }\n        return this.line_alpha.get_value();\n    }\n    get_line_width() {\n        const css_width = this._get_css_value(\"line-width\");\n        if (css_width != \"\") {\n            const width = Number(css_width);\n            if (isFinite(width)) {\n                return width;\n            }\n        }\n        return this.line_width.get_value();\n    }\n    get_line_join() {\n        const css_join = this._get_css_value(\"line-join\");\n        if (LineJoin.valid(css_join)) {\n            return css_join;\n        }\n        return this.line_join.get_value();\n    }\n    get_line_cap() {\n        const css_cap = this._get_css_value(\"line-cap\");\n        if (LineCap.valid(css_cap)) {\n            return css_cap;\n        }\n        return this.line_cap.get_value();\n    }\n    get_line_dash() {\n        const css_dash = this._get_css_value(\"line-dash\");\n        if (LineDash.valid(css_dash)) {\n            return css_dash;\n        }\n        return this.line_dash.get_value();\n    }\n    get_line_dash_offset() {\n        const css_dash_offset = this._get_css_value(\"line-dash-offset\");\n        if (css_dash_offset != \"\") {\n            const dash_offset = Number(css_dash_offset);\n            if (isFinite(dash_offset)) {\n                return dash_offset;\n            }\n        }\n        return this.line_dash_offset.get_value();\n    }\n}\nexport class LineScalar extends VisualUniforms {\n    static __name__ = \"LineScalar\";\n    get doit() {\n        const color = this.line_color.value;\n        const alpha = this.line_alpha.value;\n        const width = this.line_width.value;\n        return !(color == 0 || alpha == 0 || width == 0);\n    }\n    apply(ctx) {\n        const { doit } = this;\n        if (doit) {\n            this.set_value(ctx);\n            ctx.stroke();\n        }\n        return doit;\n    }\n    values() {\n        return {\n            color: this.line_color.value,\n            alpha: this.line_alpha.value,\n            width: this.line_width.value,\n            join: this.line_join.value,\n            cap: this.line_cap.value,\n            dash: this.line_dash.value,\n            offset: this.line_dash_offset.value,\n        };\n    }\n    set_value(ctx) {\n        const color = this.line_color.value;\n        const alpha = this.line_alpha.value;\n        ctx.strokeStyle = color2css(color, alpha);\n        ctx.lineWidth = this.line_width.value;\n        ctx.lineJoin = this.line_join.value;\n        ctx.lineCap = this.line_cap.value;\n        ctx.setLineDash(resolve_line_dash(this.line_dash.value));\n        ctx.lineDashOffset = this.line_dash_offset.value;\n    }\n}\nexport class LineVector extends VisualUniforms {\n    static __name__ = \"LineVector\";\n    get doit() {\n        const { line_color } = this;\n        if (line_color.is_Scalar() && line_color.value == 0) {\n            return false;\n        }\n        const { line_alpha } = this;\n        if (line_alpha.is_Scalar() && line_alpha.value == 0) {\n            return false;\n        }\n        const { line_width } = this;\n        if (line_width.is_Scalar() && line_width.value == 0) {\n            return false;\n        }\n        return true;\n    }\n    v_doit(i) {\n        if (this.line_color.get(i) == 0) {\n            return false;\n        }\n        if (this.line_alpha.get(i) == 0) {\n            return false;\n        }\n        if (this.line_width.get(i) == 0) {\n            return false;\n        }\n        return true;\n    }\n    apply(ctx, i) {\n        const doit = this.v_doit(i);\n        if (doit) {\n            this.set_vectorize(ctx, i);\n            ctx.stroke();\n        }\n        return doit;\n    }\n    values(i) {\n        return {\n            color: this.line_color.get(i),\n            alpha: this.line_alpha.get(i),\n            width: this.line_width.get(i),\n            join: this.line_join.get(i),\n            cap: this.line_cap.get(i),\n            dash: this.line_dash.get(i),\n            offset: this.line_dash_offset.get(i),\n        };\n    }\n    set_vectorize(ctx, i) {\n        const color = this.line_color.get(i);\n        const alpha = this.line_alpha.get(i);\n        const width = this.line_width.get(i);\n        const join = this.line_join.get(i);\n        const cap = this.line_cap.get(i);\n        const dash = this.line_dash.get(i);\n        const offset = this.line_dash_offset.get(i);\n        ctx.strokeStyle = color2css(color, alpha);\n        ctx.lineWidth = width;\n        ctx.lineJoin = join;\n        ctx.lineCap = cap;\n        ctx.setLineDash(resolve_line_dash(dash));\n        ctx.lineDashOffset = offset;\n    }\n}\nLine.prototype.type = \"line\";\nLine.prototype.attrs = Object.keys(mixins.Line);\nLineScalar.prototype.type = \"line\";\nLineScalar.prototype.attrs = Object.keys(mixins.LineScalar);\nLineVector.prototype.type = \"line\";\nLineVector.prototype.attrs = Object.keys(mixins.LineVector);\n//# sourceMappingURL=line.js.map", "import { BaseGLGlyph } from \"./base\";\nimport { Float32Buffer, NormalizedUint8Buffer, Uint8Buffer } from \"./buffer\";\nimport { resolve_line_dash } from \"../../../core/visuals/line\";\nexport class BaseLineGL extends BaseGLGlyph {\n    glyph;\n    static __name__ = \"BaseLineGL\";\n    _antialias = 1.5; // Make this larger to test antialiasing at edges.\n    _miter_limit = 10.0; // Threshold for miters to be replaced by bevels.\n    // data properties\n    _points;\n    _show; // Applies to segments not points.\n    // visual properties\n    _linewidth = new Float32Buffer(this.regl_wrapper);\n    _line_color = new NormalizedUint8Buffer(this.regl_wrapper, 4);\n    _line_cap = new Uint8Buffer(this.regl_wrapper);\n    _line_join = new Uint8Buffer(this.regl_wrapper);\n    _is_dashed = false;\n    // visual properties that are only used if line is dashed.\n    _length_so_far; // Depends on both data and visuals.\n    _dash_tex = [];\n    _dash_tex_info;\n    _dash_scale;\n    _dash_offset;\n    constructor(regl_wrapper, glyph) {\n        super(regl_wrapper, glyph);\n        this.glyph = glyph;\n    }\n    _draw_single(main_gl_glyph, transform, line_offset, point_offset, nsegments, framebuffer, show = null) {\n        const solid_props = {\n            scissor: this.regl_wrapper.scissor,\n            viewport: this.regl_wrapper.viewport,\n            canvas_size: [transform.width, transform.height],\n            antialias: this._antialias / transform.pixel_ratio,\n            miter_limit: this._miter_limit,\n            points: main_gl_glyph._points,\n            show: show ?? main_gl_glyph._show,\n            nsegments,\n            linewidth: this._linewidth,\n            line_color: this._line_color,\n            line_cap: this._line_cap,\n            line_join: this._line_join,\n            framebuffer,\n            point_offset,\n            line_offset,\n        };\n        if (this._is_dashed && this._dash_tex[line_offset] != null) {\n            const dashed_props = {\n                ...solid_props,\n                length_so_far: main_gl_glyph._length_so_far,\n                dash_tex: this._dash_tex[line_offset],\n                dash_tex_info: this._dash_tex_info,\n                dash_scale: this._dash_scale,\n                dash_offset: this._dash_offset,\n            };\n            this.regl_wrapper.dashed_line()(dashed_props);\n        }\n        else {\n            this.regl_wrapper.solid_line()(solid_props);\n        }\n    }\n    _set_length_single(length_so_far, points, show) {\n        // Set length so far for a single line from the points and show flags for that line.\n        // Only needed if line is dashed.\n        const nsegments = length_so_far.length;\n        let length = 0.0;\n        for (let i = 0; i < nsegments; i++) {\n            length_so_far[i] = length;\n            if (show[i + 1] == 1) {\n                length += Math.sqrt((points[2 * i + 4] - points[2 * i + 2]) ** 2 +\n                    (points[2 * i + 5] - points[2 * i + 3]) ** 2);\n            }\n            else {\n                // Reset to zero at invalid point.\n                length = 0.0;\n            }\n        }\n    }\n    _set_points_single(points, sx, sy) {\n        // Set points array for a single line.\n        const npoints = points.length / 2 - 2;\n        const is_closed = (npoints > 2 && sx[0] == sx[npoints - 1] && sy[0] == sy[npoints - 1] &&\n            isFinite(sx[0] + sy[0]));\n        for (let i = 1; i < npoints + 1; i++) {\n            points[2 * i] = sx[i - 1];\n            points[2 * i + 1] = sy[i - 1];\n        }\n        if (is_closed) {\n            points[0] = points[2 * npoints - 2]; // Last but one point.\n            points[1] = points[2 * npoints - 1];\n            points[2 * npoints + 2] = points[4]; // Second point.\n            points[2 * npoints + 3] = points[5];\n        }\n        else {\n            points[0] = 0.0;\n            points[1] = 0.0;\n            points[2 * npoints + 2] = 0.0;\n            points[2 * npoints + 3] = 0.0;\n        }\n    }\n    _set_show_single(show, points) {\n        // Set show flags for a single line from the points of that line.\n        // Do not show line segments which have a NaN coordinate at either end, and\n        // also take account of line being closed (start and end points identical).\n        const npoints = points.length / 2 - 2;\n        let start_finite = isFinite(points[2] + points[3]);\n        for (let i = 1; i < npoints; i++) {\n            const end_finite = isFinite(points[2 * i + 2] + points[2 * i + 3]);\n            show[i] = (start_finite && end_finite) ? 1 : 0;\n            start_finite = end_finite;\n        }\n        const is_closed = npoints > 2 && points[0] == points[2 * npoints - 2] && points[1] == points[2 * npoints - 1];\n        if (is_closed) {\n            show[0] = show[npoints - 1];\n            show[npoints] = show[1];\n        }\n        else {\n            show[0] = 0;\n            show[npoints] = 0;\n        }\n    }\n    _set_visuals() {\n        const line_visuals = this._get_visuals();\n        this._line_color.set_from_color(line_visuals.line_color, line_visuals.line_alpha);\n        this._linewidth.set_from_prop(line_visuals.line_width);\n        this._line_cap.set_from_line_cap(line_visuals.line_cap);\n        this._line_join.set_from_line_join(line_visuals.line_join);\n        const { line_dash } = line_visuals;\n        this._is_dashed = !(line_dash.is_Scalar() && line_dash.get(0).length == 0);\n        if (this._is_dashed) {\n            if (this._dash_offset == null) {\n                this._dash_offset = new Float32Buffer(this.regl_wrapper);\n            }\n            this._dash_offset.set_from_prop(line_visuals.line_dash_offset);\n            const n = line_dash.length;\n            if (this._dash_tex_info == null) {\n                this._dash_tex_info = new Float32Buffer(this.regl_wrapper, 4);\n            }\n            const dash_tex_info = this._dash_tex_info.get_sized_array(4 * n);\n            if (this._dash_scale == null) {\n                this._dash_scale = new Float32Buffer(this.regl_wrapper);\n            }\n            const dash_scale = this._dash_scale.get_sized_array(n);\n            // All other dash properties are assumed vector rather than scalar.\n            for (let i = 0; i < n; i++) {\n                const arr = resolve_line_dash(line_dash.get(i));\n                if (arr.length > 0) {\n                    // This line is dashed\n                    const [tex_info, tex, scale] = this.regl_wrapper.get_dash(arr);\n                    this._dash_tex.push(tex);\n                    for (let j = 0; j < 4; j++) {\n                        dash_tex_info[4 * i + j] = tex_info[j];\n                    }\n                    dash_scale[i] = scale;\n                }\n                else {\n                    // This line is solid\n                    this._dash_tex.push(null);\n                    dash_tex_info.fill(0, 4 * i, 4 * (i + 1));\n                    dash_scale[i] = 0;\n                }\n            }\n            this._dash_tex_info.update();\n            this._dash_scale.update();\n        }\n    }\n}\n//# sourceMappingURL=base_line.js.map"],
  "mappings": "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",
  "names": ["Signal", "Array", "Function", "Map", "Node", "Number", "Set", "String", "Kinds", "Any", "Unknown", "Bool", "Ref", "AnyRef", "Float", "Int", "Percent", "Or", "And", "Tuple", "Struct", "PartialStruct", "Iterable", "Arrayable", "List", "NonEmptyList", "Null", "Nullable", "Opt", "Bytes", "Str", "Regex", "Enum", "values", "Dict", "Mapping", "Set", "Color", "CSSLength", "Func", "NonNegative", "Positive", "Node", "String", "Number", "Array", "Map", "Function", "keys", "size", "values", "map", "range", "range", "abs", "max", "map", "map", "_a", "size", "max", "value", "_a", "values", "Font", "values", "values", "Array", "Font", "Line", "LineScalar", "LineVector", "join"]
}
