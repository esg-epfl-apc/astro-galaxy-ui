{
  "version": 3,
  "sources": ["../../@bokeh/bokehjs/build/js/lib/models/glyphs/webgl/lrtb.js"],
  "sourcesContent": ["import { SingleMarkerGL } from \"./single_marker\";\nconst { abs } = Math;\nexport class LRTBGL extends SingleMarkerGL {\n    glyph;\n    static __name__ = \"LRTBGL\";\n    constructor(regl_wrapper, glyph) {\n        super(regl_wrapper, glyph);\n        this.glyph = glyph;\n    }\n    get marker_type() {\n        return this._border_radius_nonzero ? \"round_rect\" : \"rect\";\n    }\n    _set_data() {\n        const nmarkers = this.nvertices;\n        const centers_array = this._centers.get_sized_array(nmarkers * 2);\n        const widths_array = this._widths.get_sized_array(nmarkers);\n        const heights_array = this._heights.get_sized_array(nmarkers);\n        const { sleft, sright, stop, sbottom } = this.glyph;\n        const { missing_point } = SingleMarkerGL;\n        for (let i = 0; i < nmarkers; i++) {\n            const l = sleft[i];\n            const r = sright[i];\n            const t = stop[i];\n            const b = sbottom[i];\n            if (isFinite(l + r + t + b)) {\n                centers_array[2 * i] = (l + r) / 2;\n                centers_array[2 * i + 1] = (t + b) / 2;\n                widths_array[i] = abs(r - l);\n                heights_array[i] = abs(t - b);\n            }\n            else {\n                centers_array[2 * i] = missing_point;\n                centers_array[2 * i + 1] = missing_point;\n                widths_array[i] = missing_point;\n                heights_array[i] = missing_point;\n            }\n        }\n        this._centers.update();\n        this._widths.update();\n        this._heights.update();\n        this._angles.set_from_scalar(0);\n        if (this.glyph.border_radius != null) {\n            const { top_left, top_right, bottom_right, bottom_left } = this.glyph.border_radius;\n            this._border_radius = [top_left, top_right, bottom_right, bottom_left];\n            this._border_radius_nonzero = Math.max(...this._border_radius) > 0.0;\n        }\n        else {\n            this._border_radius = [0, 0, 0, 0];\n            this._border_radius_nonzero = false;\n        }\n    }\n    _set_once() {\n        super._set_once();\n        this._auxs.set_from_scalar(0);\n    }\n}\n//# sourceMappingURL=lrtb.js.map"],
  "mappings": ";;;;;;;;AACA,IAAM,EAAE,IAAI,IAAI;AACT,IAAM,SAAN,cAAqB,eAAe;AAAA,EAGvC,YAAY,cAAc,OAAO;AAC7B,UAAM,cAAc,KAAK;AAH7B;AAII,SAAK,QAAQ;AAAA,EACjB;AAAA,EACA,IAAI,cAAc;AACd,WAAO,KAAK,yBAAyB,eAAe;AAAA,EACxD;AAAA,EACA,YAAY;AACR,UAAM,WAAW,KAAK;AACtB,UAAM,gBAAgB,KAAK,SAAS,gBAAgB,WAAW,CAAC;AAChE,UAAM,eAAe,KAAK,QAAQ,gBAAgB,QAAQ;AAC1D,UAAM,gBAAgB,KAAK,SAAS,gBAAgB,QAAQ;AAC5D,UAAM,EAAE,OAAO,QAAQ,MAAM,QAAQ,IAAI,KAAK;AAC9C,UAAM,EAAE,cAAc,IAAI;AAC1B,aAAS,IAAI,GAAG,IAAI,UAAU,KAAK;AAC/B,YAAM,IAAI,MAAM,CAAC;AACjB,YAAM,IAAI,OAAO,CAAC;AAClB,YAAM,IAAI,KAAK,CAAC;AAChB,YAAM,IAAI,QAAQ,CAAC;AACnB,UAAI,SAAS,IAAI,IAAI,IAAI,CAAC,GAAG;AACzB,sBAAc,IAAI,CAAC,KAAK,IAAI,KAAK;AACjC,sBAAc,IAAI,IAAI,CAAC,KAAK,IAAI,KAAK;AACrC,qBAAa,CAAC,IAAI,IAAI,IAAI,CAAC;AAC3B,sBAAc,CAAC,IAAI,IAAI,IAAI,CAAC;AAAA,MAChC,OACK;AACD,sBAAc,IAAI,CAAC,IAAI;AACvB,sBAAc,IAAI,IAAI,CAAC,IAAI;AAC3B,qBAAa,CAAC,IAAI;AAClB,sBAAc,CAAC,IAAI;AAAA,MACvB;AAAA,IACJ;AACA,SAAK,SAAS,OAAO;AACrB,SAAK,QAAQ,OAAO;AACpB,SAAK,SAAS,OAAO;AACrB,SAAK,QAAQ,gBAAgB,CAAC;AAC9B,QAAI,KAAK,MAAM,iBAAiB,MAAM;AAClC,YAAM,EAAE,UAAU,WAAW,cAAc,YAAY,IAAI,KAAK,MAAM;AACtE,WAAK,iBAAiB,CAAC,UAAU,WAAW,cAAc,WAAW;AACrE,WAAK,yBAAyB,KAAK,IAAI,GAAG,KAAK,cAAc,IAAI;AAAA,IACrE,OACK;AACD,WAAK,iBAAiB,CAAC,GAAG,GAAG,GAAG,CAAC;AACjC,WAAK,yBAAyB;AAAA,IAClC;AAAA,EACJ;AAAA,EACA,YAAY;AACR,UAAM,UAAU;AAChB,SAAK,MAAM,gBAAgB,CAAC;AAAA,EAChC;AACJ;AAnDI,cAFS,QAEF,YAAW;",
  "names": []
}
