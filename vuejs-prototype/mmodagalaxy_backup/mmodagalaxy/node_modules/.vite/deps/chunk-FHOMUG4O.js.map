{
  "version": 3,
  "sources": ["../../@bokeh/bokehjs/build/js/lib/version.js", "../../@bokeh/bokehjs/build/js/lib/core/util/assert.js", "../../@bokeh/bokehjs/build/js/lib/core/util/types.js", "../../@bokeh/bokehjs/build/js/lib/core/util/math.js", "../../@bokeh/bokehjs/build/js/lib/core/util/arrayable.js", "../../@bokeh/bokehjs/build/js/lib/core/util/array.js", "../../@bokeh/bokehjs/build/js/lib/core/util/object.js", "../../@bokeh/bokehjs/build/js/lib/core/logging.js", "../../@bokeh/bokehjs/build/js/lib/core/util/svg_colors.js", "../../@bokeh/bokehjs/build/js/lib/core/util/color.js", "../../@bokeh/bokehjs/build/js/lib/core/visuals/patterns.js", "../../@bokeh/bokehjs/build/js/lib/models/glyphs/webgl/webgl_utils.js", "../../@bokeh/bokehjs/build/js/lib/models/glyphs/webgl/buffer.js", "../../@bokeh/bokehjs/build/js/lib/models/glyphs/webgl/base.js"],
  "sourcesContent": ["export const version = \"3.6.3\";\n", "export class AssertionError extends Error {\n    static __name__ = \"AssertionError\";\n}\nexport class UnreachableError extends Error {\n    static __name__ = \"UnreachableError\";\n}\nexport function assert(condition, message) {\n    if (condition === true || (condition !== false && condition())) {\n        return;\n    }\n    throw new AssertionError(message ?? \"Assertion failed\");\n}\nexport function assert_debug(condition, message) {\n    if (typeof DEBUG !== \"undefined\" && DEBUG) {\n        assert(condition, message);\n    }\n}\nexport function unreachable(msg) {\n    const suffix = msg != null ? `: ${msg}` : \"\";\n    throw new UnreachableError(`unreachable code${suffix}`);\n}\n//# sourceMappingURL=assert.js.map", "//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\nconst { toString } = Object.prototype;\nexport function is_undefined(obj) {\n    return typeof obj === \"undefined\";\n}\nexport function is_defined(obj) {\n    return typeof obj !== \"undefined\";\n}\n// XXX: use only to work around strict conditional expressions\nexport function is_nullish(obj) {\n    return obj == null;\n}\nexport function isBoolean(obj) {\n    return obj === true || obj === false || toString.call(obj) === \"[object Boolean]\";\n}\nexport function isNumber(obj) {\n    return toString.call(obj) === \"[object Number]\";\n}\nexport function isInteger(obj) {\n    return isNumber(obj) && Number.isInteger(obj);\n}\nexport function isString(obj) {\n    return toString.call(obj) === \"[object String]\";\n}\nexport function isSymbol(obj) {\n    return typeof obj === \"symbol\";\n}\nexport function isPrimitive(obj) {\n    return obj === null || isBoolean(obj) || isNumber(obj) || isString(obj) || isSymbol(obj);\n}\nexport function isFunction(obj) {\n    const rep = toString.call(obj);\n    switch (rep) {\n        case \"[object Function]\":\n        case \"[object AsyncFunction]\":\n        case \"[object GeneratorFunction]\":\n        case \"[object AsyncGeneratorFunction]\":\n            return true;\n        default:\n            return false;\n    }\n}\nexport function isArray(obj) {\n    return Array.isArray(obj);\n}\nexport function isArrayOf(array, predicate) {\n    for (const item of array) {\n        if (!predicate(item)) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function isArrayableOf(array, predicate) {\n    for (const item of array) {\n        if (!predicate(item)) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function isTypedArray(obj) {\n    return ArrayBuffer.isView(obj) && !(obj instanceof DataView);\n}\nexport function isObject(obj) {\n    const tp = typeof obj;\n    return tp === \"function\" || tp === \"object\" && !!obj;\n}\nexport function isBasicObject(obj) {\n    return isObject(obj) && is_nullish(obj.constructor);\n}\nexport function isPlainObject(obj) {\n    return isObject(obj) && (is_nullish(obj.constructor) || obj.constructor === Object);\n}\nexport function isDict(obj) {\n    return obj instanceof Map || isPlainObject(obj);\n}\nexport function isIterable(obj) {\n    return isObject(obj) && Symbol.iterator in obj;\n}\nexport function isArrayable(obj) {\n    return isIterable(obj) && \"length\" in obj;\n}\n//# sourceMappingURL=types.js.map", "import { isObject } from \"./types\";\nimport { assert } from \"./assert\";\nconst { PI, abs, sign, sqrt } = Math;\nexport { PI, abs, sqrt };\nexport function angle_norm(angle) {\n    if (angle == 0) {\n        return 0;\n    }\n    while (angle <= 0) {\n        angle += 2 * PI;\n    }\n    while (angle > 2 * PI) {\n        angle -= 2 * PI;\n    }\n    return angle;\n}\nexport function angle_dist(lhs, rhs) {\n    return angle_norm(lhs - rhs);\n}\nexport function angle_between(mid, lhs, rhs, anticlock = false) {\n    const d = angle_dist(lhs, rhs);\n    if (d == 0) {\n        return false;\n    }\n    if (d == 2 * PI) {\n        return true;\n    }\n    const norm_mid = angle_norm(mid);\n    const cond = angle_dist(lhs, norm_mid) <= d && angle_dist(norm_mid, rhs) <= d;\n    return !anticlock ? cond : !cond;\n}\nexport function randomIn(min, max) {\n    if (max == null) {\n        max = min;\n        min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n}\nexport function atan2(start, end) {\n    /*\n     * Calculate the angle between a line containing start and end points (composed\n     * of [x, y] arrays) and the positive x-axis.\n     */\n    return Math.atan2(end[1] - start[1], end[0] - start[0]);\n}\nexport function radians(degrees) {\n    return degrees * (PI / 180);\n}\nexport function degrees(radians) {\n    return radians / (PI / 180);\n}\nexport function compute_angle(angle, units, dir = \"anticlock\") {\n    /**\n     * Convert math CCW(default)/CW angle with units to CW radians (canvas).\n     */\n    const sign = dir == \"anticlock\" ? 1 : -1;\n    return -sign * angle * to_radians_coeff(units);\n}\nexport const resolve_angle = compute_angle;\nexport function invert_angle(angle, units, dir = \"anticlock\") {\n    /**\n     * Convert CW radians (canvas) to math CCW(default)/CW angle with units.\n     */\n    const sign = dir == \"anticlock\" ? 1 : -1;\n    return -sign * angle / to_radians_coeff(units);\n}\nexport function to_radians_coeff(units) {\n    switch (units) {\n        case \"deg\": return PI / 180;\n        case \"rad\": return 1;\n        case \"grad\": return PI / 200;\n        case \"turn\": return 2 * PI;\n    }\n}\nexport function minmax(v0, v1) {\n    return v0 <= v1 ? [v0, v1] : [v1, v0];\n}\nexport function clamp(val, min, max) {\n    return val < min ? min : (val > max ? max : val);\n}\nexport function cycle(val, min, max) {\n    if (val > max) {\n        return min;\n    }\n    if (val < min) {\n        return max;\n    }\n    return val;\n}\nexport function log(x, base = Math.E) {\n    return Math.log(x) / Math.log(base);\n}\nexport function gcd(a, b) {\n    a = Math.abs(a);\n    b = Math.abs(b);\n    while (b != 0) {\n        [a, b] = [b, a % b];\n    }\n    return a;\n}\nexport function lcm(a, ...rest) {\n    for (const b of rest) {\n        a = Math.floor((a * b) / gcd(a, b));\n    }\n    return a;\n}\nexport const float = Symbol(\"float\");\nexport function is_Floating(obj) {\n    return isObject(obj) && float in obj;\n}\nexport class Fraction {\n    static __name__ = \"Fraction\";\n    numer;\n    denom;\n    constructor(numer, denom) {\n        assert(denom != 0, \"Zero divisor\");\n        const div = gcd(numer, denom);\n        const sgn = sign(numer) * sign(denom);\n        this.numer = sgn * abs(numer) / div;\n        this.denom = abs(denom) / div;\n    }\n    [float]() {\n        return this.numer / this.denom;\n    }\n    toString() {\n        return `${this.numer}/${this.denom}`;\n    }\n}\nexport const float32_epsilon = 1.1920928955078125e-7; // IEEE-754\nexport function factorial(x) {\n    let y = 1;\n    for (let i = 2; i <= x; i++) {\n        y *= i;\n    }\n    return y;\n}\nexport function hermite(n) {\n    const poly = new Array(n + 1);\n    poly.fill(0);\n    const fn = factorial(n);\n    for (let k = 0; k <= Math.floor(n / 2); k++) {\n        const c = (-1) ** k * fn / (factorial(k) * factorial(n - 2 * k)) * 2 ** (n - 2 * k);\n        poly[2 * k] = c;\n    }\n    return poly;\n}\nexport function eval_poly(poly, x) {\n    const n = poly.length - 1;\n    let y = 0;\n    let x_n = 1;\n    for (let i = n; i >= 0; i--) {\n        y += x_n * poly[i];\n        x_n *= x;\n    }\n    return y;\n}\n//# sourceMappingURL=math.js.map", "import { clamp } from \"./math\";\nimport { assert, assert_debug } from \"./assert\";\nconst { floor } = Math;\nexport function is_empty(array) {\n    return array.length == 0;\n}\nexport function is_sorted(array) {\n    const n = array.length;\n    if (n == 0) {\n        return true;\n    }\n    let prev = array[0];\n    for (let i = 1; i < n; i++) {\n        const curr = array[i];\n        if (prev <= curr) {\n            prev = curr;\n        }\n        else {\n            return false;\n        }\n    }\n    return true;\n}\nexport function copy(array) {\n    if (Array.isArray(array)) {\n        return array.slice();\n    }\n    else {\n        return new array.constructor(array);\n    }\n}\nexport function splice(array, start, k, ...items) {\n    if (Array.isArray(array)) {\n        const result = copy(array);\n        if (k === undefined) {\n            result.splice(start);\n        }\n        else {\n            result.splice(start, k, ...items);\n        }\n        return result;\n    }\n    const len = array.length;\n    if (start < 0) {\n        start += len;\n    }\n    if (start < 0) {\n        start = 0;\n    }\n    else if (start > len) {\n        start = len;\n    }\n    if (k == null || k > len - start) {\n        k = len - start;\n    }\n    else if (k < 0) {\n        k = 0;\n    }\n    const n = len - k + items.length;\n    const result = new array.constructor(n);\n    let i = 0;\n    for (; i < start; i++) {\n        result[i] = array[i];\n    }\n    for (const item of items) {\n        result[i++] = item;\n    }\n    for (let j = start + k; j < len; j++) {\n        result[i++] = array[j];\n    }\n    return result;\n}\nexport function head(array, n) {\n    return splice(array, n, array.length - n);\n}\nexport function insert(array, item, i) {\n    return splice(array, i, 0, item);\n}\nexport function append(array, item) {\n    return splice(array, array.length, 0, item);\n}\nexport function prepend(array, item) {\n    return splice(array, 0, 0, item);\n}\nexport function index_of(array, item) {\n    return array.indexOf(item);\n}\nexport function includes(array, value) {\n    return array.indexOf(value) !== -1;\n}\nexport const contains = includes;\nexport function subselect(array, indices) {\n    const n = indices.length;\n    const result = new array.constructor(n);\n    for (let i = 0; i < n; i++) {\n        result[i] = array[indices[i]];\n    }\n    return result;\n}\nexport function mul(array, coeff, output) {\n    const n = array.length;\n    const result = output ?? new array.constructor(n);\n    for (let i = 0; i < n; i++) {\n        result[i] = array[i] * coeff;\n    }\n    return result;\n}\nexport function map(array, fn) {\n    const n = array.length;\n    const result = new array.constructor(n);\n    for (let i = 0; i < n; i++) {\n        result[i] = fn(array[i], i, array);\n    }\n    return result;\n}\nexport function inplace_map(array, fn, output) {\n    const n = array.length;\n    const result = output ?? array;\n    for (let i = 0; i < n; i++) {\n        result[i] = fn(array[i], i);\n    }\n}\nexport function filter(array, pred) {\n    const n = array.length;\n    const result = new array.constructor(n);\n    let k = 0;\n    for (let i = 0; i < n; i++) {\n        const value = array[i];\n        if (pred(value, i, array)) {\n            result[k++] = value;\n        }\n    }\n    return head(result, k);\n}\nexport function reduce(array, fn, initial) {\n    const n = array.length;\n    if (initial === undefined && n == 0) {\n        throw new Error(\"can't reduce an empty array without an initial value\");\n    }\n    let value;\n    let i;\n    if (initial === undefined) {\n        value = array[0];\n        i = 1;\n    }\n    else {\n        value = initial;\n        i = 0;\n    }\n    for (; i < n; i++) {\n        value = fn(value, array[i], i, array);\n    }\n    return value;\n}\nexport function sort_by(array, key) {\n    const tmp = Array.from(array, (value, index) => {\n        return { index, key: key(value) };\n    });\n    tmp.sort((left, right) => {\n        const a = left.key;\n        const b = right.key;\n        if (a !== b) {\n            if (a > b) {\n                return 1;\n            }\n            if (a < b) {\n                return -1;\n            }\n        }\n        return left.index - right.index;\n    });\n    return map(array, (_, i) => array[tmp[i].index]);\n}\nexport function min(iterable) {\n    let result = Infinity;\n    for (const value of iterable) {\n        if (!isNaN(value) && value < result) {\n            result = value;\n        }\n    }\n    return result;\n}\nexport function max(iterable) {\n    let result = -Infinity;\n    for (const value of iterable) {\n        if (!isNaN(value) && value > result) {\n            result = value;\n        }\n    }\n    return result;\n}\nexport function minmax(iterable) {\n    let min = +Infinity;\n    let max = -Infinity;\n    for (const value of iterable) {\n        if (!isNaN(value)) {\n            if (value < min) {\n                min = value;\n            }\n            if (value > max) {\n                max = value;\n            }\n        }\n    }\n    return [min, max];\n}\nexport function minmax2(arr, brr) {\n    let a;\n    let b;\n    let a_min = +Infinity;\n    let a_max = -Infinity;\n    let b_min = +Infinity;\n    let b_max = -Infinity;\n    const n = Math.min(arr.length, brr.length);\n    for (let i = 0; i < n; i++) {\n        a = arr[i];\n        b = brr[i];\n        if (!isNaN(a) && !isNaN(b)) {\n            if (a < a_min) {\n                a_min = a;\n            }\n            if (a > a_max) {\n                a_max = a;\n            }\n            if (b < b_min) {\n                b_min = b;\n            }\n            if (b > b_max) {\n                b_max = b;\n            }\n        }\n    }\n    return [a_min, a_max, b_min, b_max];\n}\nexport function min_by(array, key) {\n    if (array.length == 0) {\n        throw new Error(\"min_by() called with an empty array\");\n    }\n    let result = array[0];\n    let result_computed = key(result, 0);\n    for (let i = 1, length = array.length; i < length; i++) {\n        const value = array[i];\n        const computed = key(value, i);\n        if (computed < result_computed) {\n            result = value;\n            result_computed = computed;\n        }\n    }\n    return result;\n}\nexport function max_by(array, key) {\n    if (array.length == 0) {\n        throw new Error(\"max_by() called with an empty array\");\n    }\n    let result = array[0];\n    let result_computed = key(result, 0);\n    for (let i = 1, length = array.length; i < length; i++) {\n        const value = array[i];\n        const computed = key(value, i);\n        if (computed > result_computed) {\n            result = value;\n            result_computed = computed;\n        }\n    }\n    return result;\n}\nexport function sum(array) {\n    let result = 0;\n    for (let i = 0, n = array.length; i < n; i++) {\n        result += array[i];\n    }\n    return result;\n}\nexport function cumsum(array) {\n    const result = new array.constructor(array.length);\n    reduce(array, (a, b, i) => result[i] = a + b, 0);\n    return result;\n}\nexport function every(iter, predicate) {\n    for (const item of iter) {\n        if (!predicate(item)) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function some(iter, predicate) {\n    for (const item of iter) {\n        if (predicate(item)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction _find_index(dir) {\n    return function (array, predicate) {\n        const length = array.length;\n        let index = dir > 0 ? 0 : length - 1;\n        for (; index >= 0 && index < length; index += dir) {\n            if (predicate(array[index])) {\n                return index;\n            }\n        }\n        return -1;\n    };\n}\nexport const find_index = _find_index(1);\nexport const find_last_index = _find_index(-1);\nexport function find(array, predicate) {\n    const index = find_index(array, predicate);\n    return index == -1 ? undefined : array[index];\n}\nexport function find_last(array, predicate) {\n    const index = find_last_index(array, predicate);\n    return index == -1 ? undefined : array[index];\n}\nexport function bisect_left_by(array, value, fn, low = 0, high = array.length) {\n    assert_debug(() => is_sorted(array));\n    assert(0 <= low && high <= array.length);\n    while (low < high) {\n        const mid = floor((low + high) / 2);\n        if (fn(array[mid]) < value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nexport function bisect_right_by(array, value, fn, low = 0, high = array.length) {\n    assert_debug(() => is_sorted(array));\n    assert(0 <= low && high <= array.length);\n    while (low < high) {\n        const mid = floor((low + high) / 2);\n        if (fn(array[mid]) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nexport function bisect_left(array, value, low = 0, high) {\n    return bisect_left_by(array, value, (item) => item, low, high);\n}\nexport function bisect_right(array, value, low = 0, high) {\n    return bisect_right_by(array, value, (item) => item, low, high);\n}\nexport function binary_search(array, value) {\n    const i = bisect_left(array, value);\n    return i != array.length && array[i] == value ? i : null;\n}\nexport const sorted_index = bisect_left;\nexport function bin_counts(data, bin_edges) {\n    const nbins = bin_edges.length - 1;\n    const counts = Array(nbins).fill(0);\n    for (let i = 0; i < data.length; i++) {\n        const sample = data[i];\n        const index = sorted_index(bin_edges, sample);\n        const bin = clamp(index - 1, 0, nbins - 1);\n        counts[bin] += 1;\n    }\n    return counts;\n}\nexport function interpolate(points, x_values, y_values) {\n    // Implementation ported from np.interp\n    const n = points.length;\n    const results = new Array(n);\n    for (let i = 0; i < n; i++) {\n        const point = points[i];\n        if (isNaN(point) || x_values.length == 0) {\n            results[i] = NaN;\n            continue;\n        }\n        const index = left_edge_index(point, x_values);\n        if (index == -1) {\n            results[i] = y_values[0];\n        }\n        else if (index == x_values.length) {\n            results[i] = y_values[y_values.length - 1];\n        }\n        else if (index == x_values.length - 1 || x_values[index] == point) {\n            results[i] = y_values[index];\n        }\n        else {\n            const x0 = x_values[index];\n            const y0 = y_values[index];\n            const x1 = x_values[index + 1];\n            const y1 = y_values[index + 1];\n            results[i] = lerp(point, x0, y0, x1, y1);\n        }\n    }\n    return results;\n}\nfunction lerp(x, x0, y0, x1, y1) {\n    const slope = (y1 - y0) / (x1 - x0);\n    let res = slope * (x - x0) + y0;\n    if (!isFinite(res)) {\n        res = slope * (x - x1) + y1;\n        if (!isFinite(res) && (y0 == y1)) {\n            res = y0;\n        }\n    }\n    return res;\n}\nexport function left_edge_index(point, intervals) {\n    if (point < intervals[0]) {\n        return -1;\n    }\n    if (point > intervals[intervals.length - 1]) {\n        return intervals.length;\n    }\n    if (intervals.length == 1) {\n        // Implies point == intervals[0]\n        return 0;\n    }\n    let leftEdgeIndex = 0;\n    let rightEdgeIndex = intervals.length - 1;\n    while (rightEdgeIndex - leftEdgeIndex != 1) {\n        const indexOfNumberToCompare = leftEdgeIndex + Math.floor((rightEdgeIndex - leftEdgeIndex) / 2);\n        if (point >= intervals[indexOfNumberToCompare]) {\n            leftEdgeIndex = indexOfNumberToCompare;\n        }\n        else {\n            rightEdgeIndex = indexOfNumberToCompare;\n        }\n    }\n    return leftEdgeIndex;\n}\nexport function norm(array, start, end) {\n    const span = end - start;\n    return map(array, (x) => (x - start) / span);\n}\n//# sourceMappingURL=arrayable.js.map", "//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\nimport { randomIn } from \"./math\";\nimport { assert } from \"./assert\";\nimport { isInteger } from \"./types\";\nimport { min, min_by, max_by, includes, filter } from \"./arrayable\";\nexport { map, reduce, min, min_by, max, max_by, sum, cumsum, every, some, find, find_last, find_index, find_last_index, sorted_index, is_empty, includes, contains, sort_by, } from \"./arrayable\";\nconst { slice } = Array.prototype;\nexport function head(array) {\n    if (array.length != 0) {\n        return array[0];\n    }\n    else {\n        throw new Error(\"out of bounds access\");\n    }\n}\nexport function last(array) {\n    if (array.length != 0) {\n        return array[array.length - 1];\n    }\n    else {\n        throw new Error(\"out of bounds access\");\n    }\n}\nexport function copy(array) {\n    return slice.call(array);\n}\nexport function concat(arrays) {\n    return [].concat(...arrays);\n}\nexport function nth(array, index) {\n    return array[index >= 0 ? index : array.length + index];\n}\nexport function zip(...arrays) {\n    if (arrays.length == 0) {\n        return [];\n    }\n    const n = min(arrays.map((a) => a.length));\n    const k = arrays.length;\n    const result = new Array(n);\n    for (let i = 0; i < n; i++) {\n        result[i] = new Array(k);\n        for (let j = 0; j < k; j++) {\n            result[i][j] = arrays[j][i];\n        }\n    }\n    return result;\n}\nexport function unzip(array) {\n    const n = array.length;\n    if (n == 0) {\n        return [];\n    }\n    const k = min(array.map((a) => a.length));\n    const results = Array(k);\n    for (let j = 0; j < k; j++) {\n        results[j] = new Array(n);\n    }\n    for (let i = 0; i < n; i++) {\n        for (let j = 0; j < k; j++) {\n            results[j][i] = array[i][j];\n        }\n    }\n    return results;\n}\nexport function range(start, stop, step = 1) {\n    assert(step > 0, \"'step' must be a positive number\");\n    if (stop == null) {\n        stop = start;\n        start = 0;\n    }\n    const { max, ceil, abs } = Math;\n    const delta = start <= stop ? step : -step;\n    const length = max(ceil(abs(stop - start) / step), 0);\n    const range = new Array(length);\n    for (let i = 0; i < length; i++, start += delta) {\n        range[i] = start;\n    }\n    return range;\n}\nexport function linspace(start, stop, num = 100) {\n    const step = num == 1 ? 0 : (stop - start) / (num - 1);\n    const array = new Array(num);\n    for (let i = 0; i < num; i++) {\n        array[i] = start + step * i;\n    }\n    return array;\n}\nexport function transpose(array) {\n    const rows = array.length;\n    const cols = array[0].length;\n    const transposed = [];\n    for (let j = 0; j < cols; j++) {\n        transposed[j] = [];\n        for (let i = 0; i < rows; i++) {\n            transposed[j][i] = array[i][j];\n        }\n    }\n    return transposed;\n}\nexport function argmin(array) {\n    return min_by(range(array.length), (i) => array[i]);\n}\nexport function argmax(array) {\n    return max_by(range(array.length), (i) => array[i]);\n}\n/**\n * Return the permutation indices for sorting an array.\n */\nexport function argsort(array) {\n    const indices = Array.from(array.keys());\n    indices.sort((a, b) => array[a] - array[b]);\n    return indices;\n}\nexport function uniq(array) {\n    const result = new Set();\n    for (const value of array) {\n        result.add(value);\n    }\n    return [...result];\n}\nexport function uniq_by(array, key) {\n    const result = [];\n    const seen = [];\n    for (const value of array) {\n        const computed = key(value);\n        if (!includes(seen, computed)) {\n            seen.push(computed);\n            result.push(value);\n        }\n    }\n    return result;\n}\nexport function _union(arrays) {\n    const result = new Set();\n    for (const array of arrays) {\n        for (const value of array) {\n            result.add(value);\n        }\n    }\n    return result;\n}\nexport function union(...arrays) {\n    return [..._union(arrays)];\n}\nexport function intersection(array, ...arrays) {\n    const result = [];\n    top: for (const item of array) {\n        if (includes(result, item)) {\n            continue;\n        }\n        for (const other of arrays) {\n            if (!includes(other, item)) {\n                continue top;\n            }\n        }\n        result.push(item);\n    }\n    return result;\n}\nexport function difference(array, ...arrays) {\n    const rest = _union(arrays);\n    return filter(array, (value) => !rest.has(value));\n}\nexport function symmetric_difference(array0, array1) {\n    const set0 = new Set(array0);\n    const set1 = new Set(array1);\n    const result = [];\n    for (const val of set0) {\n        if (!set1.has(val)) {\n            result.push(val);\n        }\n    }\n    for (const val of set1) {\n        if (!set0.has(val)) {\n            result.push(val);\n        }\n    }\n    return result;\n}\nexport function remove_at(array, i) {\n    assert(isInteger(i) && i >= 0);\n    const result = copy(array);\n    result.splice(i, 1);\n    return result;\n}\nexport function remove(array, item) {\n    remove_by(array, (value) => value == item);\n}\nexport function remove_by(array, key) {\n    for (let i = 0; i < array.length;) {\n        if (key(array[i])) {\n            array.splice(i, 1);\n        }\n        else {\n            i++;\n        }\n    }\n}\nexport function clear(array) {\n    array.splice(0, array.length);\n}\nexport function split(array, separator) {\n    const chunks = [];\n    const n = array.length;\n    let i = 0;\n    let j = 0;\n    while (j < n) {\n        if (array[j] === separator) {\n            chunks.push(array.slice(i, j));\n            i = ++j;\n        }\n        else {\n            ++j;\n        }\n    }\n    chunks.push(array.slice(i));\n    return chunks;\n}\n// Shuffle a collection, using the modern version of the\n// [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\nexport function shuffle(array) {\n    const length = array.length;\n    const shuffled = new Array(length);\n    for (let i = 0; i < length; i++) {\n        const rand = randomIn(0, i);\n        if (rand !== i) {\n            shuffled[i] = shuffled[rand];\n        }\n        shuffled[rand] = array[i];\n    }\n    return shuffled;\n}\nexport function pairwise(array, fn) {\n    const n = array.length;\n    const result = new Array(n - 1);\n    for (let i = 0; i < n - 1; i++) {\n        result[i] = fn(array[i], array[i + 1]);\n    }\n    return result;\n}\nexport function elementwise(array0, array1, fn) {\n    const n = Math.min(array0.length, array1.length);\n    const result = Array(n);\n    for (let i = 0; i < n; i++) {\n        result[i] = fn(array0[i], array1[i]);\n    }\n    return result;\n}\nexport function reversed(array) {\n    const n = array.length;\n    const result = new Array(n);\n    for (let i = 0; i < n; i++) {\n        result[n - i - 1] = array[i];\n    }\n    return result;\n}\nexport function repeat(value, n) {\n    const result = new Array(n).fill(value);\n    return result;\n}\nexport function resize(array, new_length, fill_value) {\n    if (array.length >= new_length) {\n        return array.slice(0, new_length);\n    }\n    else {\n        const suffix = new Array(new_length - array.length);\n        if (fill_value !== undefined) {\n            suffix.fill(fill_value);\n        }\n        return array.concat(suffix);\n    }\n}\n//# sourceMappingURL=array.js.map", "import { isPlainObject } from \"./types\";\nimport { union } from \"./array\";\nexport const { assign } = Object;\nexport const extend = assign;\nexport function to_object(obj) {\n    return isPlainObject(obj) ? obj : Object.fromEntries(obj);\n}\nexport function keys(obj) {\n    return obj instanceof Map ? [...obj.keys()] : Object.keys(obj);\n}\nexport function values(obj) {\n    return obj instanceof Map ? [...obj.values()] : Object.values(obj);\n}\nexport function entries(obj) {\n    return obj instanceof Map ? [...obj.entries()] : Object.entries(obj);\n}\nexport const typed_keys = Object.keys;\nexport const typed_values = Object.values;\nexport const typed_entries = Object.entries;\nexport function clone(obj) {\n    return obj instanceof Map ? new Map(obj) : { ...obj };\n}\nexport function merge(obj0, obj1) {\n    /*\n    * Returns an object with the array values for obj1 and obj2 unioned by key.\n    */\n    const result = new Map();\n    const keys = [...obj0.keys(), ...obj1.keys()];\n    for (const key of keys) {\n        const v0 = obj0.get(key);\n        const v1 = obj1.get(key);\n        const arr0 = v0 === undefined ? [] : v0;\n        const arr1 = v1 === undefined ? [] : v1;\n        result.set(key, union(arr0, arr1));\n    }\n    return result;\n}\nexport function size(obj) {\n    return obj instanceof Map ? obj.size : Object.keys(obj).length;\n}\nexport function is_empty(obj) {\n    return size(obj) == 0;\n}\nconst { hasOwnProperty } = Object.prototype;\nexport class PlainObjectProxy {\n    obj;\n    static __name__ = \"PlainObjectProxy\";\n    constructor(obj) {\n        this.obj = obj;\n    }\n    [Symbol.toStringTag] = \"PlainObjectProxy\";\n    clear() {\n        for (const key of this.keys()) {\n            delete this.obj[key];\n        }\n    }\n    delete(key) {\n        const exists = this.has(key);\n        if (exists) {\n            delete this.obj[key];\n        }\n        return exists;\n    }\n    has(key) {\n        return hasOwnProperty.call(this.obj, key);\n    }\n    get(key) {\n        return this.has(key) ? this.obj[key] : undefined;\n    }\n    set(key, value) {\n        this.obj[key] = value;\n        return this;\n    }\n    get size() {\n        return size(this.obj);\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n    *keys() {\n        yield* keys(this.obj);\n    }\n    *values() {\n        yield* values(this.obj);\n    }\n    *entries() {\n        yield* entries(this.obj);\n    }\n    forEach(callback, that) {\n        for (const [key, value] of this.entries()) {\n            callback.call(that, value, key, this);\n        }\n    }\n}\nexport function dict(obj) {\n    return isPlainObject(obj) ? new PlainObjectProxy(obj) : obj;\n}\n//# sourceMappingURL=object.js.map", "// This is based on https://github.com/pimterry/loglevel\nimport { isString } from \"./util/types\";\nimport { values } from \"./util/object\";\nimport { version } from \"../version\";\nconst _loggers = {};\nexport class LogLevel {\n    name;\n    level;\n    method;\n    static __name__ = \"LogLevel\";\n    constructor(name, level, method) {\n        this.name = name;\n        this.level = level;\n        this.method = method;\n    }\n}\nexport class Logger {\n    static __name__ = \"Logger\";\n    static TRACE = new LogLevel(\"trace\", 0, \"trace\");\n    static DEBUG = new LogLevel(\"debug\", 1, \"debug\");\n    static INFO = new LogLevel(\"info\", 2, \"info\");\n    static WARN = new LogLevel(\"warn\", 6, \"warn\");\n    static ERROR = new LogLevel(\"error\", 7, \"error\");\n    static FATAL = new LogLevel(\"fatal\", 8, \"error\");\n    static OFF = new LogLevel(\"off\", 9, \"log\");\n    static log_levels = {\n        trace: Logger.TRACE,\n        debug: Logger.DEBUG,\n        info: Logger.INFO,\n        warn: Logger.WARN,\n        error: Logger.ERROR,\n        fatal: Logger.FATAL,\n        off: Logger.OFF,\n    };\n    static get levels() {\n        return Object.keys(Logger.log_levels);\n    }\n    static get(name, level = Logger.INFO) {\n        if (name.length > 0) {\n            if (name in _loggers) {\n                return _loggers[name];\n            }\n            else {\n                return _loggers[name] = new Logger(name, level);\n            }\n        }\n        else {\n            throw new TypeError(\"Logger.get() expects a non-empty string name and an optional log-level\");\n        }\n    }\n    _name;\n    _log_level;\n    constructor(name, level = Logger.INFO) {\n        this._name = name;\n        this.set_level(level);\n    }\n    get level() {\n        return this.get_level();\n    }\n    get_level() {\n        return this._log_level;\n    }\n    set_level(log_level) {\n        if (log_level instanceof LogLevel) {\n            this._log_level = log_level;\n        }\n        else if (Logger.log_levels.hasOwnProperty(log_level)) {\n            this._log_level = Logger.log_levels[log_level];\n        }\n        else {\n            throw new Error(\"Logger.set_level() expects a log-level object or a string name of a log-level\");\n        }\n        const prefix = `[${this._name}]`;\n        for (const { level, method } of values(Logger.log_levels)) {\n            if (level < this._log_level.level || this._log_level.level === Logger.OFF.level) {\n                this[method] = function () { };\n            }\n            else {\n                this[method] = _method_factory(method, prefix);\n            }\n        }\n        this.log = _method_factory(\"log\", prefix);\n    }\n    log(..._args) { }\n    trace(..._args) { }\n    debug(..._args) { }\n    info(..._args) { }\n    warn(..._args) { }\n    error(..._args) { }\n}\nfunction _method_factory(method_name, prefix) {\n    const method = console[method_name];\n    const fn = typeof method != \"undefined\" ? method : console.log;\n    return fn.bind(console, prefix);\n}\nexport const logger = Logger.get(`bokeh ${version}`);\nexport function set_log_level(level) {\n    const previous_level = logger.level;\n    if (isString(level) && !(level in Logger.log_levels)) {\n        logger.log(`unrecognized logging level '${level}' passed to Bokeh.set_log_level(), ignoring`);\n        logger.log(`valid log levels are: ${Logger.levels.join(\", \")}`);\n    }\n    else {\n        logger.log(`setting log level to: '${isString(level) ? level : level.level}'`);\n        logger.set_level(level);\n    }\n    return previous_level;\n}\nexport function with_log_level(level, fn) {\n    const original = set_log_level(level);\n    try {\n        fn();\n    }\n    finally {\n        set_log_level(original);\n    }\n}\n//# sourceMappingURL=logging.js.map", "const _named_colors = {\n    aliceblue: 0xf0f8ffff,\n    antiquewhite: 0xfaebd7ff,\n    aqua: 0x00ffffff,\n    aquamarine: 0x7fffd4ff,\n    azure: 0xf0ffffff,\n    beige: 0xf5f5dcff,\n    bisque: 0xffe4c4ff,\n    black: 0x000000ff,\n    blanchedalmond: 0xffebcdff,\n    blue: 0x0000ffff,\n    blueviolet: 0x8a2be2ff,\n    brown: 0xa52a2aff,\n    burlywood: 0xdeb887ff,\n    cadetblue: 0x5f9ea0ff,\n    chartreuse: 0x7fff00ff,\n    chocolate: 0xd2691eff,\n    coral: 0xff7f50ff,\n    cornflowerblue: 0x6495edff,\n    cornsilk: 0xfff8dcff,\n    crimson: 0xdc143cff,\n    cyan: 0x00ffffff,\n    darkblue: 0x00008bff,\n    darkcyan: 0x008b8bff,\n    darkgoldenrod: 0xb8860bff,\n    darkgray: 0xa9a9a9ff,\n    darkgreen: 0x006400ff,\n    darkgrey: 0xa9a9a9ff,\n    darkkhaki: 0xbdb76bff,\n    darkmagenta: 0x8b008bff,\n    darkolivegreen: 0x556b2fff,\n    darkorange: 0xff8c00ff,\n    darkorchid: 0x9932ccff,\n    darkred: 0x8b0000ff,\n    darksalmon: 0xe9967aff,\n    darkseagreen: 0x8fbc8fff,\n    darkslateblue: 0x483d8bff,\n    darkslategray: 0x2f4f4fff,\n    darkslategrey: 0x2f4f4fff,\n    darkturquoise: 0x00ced1ff,\n    darkviolet: 0x9400d3ff,\n    deeppink: 0xff1493ff,\n    deepskyblue: 0x00bfffff,\n    dimgray: 0x696969ff,\n    dimgrey: 0x696969ff,\n    dodgerblue: 0x1e90ffff,\n    firebrick: 0xb22222ff,\n    floralwhite: 0xfffaf0ff,\n    forestgreen: 0x228b22ff,\n    fuchsia: 0xff00ffff,\n    gainsboro: 0xdcdcdcff,\n    ghostwhite: 0xf8f8ffff,\n    gold: 0xffd700ff,\n    goldenrod: 0xdaa520ff,\n    gray: 0x808080ff,\n    green: 0x008000ff,\n    greenyellow: 0xadff2fff,\n    grey: 0x808080ff,\n    honeydew: 0xf0fff0ff,\n    hotpink: 0xff69b4ff,\n    indianred: 0xcd5c5cff,\n    indigo: 0x4b0082ff,\n    ivory: 0xfffff0ff,\n    khaki: 0xf0e68cff,\n    lavender: 0xe6e6faff,\n    lavenderblush: 0xfff0f5ff,\n    lawngreen: 0x7cfc00ff,\n    lemonchiffon: 0xfffacdff,\n    lightblue: 0xadd8e6ff,\n    lightcoral: 0xf08080ff,\n    lightcyan: 0xe0ffffff,\n    lightgoldenrodyellow: 0xfafad2ff,\n    lightgray: 0xd3d3d3ff,\n    lightgreen: 0x90ee90ff,\n    lightgrey: 0xd3d3d3ff,\n    lightpink: 0xffb6c1ff,\n    lightsalmon: 0xffa07aff,\n    lightseagreen: 0x20b2aaff,\n    lightskyblue: 0x87cefaff,\n    lightslategray: 0x778899ff,\n    lightslategrey: 0x778899ff,\n    lightsteelblue: 0xb0c4deff,\n    lightyellow: 0xffffe0ff,\n    lime: 0x00ff00ff,\n    limegreen: 0x32cd32ff,\n    linen: 0xfaf0e6ff,\n    magenta: 0xff00ffff,\n    maroon: 0x800000ff,\n    mediumaquamarine: 0x66cdaaff,\n    mediumblue: 0x0000cdff,\n    mediumorchid: 0xba55d3ff,\n    mediumpurple: 0x9370dbff,\n    mediumseagreen: 0x3cb371ff,\n    mediumslateblue: 0x7b68eeff,\n    mediumspringgreen: 0x00fa9aff,\n    mediumturquoise: 0x48d1ccff,\n    mediumvioletred: 0xc71585ff,\n    midnightblue: 0x191970ff,\n    mintcream: 0xf5fffaff,\n    mistyrose: 0xffe4e1ff,\n    moccasin: 0xffe4b5ff,\n    navajowhite: 0xffdeadff,\n    navy: 0x000080ff,\n    oldlace: 0xfdf5e6ff,\n    olive: 0x808000ff,\n    olivedrab: 0x6b8e23ff,\n    orange: 0xffa500ff,\n    orangered: 0xff4500ff,\n    orchid: 0xda70d6ff,\n    palegoldenrod: 0xeee8aaff,\n    palegreen: 0x98fb98ff,\n    paleturquoise: 0xafeeeeff,\n    palevioletred: 0xdb7093ff,\n    papayawhip: 0xffefd5ff,\n    peachpuff: 0xffdab9ff,\n    peru: 0xcd853fff,\n    pink: 0xffc0cbff,\n    plum: 0xdda0ddff,\n    powderblue: 0xb0e0e6ff,\n    purple: 0x800080ff,\n    rebeccapurple: 0x663399ff,\n    red: 0xff0000ff,\n    rosybrown: 0xbc8f8fff,\n    royalblue: 0x4169e1ff,\n    saddlebrown: 0x8b4513ff,\n    salmon: 0xfa8072ff,\n    sandybrown: 0xf4a460ff,\n    seagreen: 0x2e8b57ff,\n    seashell: 0xfff5eeff,\n    sienna: 0xa0522dff,\n    silver: 0xc0c0c0ff,\n    skyblue: 0x87ceebff,\n    slateblue: 0x6a5acdff,\n    slategray: 0x708090ff,\n    slategrey: 0x708090ff,\n    snow: 0xfffafaff,\n    springgreen: 0x00ff7fff,\n    steelblue: 0x4682b4ff,\n    tan: 0xd2b48cff,\n    teal: 0x008080ff,\n    thistle: 0xd8bfd8ff,\n    tomato: 0xff6347ff,\n    turquoise: 0x40e0d0ff,\n    violet: 0xee82eeff,\n    wheat: 0xf5deb3ff,\n    white: 0xffffffff,\n    whitesmoke: 0xf5f5f5ff,\n    yellow: 0xffff00ff,\n    yellowgreen: 0x9acd32ff,\n};\nexport const named_colors = _named_colors;\nexport function is_named_color(color) {\n    return color in named_colors;\n}\n//# sourceMappingURL=svg_colors.js.map", "import { named_colors, is_named_color } from \"./svg_colors\";\nimport { clamp } from \"./math\";\nimport { isInteger, isString, isArray } from \"./types\";\nconst { round, sqrt } = Math;\nexport function byte(v) {\n    return clamp(round(v), 0, 255);\n}\nexport function transparent() {\n    return [0, 0, 0, 0];\n}\nexport function encode_rgba([r, g, b, a]) {\n    return r << 24 | g << 16 | b << 8 | a;\n}\nexport function decode_rgba(rgba) {\n    const r = (rgba >> 24) & 0xff;\n    const g = (rgba >> 16) & 0xff;\n    const b = (rgba >> 8) & 0xff;\n    const a = rgba & 0xff;\n    return [r, g, b, a];\n}\nexport function color2rgba(color, alpha = 1.0) {\n    const [r, g, b, a] = (() => {\n        if (color == null) {\n            return transparent();\n        }\n        else if (isInteger(color)) {\n            return decode_rgba(color);\n        }\n        else if (isString(color)) {\n            const [r, g, b, a] = css4_parse(color) ?? transparent();\n            return [r, g, b, byte(a * 255)];\n        }\n        else {\n            if (color.length == 2) {\n                const [name, alpha] = color;\n                return color2rgba(name, alpha);\n            }\n            else {\n                const [r, g, b, a = 1.0] = color;\n                return [r, g, b, byte(a * 255)];\n            }\n        }\n    })();\n    return [r, g, b, byte(alpha * a)];\n}\nconst _hex_table = {\n    0: \"0\", 1: \"1\", 2: \"2\", 3: \"3\", 4: \"4\", 5: \"5\", 6: \"6\", 7: \"7\", 8: \"8\", 9: \"9\",\n    10: \"a\", 11: \"b\", 12: \"c\", 13: \"d\", 14: \"e\", 15: \"f\",\n};\nfunction hex(v) {\n    return _hex_table[v >> 4] + _hex_table[v & 0xf];\n}\nexport function rgba2css([r, g, b, a]) {\n    const alpha = a == 255 ? \"\" : ` / ${a / 255}`;\n    return `rgb(${r} ${g} ${b}${alpha})`;\n}\nexport function color2css(color, alpha) {\n    if (isString(color) && (alpha == null || alpha == 1.0)) {\n        return color; // passthrough to persist color in its original form\n    }\n    else {\n        const [r, g, b, a] = color2rgba(color, alpha);\n        return rgba2css([r, g, b, a]);\n    }\n}\nexport function color2hex(color, alpha) {\n    const [r, g, b, a] = color2rgba(color, alpha);\n    const rgb = `#${hex(r)}${hex(g)}${hex(b)}`;\n    return a == 255 ? rgb : `${rgb}${hex(a)}`;\n}\nexport function color2hexrgb(color) {\n    const [r, g, b] = color2rgba(color);\n    return `#${hex(r)}${hex(g)}${hex(b)}`;\n}\n/*\nlet _last_color = \"transparent\"\nlet _last_alpha = 1.0\nlet _last_rgba = transparent()\n\nexport function _color2rgba(color: string | null, alpha: number = 1.0): RGBA {\n  if (color == _last_color && alpha == _last_alpha)\n    return [..._last_rgba]\n\n  const [r, g, b, a] = parsed\n  const rgba: RGBA = [r, g, b, a == 255 ? byte(alpha*255) : a]\n  _last_color = color\n  _last_alpha = alpha\n  _last_rgba = rgba\n  return rgba\n}\n*/\nconst rgb_modern = /^rgba?\\(\\s*(?<r>[^\\s,]+?)\\s+(?<g>[^\\s,]+?)\\s+(?<b>[^\\s,]+?)(?:\\s*\\/\\s*(?<a>[^\\s,]+?))?\\s*\\)$/;\nconst rgb_legacy = /^rgba?\\(\\s*(?<r>[^\\s,]+?)\\s*,\\s*(?<g>[^\\s,]+?)\\s*,\\s*(?<b>[^\\s,]+?)(?:\\s*,\\s*(?<a>[^\\s,]+?))?\\s*\\)$/;\nconst css4_normalize = (() => {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext(\"2d\");\n    const gradient = ctx.createLinearGradient(0, 0, 1, 1);\n    return (color) => {\n        ctx.fillStyle = gradient; // lgtm [js/useless-assignment-to-property]\n        ctx.fillStyle = color;\n        const style = ctx.fillStyle;\n        return style != gradient ? style : null;\n    };\n})();\nexport function css4_parse(color) {\n    /**\n      Parses CSS4 color strings:\n  \n      - transparent\n      - named color\n      - #RRGGBB[AA]\n      - #RGB[A]\n      - rgb[a](R G B[ / A])\n      - rgb[a](R, G, B[, A])\n      - other CSS4 syntax (browser dependent)\n  \n    */\n    color = color.trim().toLowerCase();\n    if (color == \"\") {\n        return null;\n    }\n    else if (color == \"transparent\") {\n        return transparent();\n    }\n    else if (is_named_color(color)) {\n        const [r, g, b, a] = decode_rgba(named_colors[color]);\n        return [r, g, b, a / 255];\n    }\n    else if (color[0] == \"#\") {\n        const v = Number(`0x${color.substring(1)}`);\n        if (isNaN(v)) {\n            return null;\n        }\n        switch (color.length - 1) {\n            case 3: {\n                const r = (v >> 8) & 0xf;\n                const g = (v >> 4) & 0xf;\n                const b = (v >> 0) & 0xf;\n                const rr = (r << 4) | r;\n                const gg = (g << 4) | g;\n                const bb = (b << 4) | b;\n                return [rr, gg, bb, 1.0];\n            }\n            case 4: {\n                const r = (v >> 12) & 0xf;\n                const g = (v >> 8) & 0xf;\n                const b = (v >> 4) & 0xf;\n                const a = (v >> 0) & 0xf;\n                const rr = (r << 4) | r;\n                const gg = (g << 4) | g;\n                const bb = (b << 4) | b;\n                const aa = (a << 4) | a;\n                return [rr, gg, bb, aa / 255];\n            }\n            case 6: {\n                const rr = (v >> 16) & 0xff;\n                const gg = (v >> 8) & 0xff;\n                const bb = (v >> 0) & 0xff;\n                return [rr, gg, bb, 1.0];\n            }\n            case 8: {\n                const rr = (v >> 24) & 0xff;\n                const gg = (v >> 16) & 0xff;\n                const bb = (v >> 8) & 0xff;\n                const aa = (v >> 0) & 0xff;\n                return [rr, gg, bb, aa / 255];\n            }\n        }\n    }\n    else if (color.startsWith(\"rgb\")) {\n        const result = color.match(rgb_modern) ?? color.match(rgb_legacy);\n        if (result?.groups != null) {\n            let { r, g, b, a = \"1\" } = result.groups;\n            const rp = r.endsWith(\"%\");\n            const gp = g.endsWith(\"%\");\n            const bp = b.endsWith(\"%\");\n            const ap = a.endsWith(\"%\");\n            if (!(rp && gp && bp || (!rp && !gp && !bp))) {\n                return null;\n            }\n            if (rp) {\n                r = r.slice(0, -1);\n            }\n            if (gp) {\n                g = g.slice(0, -1);\n            }\n            if (bp) {\n                b = b.slice(0, -1);\n            }\n            if (ap) {\n                a = a.slice(0, -1);\n            }\n            let R = Number(r);\n            let G = Number(g);\n            let B = Number(b);\n            let A = Number(a);\n            if (isNaN(R + G + B + A)) {\n                return null;\n            }\n            if (rp) {\n                R = 255 * (R / 100);\n            }\n            if (gp) {\n                G = 255 * (G / 100);\n            }\n            if (bp) {\n                B = 255 * (B / 100);\n            }\n            A = ap ? A / 100 : A;\n            R = byte(R);\n            G = byte(G);\n            B = byte(B);\n            return [R, G, B, A];\n        }\n    }\n    else {\n        const style = css4_normalize(color);\n        if (style != null) {\n            return css4_parse(style);\n        }\n    }\n    return null;\n}\nexport function is_Color(value) {\n    if (isInteger(value)) {\n        return true;\n    }\n    if (isString(value) && css4_parse(value) != null) {\n        return true;\n    }\n    if (isArray(value) && (value.length == 3 || value.length == 4)) {\n        return true;\n    }\n    return false;\n}\nexport function is_dark([r, g, b]) {\n    const l = 1 - (0.299 * r + 0.587 * g + 0.114 * b) / 255;\n    return l >= 0.6;\n}\nexport function brightness(color) {\n    // Perceived brightness of a color in [0, 1] range.\n    // http://alienryderflex.com/hsp.html\n    const [r, g, b] = color2rgba(color);\n    return sqrt(0.299 * r ** 2 + 0.587 * g ** 2 + 0.114 * b ** 2) / 255;\n}\nexport function luminance(color) {\n    // Relative luminance of a color in [0, 1] range.\n    // https://en.wikipedia.org/wiki/Relative_luminance\n    const [r, g, b] = color2rgba(color);\n    return (0.2126 * r ** 2.2 + 0.7152 * g ** 2.2 + 0.0722 * b ** 2.2) / 255 ** 2.2;\n}\n//# sourceMappingURL=color.js.map", "import { logger } from \"../logging\";\nimport { color2css } from \"../util/color\";\nfunction _horz(ctx, h, h2) {\n    ctx.moveTo(0, h2 + 0.5);\n    ctx.lineTo(h, h2 + 0.5);\n    ctx.stroke();\n}\nfunction _vert(ctx, h, h2) {\n    ctx.moveTo(h2 + 0.5, 0);\n    ctx.lineTo(h2 + 0.5, h);\n    ctx.stroke();\n}\nfunction _x(ctx, h) {\n    ctx.moveTo(0, h);\n    ctx.lineTo(h, 0);\n    ctx.stroke();\n    ctx.moveTo(0, 0);\n    ctx.lineTo(h, h);\n    ctx.stroke();\n}\nexport const hatch_aliases = {\n    \" \": \"blank\",\n    \".\": \"dot\",\n    o: \"ring\",\n    \"-\": \"horizontal_line\",\n    \"|\": \"vertical_line\",\n    \"+\": \"cross\",\n    \"\\\"\": \"horizontal_dash\",\n    \":\": \"vertical_dash\",\n    \"@\": \"spiral\",\n    \"/\": \"right_diagonal_line\",\n    \"\\\\\": \"left_diagonal_line\",\n    x: \"diagonal_cross\",\n    \",\": \"right_diagonal_dash\",\n    \"`\": \"left_diagonal_dash\",\n    v: \"horizontal_wave\",\n    \">\": \"vertical_wave\",\n    \"*\": \"criss_cross\",\n};\nexport function get_pattern(layer, pattern, color, alpha, scale, weight) {\n    layer.resize(scale, scale);\n    layer.prepare();\n    create_hatch_canvas(layer.ctx, pattern, color, alpha, scale, weight);\n    return layer.canvas;\n}\nfunction create_hatch_canvas(ctx, hatch_pattern, hatch_color, hatch_alpha, hatch_scale, hatch_weight) {\n    const h = hatch_scale;\n    const h2 = h / 2;\n    const h4 = h2 / 2;\n    const color = color2css(hatch_color, hatch_alpha);\n    ctx.strokeStyle = color;\n    ctx.fillStyle = color;\n    ctx.lineCap = \"square\";\n    ctx.lineWidth = hatch_weight;\n    switch (hatch_aliases[hatch_pattern] ?? hatch_pattern) {\n        // we should not need these if code conditions on hatch.doit, but\n        // include them here just for completeness\n        case \"blank\":\n            break;\n        case \"dot\":\n            ctx.arc(h2, h2, h2 / 2, 0, 2 * Math.PI, true);\n            ctx.fill();\n            break;\n        case \"ring\":\n            ctx.arc(h2, h2, h2 / 2, 0, 2 * Math.PI, true);\n            ctx.stroke();\n            break;\n        case \"horizontal_line\":\n            _horz(ctx, h, h2);\n            break;\n        case \"vertical_line\":\n            _vert(ctx, h, h2);\n            break;\n        case \"cross\":\n            _horz(ctx, h, h2);\n            _vert(ctx, h, h2);\n            break;\n        case \"horizontal_dash\":\n            _horz(ctx, h2, h2);\n            break;\n        case \"vertical_dash\":\n            _vert(ctx, h2, h2);\n            break;\n        case \"spiral\": {\n            const h30 = h / 30;\n            ctx.moveTo(h2, h2);\n            for (let i = 0; i < 360; i++) {\n                const angle = 0.1 * i;\n                const x = h2 + (h30 * angle) * Math.cos(angle);\n                const y = h2 + (h30 * angle) * Math.sin(angle);\n                ctx.lineTo(x, y);\n            }\n            ctx.stroke();\n            break;\n        }\n        case \"right_diagonal_line\":\n            ctx.moveTo(-h4 + 0.5, h);\n            ctx.lineTo(h4 + 0.5, 0);\n            ctx.stroke();\n            ctx.moveTo(h4 + 0.5, h);\n            ctx.lineTo(3 * h4 + 0.5, 0);\n            ctx.stroke();\n            ctx.moveTo(3 * h4 + 0.5, h);\n            ctx.lineTo(5 * h4 + 0.5, 0);\n            ctx.stroke();\n            break;\n        case \"left_diagonal_line\":\n            ctx.moveTo(h4 + 0.5, h);\n            ctx.lineTo(-h4 + 0.5, 0);\n            ctx.stroke();\n            ctx.moveTo(3 * h4 + 0.5, h);\n            ctx.lineTo(h4 + 0.5, 0);\n            ctx.stroke();\n            ctx.moveTo(5 * h4 + 0.5, h);\n            ctx.lineTo(3 * h4 + 0.5, 0);\n            ctx.stroke();\n            break;\n        case \"diagonal_cross\":\n            _x(ctx, h);\n            break;\n        case \"right_diagonal_dash\":\n            ctx.moveTo(h4 + 0.5, 3 * h4 + 0.5);\n            ctx.lineTo(3 * h4 + 0.5, h4 + 0.5);\n            ctx.stroke();\n            break;\n        case \"left_diagonal_dash\":\n            ctx.moveTo(h4 + 0.5, h4 + 0.5);\n            ctx.lineTo(3 * h4 + 0.5, 3 * h4 + 0.5);\n            ctx.stroke();\n            break;\n        case \"horizontal_wave\":\n            ctx.moveTo(0, h4);\n            ctx.lineTo(h2, 3 * h4);\n            ctx.lineTo(h, h4);\n            ctx.stroke();\n            break;\n        case \"vertical_wave\":\n            ctx.moveTo(h4, 0);\n            ctx.lineTo(3 * h4, h2);\n            ctx.lineTo(h4, h);\n            ctx.stroke();\n            break;\n        case \"criss_cross\":\n            _x(ctx, h);\n            _horz(ctx, h, h2);\n            _vert(ctx, h, h2);\n            break;\n        default:\n            logger.warn(`unknown hatch pattern: ${hatch_pattern}`);\n    }\n}\n//# sourceMappingURL=patterns.js.map", "import { hatch_aliases } from \"../../../core/visuals/patterns\";\nexport function interleave(arr0, arr1, n, alt, out) {\n    for (let i = 0; i < n; i++) {\n        const v0 = arr0[i];\n        const v1 = arr1[i];\n        if (isFinite(v0 + v1)) {\n            out[2 * i] = v0;\n            out[2 * i + 1] = v1;\n        }\n        else {\n            out[2 * i] = alt;\n            out[2 * i + 1] = alt;\n        }\n    }\n}\n// WebGL shaders use integers for caps, joins and hatching.\nexport const cap_lookup = { butt: 0, round: 1, square: 2 };\nexport const join_lookup = { miter: 0, round: 1, bevel: 2 };\nconst hatch_pattern_lookup = {\n    blank: 0,\n    dot: 1,\n    ring: 2,\n    horizontal_line: 3,\n    vertical_line: 4,\n    cross: 5,\n    horizontal_dash: 6,\n    vertical_dash: 7,\n    spiral: 8,\n    right_diagonal_line: 9,\n    left_diagonal_line: 10,\n    diagonal_cross: 11,\n    right_diagonal_dash: 12,\n    left_diagonal_dash: 13,\n    horizontal_wave: 14,\n    vertical_wave: 15,\n    criss_cross: 16,\n};\nexport function hatch_pattern_to_index(pattern) {\n    return hatch_pattern_lookup[hatch_aliases[pattern] ?? pattern] ?? 0;\n}\nexport function marker_type_to_size_hint(marker_type) {\n    // Marker size hint is only used here and in the marker fragment shader.\n    switch (marker_type) {\n        case \"dash\":\n            return 1;\n        case \"dot\":\n            return 2;\n        case \"diamond\":\n        case \"diamond_cross\":\n        case \"diamond_dot\":\n            return 3;\n        case \"hex\":\n        case \"hex_tile\":\n            return 4;\n        case \"square_pin\":\n            return 5;\n        case \"inverted_triangle\":\n        case \"ngon\":\n        case \"triangle\":\n        case \"triangle_dot\":\n            return 6;\n        case \"triangle_pin\":\n            return 7;\n        case \"star\":\n        case \"star_dot\":\n            return 8;\n        default:\n            return 0;\n    }\n}\n//# sourceMappingURL=webgl_utils.js.map", "import { cap_lookup, hatch_pattern_to_index, join_lookup } from \"./webgl_utils\";\nimport { assert } from \"../../../core/util/assert\";\nimport { color2rgba } from \"../../../core/util/color\";\n// Arrays are sent to GPU using ReGL Buffer objects.  CPU-side arrays used to\n// update the Buffers are also kept for reuse to avoid unnecessary reallocation.\nclass WrappedBuffer {\n    static __name__ = \"WrappedBuffer\";\n    regl_wrapper;\n    buffer;\n    array;\n    is_scalar;\n    // Number of buffer elements per rendered primitive, e.g. for RGBA buffers this is 4\n    // as a single color is 4 x uint8 = 32-bit in total.\n    elements_per_primitive;\n    constructor(regl_wrapper, elements_per_primitive = 1) {\n        this.regl_wrapper = regl_wrapper;\n        this.is_scalar = true;\n        this.elements_per_primitive = elements_per_primitive;\n    }\n    // Return array if already know it exists and is the correct length.\n    get_array() {\n        assert(this.array != null, \"WrappedBuffer not yet initialised\");\n        return this.array;\n    }\n    // Return array of correct size, creating it if necessary.\n    // Must call update() when finished setting the array values.\n    get_sized_array(length) {\n        if (this.array == null || this.array.length != length) {\n            this.array = this.new_array(length);\n        }\n        return this.array;\n    }\n    is_normalized() {\n        return false;\n    }\n    get length() {\n        return this.array != null ? this.array.length : 0;\n    }\n    set_from_array(numbers) {\n        const len = numbers.length;\n        const array = this.get_sized_array(len);\n        for (let i = 0; i < len; i++) {\n            array[i] = numbers[i];\n        }\n        this.update();\n    }\n    set_from_prop(prop) {\n        const len = prop.is_Scalar() ? 1 : prop.length;\n        const array = this.get_sized_array(len);\n        for (let i = 0; i < len; i++) {\n            array[i] = prop.get(i);\n        }\n        this.update(prop.is_Scalar());\n    }\n    set_from_scalar(scalar) {\n        this.get_sized_array(1).fill(scalar);\n        this.update(true);\n    }\n    // Return a ReGL AttributeConfig that corresponds to one value for each glyph\n    // or the same value for a number of glyphs.  A buffer passed to ReGL for\n    // instanced rendering can be used for multiple rendering calls and the\n    // important attributes for this are the offset (in bytes) into the buffer\n    // and the divisor, which is the number of instances rendered before the\n    // offset is advanced to the next buffer element.\n    // to_attribute_config() is used for the common case of a single render call\n    // per buffer with visual properties that are either scalar or vector.\n    // Visual properties of scatter markers are an good example, and scalar_divisor\n    // would be the number of markers rendered.\n    to_attribute_config(offset = 0, scalar_divisor = 1) {\n        return {\n            buffer: this.buffer,\n            divisor: this.is_scalar ? scalar_divisor : 1,\n            normalized: this.is_normalized(),\n            offset: offset * this.bytes_per_element(),\n        };\n    }\n    // to_attribute_config_nested() is used for the more complicated case in\n    // which the vectorisation is nested, such as rendering multi_lines where\n    // each visual property has a single buffer that is used multiple times, once\n    // for each of the constituent lines.  Vector properties are therefore\n    // constant for each constituent line (composed of multiple rendered\n    // instances) but change between lines.\n    to_attribute_config_nested(offset_vector = 0, divisor = 1) {\n        return {\n            buffer: this.buffer,\n            divisor: divisor * this.elements_per_primitive,\n            normalized: this.is_normalized(),\n            offset: this.is_scalar ? 0 : offset_vector * this.bytes_per_element() * this.elements_per_primitive,\n        };\n    }\n    // Update ReGL buffer with data contained in array in preparation for passing\n    // it to the GPU.  This function must be called after get_sized_array().\n    update(is_scalar = false) {\n        // Update buffer with data contained in array.\n        if (this.buffer == null) {\n            // Create new buffer.\n            this.buffer = this.regl_wrapper.buffer({\n                usage: \"dynamic\",\n                data: this.array,\n            });\n        }\n        else {\n            // Reuse existing buffer.\n            this.buffer({ data: this.array });\n        }\n        this.is_scalar = is_scalar;\n    }\n}\nexport class Float32Buffer extends WrappedBuffer {\n    static __name__ = \"Float32Buffer\";\n    bytes_per_element() {\n        return Float32Array.BYTES_PER_ELEMENT;\n    }\n    new_array(len) {\n        return new Float32Array(len);\n    }\n}\nexport class Uint8Buffer extends WrappedBuffer {\n    static __name__ = \"Uint8Buffer\";\n    bytes_per_element() {\n        return Uint8Array.BYTES_PER_ELEMENT;\n    }\n    new_array(len) {\n        return new Uint8Array(len);\n    }\n    set_from_color(color_prop, alpha_prop) {\n        const is_scalar = color_prop.is_Scalar() && alpha_prop.is_Scalar();\n        const ncolors = is_scalar ? 1 : color_prop.length;\n        const array = this.get_sized_array(4 * ncolors);\n        for (let i = 0; i < ncolors; i++) {\n            const [r, g, b, a] = color2rgba(color_prop.get(i), alpha_prop.get(i));\n            array[4 * i] = r;\n            array[4 * i + 1] = g;\n            array[4 * i + 2] = b;\n            array[4 * i + 3] = a;\n        }\n        this.update(is_scalar);\n    }\n    set_from_hatch_pattern(hatch_pattern_prop) {\n        const len = hatch_pattern_prop.is_Scalar() ? 1 : hatch_pattern_prop.length;\n        const array = this.get_sized_array(len);\n        for (let i = 0; i < len; i++) {\n            array[i] = hatch_pattern_to_index(hatch_pattern_prop.get(i));\n        }\n        this.update(hatch_pattern_prop.is_Scalar());\n    }\n    set_from_line_cap(line_cap_prop) {\n        const len = line_cap_prop.is_Scalar() ? 1 : line_cap_prop.length;\n        const array = this.get_sized_array(len);\n        for (let i = 0; i < len; i++) {\n            array[i] = cap_lookup[line_cap_prop.get(i)];\n        }\n        this.update(line_cap_prop.is_Scalar());\n    }\n    set_from_line_join(line_join_prop) {\n        const len = line_join_prop.is_Scalar() ? 1 : line_join_prop.length;\n        const array = this.get_sized_array(len);\n        for (let i = 0; i < len; i++) {\n            array[i] = join_lookup[line_join_prop.get(i)];\n        }\n        this.update(line_join_prop.is_Scalar());\n    }\n}\n// Normalized refers to optional WebGL behaviour of automatically converting\n// Uint8 values that are passed to shaders into floats in the range 0 to 1.\nexport class NormalizedUint8Buffer extends Uint8Buffer {\n    static __name__ = \"NormalizedUint8Buffer\";\n    is_normalized() {\n        return true;\n    }\n}\n//# sourceMappingURL=buffer.js.map", "export class BaseGLGlyph {\n    regl_wrapper;\n    glyph;\n    static __name__ = \"BaseGLGlyph\";\n    nvertices = 0;\n    size_changed = false;\n    data_changed = false;\n    data_mapped = false;\n    visuals_changed = false;\n    constructor(regl_wrapper, glyph) {\n        this.regl_wrapper = regl_wrapper;\n        this.glyph = glyph;\n    }\n    set_data_changed() {\n        const { data_size } = this.glyph;\n        if (data_size != this.nvertices) {\n            this.nvertices = data_size;\n            this.size_changed = true;\n        }\n        this.data_changed = true;\n    }\n    set_data_mapped() {\n        this.data_mapped = true;\n    }\n    set_visuals_changed() {\n        this.visuals_changed = true;\n    }\n    render(_ctx, indices, mainglyph) {\n        if (indices.length == 0) {\n            return;\n        }\n        const { width, height } = this.glyph.renderer.plot_view.canvas_view.webgl.canvas;\n        const { pixel_ratio } = this.glyph.renderer.plot_view.canvas_view;\n        const trans = {\n            pixel_ratio, // Needed to scale antialiasing\n            width: width / pixel_ratio,\n            height: height / pixel_ratio,\n        };\n        this.draw(indices, mainglyph, trans);\n    }\n}\n//# sourceMappingURL=base.js.map"],
  "mappings": "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",
  "names": ["min", "max", "sign", "sign", "min", "max", "result", "head", "copy", "max", "abs", "range", "keys", "is_empty", "sqrt", "r", "g", "b", "a", "alpha"]
}
