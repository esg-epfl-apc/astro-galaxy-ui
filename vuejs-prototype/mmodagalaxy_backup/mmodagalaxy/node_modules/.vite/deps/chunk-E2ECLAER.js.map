{
  "version": 3,
  "sources": ["../../@bokeh/bokehjs/build/js/lib/models/glyphs/webgl/line_gl.js"],
  "sourcesContent": ["import { Float32Buffer, Uint8Buffer } from \"./buffer\";\nimport { SingleLineGL } from \"./single_line\";\nexport class LineGL extends SingleLineGL {\n    glyph;\n    static __name__ = \"LineGL\";\n    constructor(regl_wrapper, glyph) {\n        super(regl_wrapper, glyph);\n        this.glyph = glyph;\n    }\n    draw(indices, main_glyph, transform) {\n        this._draw_impl(indices, transform, main_glyph.glglyph);\n    }\n    _get_show_buffer(indices, main_gl_glyph) {\n        // If displaying all indices use main glyph's _show.\n        // Otherwise use this._show which is updated from the indices and uses\n        // main glyph's show to identify if (x, y) are finite or not.\n        const main_show = main_gl_glyph._show;\n        let show = main_show;\n        if (indices.length != main_show.length - 1) {\n            const nonselection = this.glyph.parent.nonselection_glyph == this.glyph;\n            const n = main_show.length;\n            const main_show_array = main_show.get_sized_array(n);\n            if (this._show == null) {\n                this._show = new Uint8Buffer(this.regl_wrapper);\n            }\n            const show_array = this._show.get_sized_array(n); // equal to npoints+1\n            show_array.fill(0);\n            let iprev = indices[0]; // Previous index\n            if (nonselection && iprev > 0) {\n                show_array[iprev] = main_show_array[iprev]; // Start of first line\n            }\n            for (let k = 1; k < indices.length; k++) {\n                const i = indices[k];\n                if (i == iprev + 1) {\n                    show_array[i] = main_show_array[i];\n                }\n                else if (nonselection) {\n                    // Gap in indices, end previous line and start new one\n                    show_array[iprev + 1] = main_show_array[iprev + 1];\n                    show_array[i] = main_show_array[i];\n                }\n                iprev = i;\n            }\n            // iprev is now the last index\n            if (nonselection && iprev != n - 2) {\n                show_array[iprev + 1] = main_show_array[iprev + 1]; // End of last line\n            }\n            this._show.update();\n            show = this._show;\n        }\n        return show;\n    }\n    _get_visuals() {\n        return this.glyph.visuals.line;\n    }\n    _set_data_points() {\n        const sx = this.glyph.sx;\n        const sy = this.glyph.sy;\n        const npoints = sx.length;\n        if (this._points == null) {\n            this._points = new Float32Buffer(this.regl_wrapper);\n        }\n        const points_array = this._points.get_sized_array((npoints + 2) * 2);\n        this._set_points_single(points_array, sx, sy);\n        this._points.update();\n        return points_array;\n    }\n}\n//# sourceMappingURL=line_gl.js.map"],
  "mappings": ";;;;;;;;;;;;AAEO,IAAM,SAAN,cAAqB,aAAa;AAAA,EAGrC,YAAY,cAAc,OAAO;AAC7B,UAAM,cAAc,KAAK;AAH7B;AAII,SAAK,QAAQ;AAAA,EACjB;AAAA,EACA,KAAK,SAAS,YAAY,WAAW;AACjC,SAAK,WAAW,SAAS,WAAW,WAAW,OAAO;AAAA,EAC1D;AAAA,EACA,iBAAiB,SAAS,eAAe;AAIrC,UAAM,YAAY,cAAc;AAChC,QAAI,OAAO;AACX,QAAI,QAAQ,UAAU,UAAU,SAAS,GAAG;AACxC,YAAM,eAAe,KAAK,MAAM,OAAO,sBAAsB,KAAK;AAClE,YAAM,IAAI,UAAU;AACpB,YAAM,kBAAkB,UAAU,gBAAgB,CAAC;AACnD,UAAI,KAAK,SAAS,MAAM;AACpB,aAAK,QAAQ,IAAI,YAAY,KAAK,YAAY;AAAA,MAClD;AACA,YAAM,aAAa,KAAK,MAAM,gBAAgB,CAAC;AAC/C,iBAAW,KAAK,CAAC;AACjB,UAAI,QAAQ,QAAQ,CAAC;AACrB,UAAI,gBAAgB,QAAQ,GAAG;AAC3B,mBAAW,KAAK,IAAI,gBAAgB,KAAK;AAAA,MAC7C;AACA,eAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACrC,cAAM,IAAI,QAAQ,CAAC;AACnB,YAAI,KAAK,QAAQ,GAAG;AAChB,qBAAW,CAAC,IAAI,gBAAgB,CAAC;AAAA,QACrC,WACS,cAAc;AAEnB,qBAAW,QAAQ,CAAC,IAAI,gBAAgB,QAAQ,CAAC;AACjD,qBAAW,CAAC,IAAI,gBAAgB,CAAC;AAAA,QACrC;AACA,gBAAQ;AAAA,MACZ;AAEA,UAAI,gBAAgB,SAAS,IAAI,GAAG;AAChC,mBAAW,QAAQ,CAAC,IAAI,gBAAgB,QAAQ,CAAC;AAAA,MACrD;AACA,WAAK,MAAM,OAAO;AAClB,aAAO,KAAK;AAAA,IAChB;AACA,WAAO;AAAA,EACX;AAAA,EACA,eAAe;AACX,WAAO,KAAK,MAAM,QAAQ;AAAA,EAC9B;AAAA,EACA,mBAAmB;AACf,UAAM,KAAK,KAAK,MAAM;AACtB,UAAM,KAAK,KAAK,MAAM;AACtB,UAAM,UAAU,GAAG;AACnB,QAAI,KAAK,WAAW,MAAM;AACtB,WAAK,UAAU,IAAI,cAAc,KAAK,YAAY;AAAA,IACtD;AACA,UAAM,eAAe,KAAK,QAAQ,iBAAiB,UAAU,KAAK,CAAC;AACnE,SAAK,mBAAmB,cAAc,IAAI,EAAE;AAC5C,SAAK,QAAQ,OAAO;AACpB,WAAO;AAAA,EACX;AACJ;AA/DI,cAFS,QAEF,YAAW;",
  "names": []
}
