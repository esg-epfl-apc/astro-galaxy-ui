{
  "version": 3,
  "sources": ["../../@bokeh/bokehjs/build/js/lib/models/glyphs/webgl/base_marker.js"],
  "sourcesContent": ["import { BaseGLGlyph } from \"./base\";\nimport { Float32Buffer, NormalizedUint8Buffer, Uint8Buffer } from \"./buffer\";\nimport { marker_type_to_size_hint } from \"./webgl_utils\";\n// Abstract base class for markers. All markers share the same GLSL, except for\n// one function in the fragment shader that defines the marker geometry and is\n// enabled through a #define.\nexport class BaseMarkerGL extends BaseGLGlyph {\n    static __name__ = \"BaseMarkerGL\";\n    _antialias = 1.5;\n    // data properties\n    _centers = new Float32Buffer(this.regl_wrapper);\n    _widths = new Float32Buffer(this.regl_wrapper);\n    _heights = new Float32Buffer(this.regl_wrapper);\n    _angles = new Float32Buffer(this.regl_wrapper);\n    _auxs = new Float32Buffer(this.regl_wrapper);\n    // used by RectGL\n    _border_radius = [0.0, 0.0, 0.0, 0.0];\n    _border_radius_nonzero = false;\n    // indices properties\n    _show = new Uint8Buffer(this.regl_wrapper);\n    _show_all = false;\n    // visual properties\n    _linewidths = new Float32Buffer(this.regl_wrapper);\n    _line_caps = new Uint8Buffer(this.regl_wrapper);\n    _line_joins = new Uint8Buffer(this.regl_wrapper);\n    _line_rgba = new NormalizedUint8Buffer(this.regl_wrapper, 4);\n    _fill_rgba = new NormalizedUint8Buffer(this.regl_wrapper, 4);\n    // Only needed if have hatch pattern, either all or none of the buffers are set.\n    _have_hatch = false;\n    _hatch_patterns = new Uint8Buffer(this.regl_wrapper);\n    _hatch_scales = new Float32Buffer(this.regl_wrapper);\n    _hatch_weights = new Float32Buffer(this.regl_wrapper);\n    _hatch_rgba = new NormalizedUint8Buffer(this.regl_wrapper, 4);\n    // Avoiding use of nan or inf to represent missing data in webgl as shaders may\n    // have reduced floating point precision. So here using a large-ish negative\n    // value instead.\n    static missing_point = -10000;\n    marker_props(main_gl_glyph) {\n        return {\n            width: main_gl_glyph._widths,\n            height: main_gl_glyph._heights,\n            angle: main_gl_glyph._angles,\n            aux: main_gl_glyph._auxs,\n            border_radius: main_gl_glyph._border_radius,\n        };\n    }\n    get line_props() {\n        return {\n            linewidth: this._linewidths,\n            line_color: this._line_rgba,\n            line_cap: this._line_caps,\n            line_join: this._line_joins,\n        };\n    }\n    get fill_props() {\n        return {\n            fill_color: this._fill_rgba,\n        };\n    }\n    get hatch_props() {\n        return {\n            hatch_pattern: this._hatch_patterns,\n            hatch_scale: this._hatch_scales,\n            hatch_weight: this._hatch_weights,\n            hatch_color: this._hatch_rgba,\n        };\n    }\n    _draw_one_marker_type(marker_type, transform, main_gl_glyph) {\n        const props_no_hatch = {\n            scissor: this.regl_wrapper.scissor,\n            viewport: this.regl_wrapper.viewport,\n            canvas_size: [transform.width, transform.height],\n            size_hint: marker_type_to_size_hint(marker_type),\n            nmarkers: main_gl_glyph.nvertices,\n            antialias: this._antialias / transform.pixel_ratio,\n            show: this._show,\n            center: main_gl_glyph._centers,\n            ...this.marker_props(main_gl_glyph),\n            ...this.line_props,\n            ...this.fill_props,\n        };\n        if (this._have_hatch) {\n            const props_hatch = { ...props_no_hatch, ...this.hatch_props };\n            const draw = this.regl_wrapper.marker_hatch(marker_type);\n            draw(props_hatch);\n        }\n        else {\n            const draw = this.regl_wrapper.marker_no_hatch(marker_type);\n            draw(props_no_hatch);\n        }\n    }\n    _did_set_once = false;\n    set_data() {\n        if (!this._did_set_once) {\n            this._did_set_once = true;\n            this._set_once();\n        }\n        this._set_data();\n    }\n    _set_once() { }\n    _set_visuals() {\n        const { line, fill, hatch } = this._get_visuals();\n        this._linewidths.set_from_prop(line.line_width);\n        this._line_caps.set_from_line_cap(line.line_cap);\n        this._line_joins.set_from_line_join(line.line_join);\n        this._line_rgba.set_from_color(line.line_color, line.line_alpha);\n        this._fill_rgba.set_from_color(fill.fill_color, fill.fill_alpha);\n        this._have_hatch = hatch.doit;\n        if (this._have_hatch) {\n            this._hatch_patterns.set_from_hatch_pattern(hatch.hatch_pattern);\n            this._hatch_scales.set_from_prop(hatch.hatch_scale);\n            this._hatch_weights.set_from_prop(hatch.hatch_weight);\n            this._hatch_rgba.set_from_color(hatch.hatch_color, hatch.hatch_alpha);\n        }\n    }\n}\n//# sourceMappingURL=base_marker.js.map"],
  "mappings": "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",
  "names": []
}
